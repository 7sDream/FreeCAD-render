OpenShadingLanguage 1.00
# Compiled by oslc 1.11.14
# options: -O2 -DNDEBUG -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/ -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include -o /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/appleseed/as_blend_normal.oso
shader as_blend_normal	%meta{string,help,"Tangent space normal blend utility node."} %meta{string,icon,"asBlendNormal.png"} %meta{string,URL,"https://appleseed.readthedocs.io/projects/appleseed-maya/en/latest/shaders/utilities/as_blend_normal.html"} %meta{string,as_node_name,"asBlendNormal"} %meta{string,as_category,"utility"} %meta{string,as_max_class_id,"1585865021 797245718"} %meta{string,as_max_plugin_type,"texture"} %meta{int,as_maya_type_id,1210889} %meta{string,as_maya_classification,"drawdb/shader:rendernode/appleseed/utility"}
param	normal	in_base_normal	0 0 0		%meta{string,as_maya_attribute_name,"baseNormal"} %meta{string,as_maya_attribute_short_name,"bnr"} %meta{string,label,"Base Normal"} %meta{string,page,"Base Normal"} %meta{string,help,"The base tangent space normal map."} %meta{int,divider,1}  %read{3,5} %write{2147483647,-1}
param	string	in_base_normal_mode	"Unsigned"		%meta{string,as_maya_attribute_name,"baseNormalMode"} %meta{string,as_maya_attribute_short_name,"brm"} %meta{string,widget,"popup"} %meta{string,options,"Unsigned|Signed"} %meta{string,label,"Normal Map Mode"} %meta{string,page,"Base Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{1,1} %write{2147483647,-1}
param	int	in_base_normal_flip_r	0		%meta{string,as_maya_attribute_name,"baseNormalFlipR"} %meta{string,as_maya_attribute_short_name,"bfr"} %meta{string,widget,"checkBox"} %meta{string,label,"Flip R"} %meta{string,page,"Base Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{6,6} %write{2147483647,-1}
param	int	in_base_normal_flip_g	0		%meta{string,as_maya_attribute_name,"baseNormalFlipG"} %meta{string,as_maya_attribute_short_name,"bfg"} %meta{string,widget,"checkBox"} %meta{string,label,"Flip G"} %meta{string,page,"Base Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{10,10} %write{2147483647,-1}
param	int	in_base_normal_swap_rg	0		%meta{string,as_maya_attribute_name,"baseNormalSwapRG"} %meta{string,as_maya_attribute_short_name,"bsw"} %meta{string,widget,"checkBox"} %meta{string,label,"Swap RG"} %meta{string,page,"Base Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{14,14} %write{2147483647,-1}
param	normal	in_detail_normal	0 0 0		%meta{string,as_maya_attribute_name,"detailNormal"} %meta{string,as_maya_attribute_short_name,"dno"} %meta{string,label,"Detail Normal"} %meta{string,page,"Detail Normal"} %meta{string,help,"The detail tangent space normal to blend over the base."} %meta{int,divider,1}  %read{21,23} %write{2147483647,-1}
param	string	in_detail_normal_mode	"Unsigned"		%meta{string,as_maya_attribute_name,"detailNormalMode"} %meta{string,as_maya_attribute_short_name,"dnm"} %meta{string,widget,"popup"} %meta{string,options,"Unsigned|Signed"} %meta{string,label,"Normal Map Mode"} %meta{string,page,"Detail Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{19,19} %write{2147483647,-1}
param	int	in_detail_normal_flip_r	0		%meta{string,as_maya_attribute_name,"detailNormalFlipR"} %meta{string,as_maya_attribute_short_name,"dfr"} %meta{string,widget,"checkBox"} %meta{string,label,"Flip R"} %meta{string,page,"Detail Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{24,24} %write{2147483647,-1}
param	int	in_detail_normal_flip_g	0		%meta{string,as_maya_attribute_name,"detailNormalFlipG"} %meta{string,as_maya_attribute_short_name,"dfg"} %meta{string,widget,"checkBox"} %meta{string,label,"Flip G"} %meta{string,page,"Detail Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{28,28} %write{2147483647,-1}
param	int	in_detail_normal_swap_rg	0		%meta{string,as_maya_attribute_name,"detailNormalSwapRG"} %meta{string,as_maya_attribute_short_name,"dsw"} %meta{string,widget,"checkBox"} %meta{string,label,"Swap RG"} %meta{string,page,"Detail Normal"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{32,32} %write{2147483647,-1}
param	float	in_detail_normal_weight	1		%meta{string,as_maya_attribute_name,"detailNormalWeight"} %meta{string,as_maya_attribute_short_name,"dwe"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Blending Weight"} %meta{string,page,"Blending"} %meta{string,help,"Detail normal blending weight."} %meta{int,divider,1}  %read{43,47} %write{2147483647,-1}
param	vector	Tn	0 0 0		%meta{int,lockgeom,0} %meta{string,widget,"null"} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{2147483647,-1} %write{2147483647,-1}
param	vector	Bn	0 0 0		%meta{int,lockgeom,0} %meta{string,widget,"null"} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{2147483647,-1} %write{2147483647,-1}
oparam	normal	out_normal	0 0 0		%meta{string,as_maya_attribute_name,"outNormal"} %meta{string,as_maya_attribute_short_name,"on"} %meta{string,widget,"null"} %meta{string,label,"Output Normal"} %meta{string,help,"Output unsigned tangent space normal map"}  %read{56,56} %write{0,57} %initexpr
local	normal	baseN	%read{7,52} %write{4,41}
local	float	___368_tmp	%read{18,18} %write{15,15}
local	normal	detailN	%read{25,54} %write{22,49}
local	float	___369_tmp	%read{36,36} %write{33,33}
local	normal	O	%read{55,55} %write{54,54}
const	color	$const1	0 0 0		%read{0,0} %write{2147483647,-1}
const	string	$const2	"Unsigned"		%read{1,19} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	normal	$const3	2 2 2		%read{3,21} %write{2147483647,-1}
temp	normal	$tmp3	%read{4,4} %write{3,3}
const	normal	$const4	1 1 1		%read{4,22} %write{2147483647,-1}
const	int	$const5	0		%read{7,45} %write{2147483647,-1}
temp	float	$tmp5	%read{8,8} %write{7,7}
temp	float	$tmp6	%read{9,9} %write{8,8}
const	float	$const7	-1		%read{8,30} %write{2147483647,-1}
const	int	$const8	1		%read{11,49} %write{2147483647,-1}
temp	float	$tmp7	%read{12,12} %write{11,11}
temp	float	$tmp8	%read{13,13} %write{12,12}
temp	float	$tmp9	%read{17,17} %write{16,16}
temp	int	$tmp10	%read{20,20} %write{19,19}
temp	normal	$tmp12	%read{22,22} %write{21,21}
temp	float	$tmp14	%read{26,26} %write{25,25}
temp	float	$tmp15	%read{27,27} %write{26,26}
temp	float	$tmp16	%read{30,30} %write{29,29}
temp	float	$tmp17	%read{31,31} %write{30,30}
temp	float	$tmp18	%read{35,35} %write{34,34}
const	int	$const9	2		%read{39,52} %write{2147483647,-1}
temp	float	$tmp19	%read{40,40} %write{39,39}
temp	float	$tmp20	%read{41,41} %write{40,40}
const	float	$const10	1		%read{40,40} %write{2147483647,-1}
temp	float	$tmp21	%read{44,44} %write{42,42}
temp	float	$tmp22	%read{44,44} %write{43,43}
temp	float	$tmp23	%read{45,45} %write{44,44}
temp	float	$tmp24	%read{48,48} %write{46,46}
temp	float	$tmp25	%read{48,48} %write{47,47}
temp	float	$tmp26	%read{49,49} %write{48,48}
temp	float	$tmp27	%read{51,51} %write{50,50}
temp	normal	$tmp28	%read{53,53} %write{51,51}
temp	float	$tmp29	%read{53,53} %write{52,52}
temp	normal	$tmp30	%read{54,54} %write{53,53}
const	normal	$const11	0.5 0.5 0.5		%read{56,57} %write{2147483647,-1}
temp	normal	$tmp32	%read{57,57} %write{56,56}
code out_normal
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:204
#     output normal out_normal = color(0)
	assign		out_normal $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl"} %line{204} %argrw{"wr"}
code ___main___
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:214
#     normal baseN = (in_base_normal_mode == "Unsigned")
	eq		$tmp1 in_base_normal_mode $const2 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl"} %line{214} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:215
#         ? in_base_normal * normal(2) - normal(1)
	if		$tmp1 5 6 	%line{215} %argrw{"r"}
	mul		$tmp3 in_base_normal $const3 	%argrw{"wrr"}
	sub		baseN $tmp3 $const4 	%argrw{"wrr"}
	assign		baseN in_base_normal 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:218
#     if (in_base_normal_flip_r) baseN[0] *= -1;
	if		in_base_normal_flip_r 10 10 	%line{218} %argrw{"r"}
	compref		$tmp5 baseN $const5 	%argrw{"wrr"}
	mul		$tmp6 $tmp5 $const7 	%argrw{"wrr"}
	compassign	baseN $const5 $tmp6 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:219
#     if (in_base_normal_flip_g) baseN[1] *= -1;
	if		in_base_normal_flip_g 14 14 	%line{219} %argrw{"r"}
	compref		$tmp7 baseN $const8 	%argrw{"wrr"}
	mul		$tmp8 $tmp7 $const7 	%argrw{"wrr"}
	compassign	baseN $const8 $tmp8 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:221
#     if (in_base_normal_swap_rg)
	if		in_base_normal_swap_rg 19 19 	%line{221} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:223
#         float tmp = baseN[0];
	compref		___368_tmp baseN $const5 	%line{223} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:224
#         baseN[0] = baseN[1];
	compref		$tmp9 baseN $const8 	%line{224} %argrw{"wrr"}
	compassign	baseN $const5 $tmp9 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:225
#         baseN[1] = tmp;
	compassign	baseN $const8 ___368_tmp 	%line{225} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:228
#     normal detailN = (in_detail_normal_mode == "Unsigned")
	eq		$tmp10 in_detail_normal_mode $const2 	%line{228} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:229
#         ? in_detail_normal * normal(2) - normal(1)
	if		$tmp10 23 24 	%line{229} %argrw{"r"}
	mul		$tmp12 in_detail_normal $const3 	%argrw{"wrr"}
	sub		detailN $tmp12 $const4 	%argrw{"wrr"}
	assign		detailN in_detail_normal 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:232
#     if (in_detail_normal_flip_r) detailN[0] *= -1;
	if		in_detail_normal_flip_r 28 28 	%line{232} %argrw{"r"}
	compref		$tmp14 detailN $const5 	%argrw{"wrr"}
	mul		$tmp15 $tmp14 $const7 	%argrw{"wrr"}
	compassign	detailN $const5 $tmp15 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:233
#     if (in_detail_normal_flip_g) detailN[1] *= -1;
	if		in_detail_normal_flip_g 32 32 	%line{233} %argrw{"r"}
	compref		$tmp16 detailN $const8 	%argrw{"wrr"}
	mul		$tmp17 $tmp16 $const7 	%argrw{"wrr"}
	compassign	detailN $const8 $tmp17 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:235
#     if (in_detail_normal_swap_rg)
	if		in_detail_normal_swap_rg 37 37 	%line{235} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:237
#         float tmp = detailN[0];
	compref		___369_tmp detailN $const5 	%line{237} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:238
#         detailN[0] = detailN[1];
	compref		$tmp18 detailN $const8 	%line{238} %argrw{"wrr"}
	compassign	detailN $const5 $tmp18 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:239
#         detailN[1] = tmp;
	compassign	detailN $const8 ___369_tmp 	%line{239} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:242
#     baseN = normalize(baseN);
	normalize	baseN baseN 	%line{242} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:243
#     detailN = normalize(detailN);
	normalize	detailN detailN 	%line{243} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:245
#     baseN[2] += 1;
	compref		$tmp19 baseN $const9 	%line{245} %argrw{"wrr"}
	add		$tmp20 $tmp19 $const10 	%argrw{"wrr"}
	compassign	baseN $const9 $tmp20 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:246
#     detailN[0] *= -in_detail_normal_weight;
	compref		$tmp21 detailN $const5 	%line{246} %argrw{"wrr"}
	neg		$tmp22 in_detail_normal_weight 	%argrw{"wr"}
	mul		$tmp23 $tmp21 $tmp22 	%argrw{"wrr"}
	compassign	detailN $const5 $tmp23 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:247
#     detailN[1] *= -in_detail_normal_weight;
	compref		$tmp24 detailN $const8 	%line{247} %argrw{"wrr"}
	neg		$tmp25 in_detail_normal_weight 	%argrw{"wr"}
	mul		$tmp26 $tmp24 $tmp25 	%argrw{"wrr"}
	compassign	detailN $const8 $tmp26 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:249
#     normal O = baseN * dot(baseN, detailN) / baseN[2] - detailN;
	dot		$tmp27 baseN detailN 	%line{249} %argrw{"wrr"}
	mul		$tmp28 baseN $tmp27 	%argrw{"wrr"}
	compref		$tmp29 baseN $const9 	%argrw{"wrr"}
	div		$tmp30 $tmp28 $tmp29 	%argrw{"wrr"}
	sub		O $tmp30 detailN 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:251
#     out_normal = normalize(O);
	normalize	out_normal O 	%line{251} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_blend_normal.osl:252
#     out_normal = out_normal * normal(0.5) + normal(0.5);
	mul		$tmp32 out_normal $const11 	%line{252} %argrw{"wrr"}
	add		out_normal $tmp32 $const11 	%argrw{"wrr"}
	end

OpenShadingLanguage 1.00
# Compiled by oslc 1.11.14
# options: -O2 -DNDEBUG -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/ -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include -o /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/appleseed/as_triplanar.oso
shader as_triplanar	%meta{string,help,"Tri-planar projection node."} %meta{string,icon,"asTriPlanar.png"} %meta{string,URL,"https://appleseed.readthedocs.io/projects/appleseed-maya/en/latest/shaders/texture/as_triplanar.html"} %meta{string,as_node_name,"asTriPlanar"} %meta{string,as_category,"texture3d"} %meta{string,as_max_class_id,"925310807 310517888"} %meta{string,as_max_plugin_type,"texture"} %meta{int,as_maya_type_id,1210853} %meta{string,as_maya_classification,"drawdb/shader:rendernode/appleseed/utility"}
param	string	in_blend_mode	"Color"		%meta{string,as_maya_attribute_name,"blendMode"} %meta{string,as_maya_attribute_short_name,"blm"} %meta{string,widget,"popup"} %meta{string,options,"Color|Tangent Normal"} %meta{string,label,"Blend Mode"} %meta{string,page,"Projection"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Blend colors, or tangent space normal maps using reoriented normal mapping."} %meta{int,divider,1} %meta{int,as_max_param_id,0}  %read{549,3802} %write{2147483647,-1}
param	float	in_blend_softness	0.100000001		%meta{string,as_maya_attribute_name,"blendSoftness"} %meta{string,as_maya_attribute_short_name,"bam"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Blend Softness"} %meta{string,page,"Projection"} %meta{int,divider,1} %meta{int,as_max_param_id,1}  %read{393,393} %write{2147483647,-1}
param	point	in_surface_point	0 0 0		%meta{string,as_maya_attribute_name,"surfacePoint"} %meta{string,as_maya_attribute_short_name,"p"} %meta{string,label,"Surface Point"} %meta{string,page,"Projection"} %meta{int,divider,1} %meta{int,as_max_param_id,3}  %read{3,3} %write{0,0} %derivs %initexpr
param	string	in_space	"World Space"		%meta{string,as_maya_attribute_name,"space"} %meta{string,as_maya_attribute_short_name,"spa"} %meta{string,widget,"popup"} %meta{string,options,"Object Space|World Space"} %meta{string,label,"Coordinate Space"} %meta{string,page,"Projection"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,as_max_param_id,4}  %read{4,4} %write{2147483647,-1}
param	normal	in_normal	0 0 0		%meta{string,as_maya_attribute_name,"normalCamera"} %meta{string,as_maya_attribute_short_name,"n"} %meta{string,label,"Surface Normal"} %meta{string,page,"Bump"} %meta{int,as_max_param_id,5}  %read{2,2} %write{1,1} %initexpr
param	matrix	in_placement_matrix	1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1		%meta{string,as_maya_attribute_name,"placementMatrix"} %meta{string,as_maya_attribute_short_name,"pm"} %meta{string,widget,"null"} %meta{string,label,"Placement Matrix"} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,as_max_param_id,6}  %read{7,24} %write{2147483647,-1} %derivs
param	int	in_enable_cms	1		%meta{string,as_maya_attribute_name,"enableCms"} %meta{string,as_maya_attribute_short_name,"sms"} %meta{string,label,"Enable CMS"} %meta{string,page,"Color Management"} %meta{string,widget,"checkBox"} %meta{string,help,"Enable color management. Ideally you use *.tx textures already converted instead, hence this is disabled by default."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1} %meta{int,as_max_param_id,7}  %read{606,3860} %write{2147483647,-1}
param	string	in_workingspace_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"workingSpaceRGBPrimaries"} %meta{string,as_maya_attribute_short_name,"swp"} %meta{string,label,"Rendering RGB Primaries"} %meta{string,page,"Color Management"} %meta{string,widget,"popup"} %meta{string,options,"sRGB/Rec.709|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Working or rendering space RGB primaries. Note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."} %meta{int,as_max_param_id,8}  %read{898,5045} %write{2147483647,-1}
param	color	in_x_axis_color	1 0 0		%meta{string,as_maya_attribute_name,"xAxisColor"} %meta{string,as_maya_attribute_short_name,"xac"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Solid Color"} %meta{string,page,"Projection.X Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,9}  %read{419,2024} %write{2147483647,-1}
param	string	in_x_axis_filename	""		%meta{string,as_maya_attribute_name,"xAxisFilename"} %meta{string,as_maya_attribute_short_name,"xaf"} %meta{string,widget,"filename"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Texture Filename"} %meta{string,page,"Projection.X Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,10}  %read{404,547} %write{2147483647,-1}
param	float	in_x_axis_width	1		%meta{string,as_maya_attribute_name,"xAxisWidth"} %meta{string,as_maya_attribute_short_name,"xaw"} %meta{float,min,0} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Horizontal Frequency"} %meta{string,page,"Projection.X Axis"} %meta{int,as_max_param_id,11}  %read{530,530} %write{2147483647,-1} %derivs
param	float	in_x_axis_height	1		%meta{string,as_maya_attribute_name,"xAxisHeight"} %meta{string,as_maya_attribute_short_name,"xah"} %meta{float,min,0} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Vertical Frequency"} %meta{string,page,"Projection.X Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,12}  %read{533,533} %write{2147483647,-1} %derivs
param	float	in_x_axis_horizontal_offset	0		%meta{string,as_maya_attribute_name,"xAxisHorizontalOffset"} %meta{string,as_maya_attribute_short_name,"xho"} %meta{float,softmin,-1} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Horizontal Offset"} %meta{string,page,"Projection.X Axis"} %meta{int,as_max_param_id,13}  %read{536,536} %write{2147483647,-1} %derivs
param	float	in_x_axis_vertical_offset	0		%meta{string,as_maya_attribute_name,"xAxisVerticalOffset"} %meta{string,as_maya_attribute_short_name,"xvo"} %meta{float,softmin,-1} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Vertical Offset"} %meta{string,page,"Projection.X Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,14}  %read{539,539} %write{2147483647,-1} %derivs
param	float	in_x_axis_rotation_angle	0		%meta{string,as_maya_attribute_name,"xAxisRotationAngle"} %meta{string,as_maya_attribute_short_name,"xra"} %meta{float,softmin,-360} %meta{float,softmax,360} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Rotation"} %meta{string,page,"Projection.X Axis"} %meta{string,help,"Rotation angle in degrees."} %meta{int,divider,1} %meta{int,as_max_param_id,15}  %read{480,489} %write{2147483647,-1} %derivs
param	int	in_x_axis_swrap	0		%meta{string,as_maya_attribute_name,"xAxisSWrap"} %meta{string,as_maya_attribute_short_name,"xsw"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"S Wrap Mode"} %meta{string,page,"Projection.X Axis"} %meta{int,as_max_param_id,16}  %read{432,444} %write{2147483647,-1}
param	int	in_x_axis_twrap	0		%meta{string,as_maya_attribute_name,"xAxisTWrap"} %meta{string,as_maya_attribute_short_name,"xtw"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"T Wrap Mode"} %meta{string,page,"Projection.X Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,17}  %read{452,464} %write{2147483647,-1}
param	int	in_x_axis_sflip	0		%meta{string,as_maya_attribute_name,"xAxisSFlip"} %meta{string,as_maya_attribute_short_name,"xsf"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"S Flip"} %meta{string,page,"Projection.X Axis"} %meta{int,as_max_param_id,18}  %read{499,499} %write{2147483647,-1}
param	int	in_x_axis_tflip	0		%meta{string,as_maya_attribute_name,"xAxisTFlip"} %meta{string,as_maya_attribute_short_name,"xtf"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"T Flip"} %meta{string,page,"Projection.X Axis"} %meta{int,as_max_param_id,19}  %read{514,514} %write{2147483647,-1}
param	int	in_x_axis_flip_r	0		%meta{string,as_maya_attribute_name,"xAxisFlipR"} %meta{string,as_maya_attribute_short_name,"xfr"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Flip R"} %meta{string,page,"Projection.X Axis.Normal"} %meta{string,help,"Flip the red channel of the texture lookup"} %meta{int,as_max_param_id,53}  %read{558,558} %write{2147483647,-1}
param	int	in_x_axis_flip_g	0		%meta{string,as_maya_attribute_name,"xAxisFlipG"} %meta{string,as_maya_attribute_short_name,"xfg"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Flip G"} %meta{string,page,"Projection.X Axis.Normal"} %meta{string,help,"Flip the green channel of the texture lookup"} %meta{int,as_max_param_id,54}  %read{562,562} %write{2147483647,-1}
param	int	in_x_axis_swap_rg	0		%meta{string,as_maya_attribute_name,"xAxisSwapRG"} %meta{string,as_maya_attribute_short_name,"xsp"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Swap RG"} %meta{string,page,"Projection.X Axis.Normal"} %meta{string,help,"Swap the red and green channels of the texture lookup"} %meta{int,as_max_param_id,55}  %read{566,566} %write{2147483647,-1}
param	string	in_x_tex_eotf	"sRGB"		%meta{string,as_maya_attribute_name,"xTextureEOTF"} %meta{string,as_maya_attribute_short_name,"xeo"} %meta{string,label,"Input Transfer Function"} %meta{string,page,"Projection.X Axis.Color Management"} %meta{string,widget,"popup"} %meta{string,options,"None/Raw|sRGB|Rec.709|Gamma 2.2|Gamma 2.4|Gamma 2.6 (DCI)|Rec.1886|Rec.2020"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Transfer function of the ingested material, refers to the Opto-Electronic Transfer Function required to transform the input into scene-linear values."} %meta{int,as_max_param_id,20}  %read{630,828} %write{2147483647,-1}
param	string	in_x_tex_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"xTextureRGBPrimaries"} %meta{string,as_maya_attribute_short_name,"xpr"} %meta{string,label,"RGB Primaries"} %meta{string,page,"Projection.X Axis.Color Management"} %meta{string,widget,"popup"} %meta{string,options,"Raw|sRGB/Rec.709|AdobeRGB|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Texture RGB primaries, note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."} %meta{int,as_max_param_id,21}  %read{895,2008} %write{2147483647,-1}
param	color	in_y_axis_color	0 1 0		%meta{string,as_maya_attribute_name,"yAxisColor"} %meta{string,as_maya_attribute_short_name,"yac"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Solid Color"} %meta{string,page,"Projection.Y Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,22}  %read{2045,3650} %write{2147483647,-1}
param	string	in_y_axis_filename	""		%meta{string,as_maya_attribute_name,"yAxisFilename"} %meta{string,as_maya_attribute_short_name,"yaf"} %meta{string,widget,"filename"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Texture Filename"} %meta{string,page,"Projection.Y Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,23}  %read{2030,2173} %write{2147483647,-1}
param	float	in_y_axis_width	1		%meta{string,as_maya_attribute_name,"yAxisWidth"} %meta{string,as_maya_attribute_short_name,"yaw"} %meta{float,min,0} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Horizontal Frequency"} %meta{string,page,"Projection.Y Axis"} %meta{int,as_max_param_id,24}  %read{2156,2156} %write{2147483647,-1} %derivs
param	float	in_y_axis_height	1		%meta{string,as_maya_attribute_name,"yAxisHeight"} %meta{string,as_maya_attribute_short_name,"yah"} %meta{float,min,0} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Vertical Frequency"} %meta{string,page,"Projection.Y Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,25}  %read{2159,2159} %write{2147483647,-1} %derivs
param	float	in_y_axis_horizontal_offset	0		%meta{string,as_maya_attribute_name,"yAxisHorizontalOffset"} %meta{string,as_maya_attribute_short_name,"yho"} %meta{float,softmin,-1} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Horizontal Offset"} %meta{string,page,"Projection.Y Axis"} %meta{int,as_max_param_id,26}  %read{2162,2162} %write{2147483647,-1} %derivs
param	float	in_y_axis_vertical_offset	0		%meta{string,as_maya_attribute_name,"yAxisVerticalOffset"} %meta{string,as_maya_attribute_short_name,"yvo"} %meta{float,softmin,-1} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Vertical Offset"} %meta{string,page,"Projection.Y Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,27}  %read{2165,2165} %write{2147483647,-1} %derivs
param	float	in_y_axis_rotation_angle	0		%meta{string,as_maya_attribute_name,"yAxisRotationAngle"} %meta{string,as_maya_attribute_short_name,"yra"} %meta{float,min,-360} %meta{float,softmax,360} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Rotation"} %meta{string,page,"Projection.Y Axis"} %meta{string,help,"Rotation angle in degrees."} %meta{int,divider,1} %meta{int,as_max_param_id,28}  %read{2106,2115} %write{2147483647,-1} %derivs
param	int	in_y_axis_swrap	0		%meta{string,as_maya_attribute_name,"yAxisSWrap"} %meta{string,as_maya_attribute_short_name,"ysw"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"S Wrap Mode"} %meta{string,page,"Projection.Y Axis"} %meta{int,as_max_param_id,29}  %read{2058,2070} %write{2147483647,-1}
param	int	in_y_axis_twrap	0		%meta{string,as_maya_attribute_name,"yAxisTWrap"} %meta{string,as_maya_attribute_short_name,"ytw"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"T Wrap Mode"} %meta{string,page,"Projection.Y Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,30}  %read{2078,2090} %write{2147483647,-1}
param	int	in_y_axis_sflip	0		%meta{string,as_maya_attribute_name,"yAxisSFlip"} %meta{string,as_maya_attribute_short_name,"ysf"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"S Flip"} %meta{string,page,"Projection.Y Axis"} %meta{int,as_max_param_id,31}  %read{2125,2125} %write{2147483647,-1}
param	int	in_y_axis_tflip	0		%meta{string,as_maya_attribute_name,"yAxisTFlip"} %meta{string,as_maya_attribute_short_name,"ytf"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"T Flip"} %meta{string,page,"Projection.Y Axis"} %meta{int,as_max_param_id,32}  %read{2140,2140} %write{2147483647,-1}
param	int	in_y_axis_flip_r	0		%meta{string,as_maya_attribute_name,"yAxisFlipR"} %meta{string,as_maya_attribute_short_name,"yfr"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Flip R"} %meta{string,page,"Projection.Y Axis.Normal"} %meta{string,help,"Flip the red channel of the texture lookup"} %meta{int,as_max_param_id,56}  %read{2184,2184} %write{2147483647,-1}
param	int	in_y_axis_flip_g	0		%meta{string,as_maya_attribute_name,"yAxisFlipG"} %meta{string,as_maya_attribute_short_name,"yfg"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Flip G"} %meta{string,page,"Projection.Y Axis.Normal"} %meta{string,help,"Flip the green channel of the texture lookup"} %meta{int,as_max_param_id,57}  %read{2188,2188} %write{2147483647,-1}
param	int	in_y_axis_swap_rg	0		%meta{string,as_maya_attribute_name,"yAxisSwapRG"} %meta{string,as_maya_attribute_short_name,"ysp"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Swap RG"} %meta{string,page,"Projection.Y Axis.Normal"} %meta{string,help,"Swap the red and green channels of the texture lookup"} %meta{int,as_max_param_id,58}  %read{2192,2192} %write{2147483647,-1}
param	string	in_y_tex_eotf	"sRGB"		%meta{string,as_maya_attribute_name,"yTextureEOTF"} %meta{string,as_maya_attribute_short_name,"yeo"} %meta{string,label,"Input Transfer Function"} %meta{string,page,"Projection.Y Axis.Color Management"} %meta{string,widget,"popup"} %meta{string,options,"None/Raw|sRGB|Rec.709|Gamma 2.2|Gamma 2.4|Gamma 2.6 (DCI)|Rec.1886|Rec.2020"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Transfer function of the ingested material, refers to the Opto-Electronic Transfer Function required to transform the input into scene-linear values."} %meta{int,as_max_param_id,33}  %read{2256,2454} %write{2147483647,-1}
param	string	in_y_tex_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"yTextureRGBPrimaries"} %meta{string,as_maya_attribute_short_name,"ypr"} %meta{string,label,"RGB Primaries"} %meta{string,page,"Projection.Y Axis.Color Management"} %meta{string,widget,"popup"} %meta{string,options,"Raw|sRGB/Rec.709|AdobeRGB|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Texture RGB primaries, note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."} %meta{int,as_max_param_id,34}  %read{2521,3634} %write{2147483647,-1}
param	color	in_z_axis_color	0 0 1		%meta{string,as_maya_attribute_name,"zAxisColor"} %meta{string,as_maya_attribute_short_name,"zac"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Solid Color"} %meta{string,page,"Projection.Z Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,35}  %read{3671,5278} %write{2147483647,-1}
param	string	in_z_axis_filename	""		%meta{string,as_maya_attribute_name,"zAxisFilename"} %meta{string,as_maya_attribute_short_name,"zaf"} %meta{string,widget,"filename"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Texture Filename"} %meta{string,page,"Projection.Z Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,36}  %read{3656,3800} %write{2147483647,-1}
param	float	in_z_axis_width	1		%meta{string,as_maya_attribute_name,"zAxisWidth"} %meta{string,as_maya_attribute_short_name,"zaw"} %meta{float,min,0} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Horizontal Frequency"} %meta{string,page,"Projection.Z Axis"} %meta{int,as_max_param_id,37}  %read{3783,3783} %write{2147483647,-1} %derivs
param	float	in_z_axis_height	1		%meta{string,as_maya_attribute_name,"zAxisHeight"} %meta{string,as_maya_attribute_short_name,"zah"} %meta{float,min,0} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Vertical Frequency"} %meta{string,page,"Projection.Z Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,38}  %read{3786,3786} %write{2147483647,-1} %derivs
param	float	in_z_axis_horizontal_offset	0		%meta{string,as_maya_attribute_name,"zAxisHorizontalOffset"} %meta{string,as_maya_attribute_short_name,"zho"} %meta{float,softmin,-1} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Horizontal Offset"} %meta{string,page,"Projection.Z Axis"} %meta{int,as_max_param_id,39}  %read{3789,3789} %write{2147483647,-1} %derivs
param	float	in_z_axis_vertical_offset	0		%meta{string,as_maya_attribute_name,"zAxisVerticalOffset"} %meta{string,as_maya_attribute_short_name,"zvo"} %meta{float,softmin,-1} %meta{float,softmax,1} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Vertical Offset"} %meta{string,page,"Projection.Z Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,40}  %read{3792,3792} %write{2147483647,-1} %derivs
param	float	in_z_axis_rotation_angle	0		%meta{string,as_maya_attribute_name,"zAxisRotationAngle"} %meta{string,as_maya_attribute_short_name,"zra"} %meta{float,min,-360} %meta{float,softmax,360} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,1} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Rotation"} %meta{string,page,"Projection.Z Axis"} %meta{string,help,"Rotation angle in degrees."} %meta{int,divider,1} %meta{int,as_max_param_id,41}  %read{3733,3742} %write{2147483647,-1} %derivs
param	int	in_z_axis_swrap	0		%meta{string,as_maya_attribute_name,"zAxisSWrap"} %meta{string,as_maya_attribute_short_name,"zsw"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"S Wrap Mode"} %meta{string,page,"Projection.Z Axis"} %meta{int,as_max_param_id,42}  %read{3684,3696} %write{2147483647,-1}
param	int	in_z_axis_twrap	0		%meta{string,as_maya_attribute_name,"zAxisTWrap"} %meta{string,as_maya_attribute_short_name,"ztw"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"T Wrap Mode"} %meta{string,page,"Projection.Z Axis"} %meta{int,divider,1} %meta{int,as_max_param_id,43}  %read{3704,3716} %write{2147483647,-1}
param	int	in_z_axis_sflip	0		%meta{string,as_maya_attribute_name,"zAxisSFlip"} %meta{string,as_maya_attribute_short_name,"zsf"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"S Flip"} %meta{string,page,"Projection.Z Axis"} %meta{int,as_max_param_id,44}  %read{3752,3752} %write{2147483647,-1}
param	int	in_z_axis_tflip	0		%meta{string,as_maya_attribute_name,"zAxisTFlip"} %meta{string,as_maya_attribute_short_name,"ztf"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"T Flip"} %meta{string,page,"Projection.Z Axis"} %meta{int,as_max_param_id,45}  %read{3767,3767} %write{2147483647,-1}
param	int	in_z_axis_flip_r	0		%meta{string,as_maya_attribute_name,"zAxisFlipR"} %meta{string,as_maya_attribute_short_name,"zfr"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Flip R"} %meta{string,page,"Projection.Z Axis.Normal"} %meta{string,help,"Flip the red channel of the texture lookup"} %meta{int,as_max_param_id,59}  %read{3811,3811} %write{2147483647,-1}
param	int	in_z_axis_flip_g	0		%meta{string,as_maya_attribute_name,"zAxisFlipG"} %meta{string,as_maya_attribute_short_name,"zfg"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Flip G"} %meta{string,page,"Projection.Z Axis.Normal"} %meta{string,help,"Flip the green channel of the texture lookup"} %meta{int,as_max_param_id,60}  %read{3815,3815} %write{2147483647,-1}
param	int	in_z_axis_swap_rg	0		%meta{string,as_maya_attribute_name,"zAxisSwapRG"} %meta{string,as_maya_attribute_short_name,"zsp"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,label,"Swap RG"} %meta{string,page,"Projection.Z Axis.Normal"} %meta{string,help,"Swap the red and green channels of the texture lookup"} %meta{int,as_max_param_id,61}  %read{3819,3819} %write{2147483647,-1}
param	string	in_z_tex_eotf	"sRGB"		%meta{string,as_maya_attribute_name,"zTextureEOTF"} %meta{string,as_maya_attribute_short_name,"zeo"} %meta{string,label,"Input Transfer Function"} %meta{string,page,"Projection.Z Axis.Color Management"} %meta{string,widget,"popup"} %meta{string,options,"None/Raw|sRGB|Rec.709|Gamma 2.2|Gamma 2.4|Gamma 2.6 (DCI)|Rec.1886|Rec.2020"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Transfer function of the ingested material, refers to the Opto-Electronic Transfer Function required to transform the input into scene-linear values."} %meta{int,as_max_param_id,46}  %read{3884,4082} %write{2147483647,-1}
param	string	in_z_tex_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"zTextureRGBPrimaries"} %meta{string,as_maya_attribute_short_name,"zpr"} %meta{string,label,"RGB Primaries"} %meta{string,page,"Projection.Z Axis.Color Management"} %meta{string,widget,"popup"} %meta{string,options,"Raw|sRGB/Rec.709|AdobeRGB|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Texture RGB primaries, note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."} %meta{int,as_max_param_id,47}  %read{4149,5262} %write{2147483647,-1}
param	float	in_randomization	0		%meta{string,as_maya_attribute_name,"randomization"} %meta{string,as_maya_attribute_short_name,"ran"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Randomization"} %meta{string,page,"Projection.Randomization"} %meta{int,as_max_param_id,48}  %read{26,54} %write{2147483647,-1} %derivs
param	int	in_manifold	0		%meta{string,as_maya_attribute_name,"manifold"} %meta{string,as_maya_attribute_short_name,"man"} %meta{string,label,"Manifold"} %meta{string,page,"Projection.Randomization"} %meta{string,help,"Connects to an idManifold integer hash output, or lacking one, builds an hash based on the assembly instance name."} %meta{int,as_max_param_id,57}  %read{28,30} %write{2147483647,-1} %derivs
oparam	color	out_color	0 0 0		%meta{string,as_maya_attribute_name,"outColor"} %meta{string,as_maya_attribute_short_name,"oc"} %meta{string,label,"Output Color"} %meta{string,widget,"null"} %meta{int,as_max_param_id,52}  %read{2019,5279} %write{2019,5279}
oparam	float	out_alpha	1		%meta{string,as_maya_attribute_name,"outAlpha"} %meta{string,as_maya_attribute_short_name,"oa"} %meta{string,label,"Output Alpha"} %meta{string,widget,"null"} %meta{int,as_max_param_id,52}  %read{2022,5281} %write{2022,5281}
oparam	normal	out_normal	0 0 0		%meta{string,as_maya_attribute_name,"outNormal"} %meta{string,as_maya_attribute_short_name,"on"} %meta{string,label,"Output Normal"} %meta{string,widget,"null"} %meta{int,as_max_param_id,52}  %read{605,5286} %write{605,5286}
global	point	P	%read{0,0} %write{2147483647,-1} %derivs
global	normal	N	%read{1,5283} %write{2147483647,-1}
local	vector	___254_axis	%read{66,328} %write{63,323} %derivs
local	float	___254_cosang	%read{65,366} %write{64,324} %derivs
local	float	___254_sinang	%read{76,361} %write{64,324} %derivs
local	float	___254_cosang1	%read{75,360} %write{65,325} %derivs
local	float	___254_x	%read{69,361} %write{66,326} %derivs
local	float	___254_y	%read{74,359} %write{67,327} %derivs
local	float	___254_z	%read{76,364} %write{68,328} %derivs
local	matrix	___254_M	%read{110,370} %write{108,368} %derivs
local	float	___508_linear_out	%read{647,5087} %write{642,5086}
local	float	___518_linear_out	%read{689,3971} %write{683,3970}
local	float	___528_linear_out	%read{851,4145} %write{844,4144}
local	float	___529_alpha	%read{845,4141} %write{838,4134}
local	float	___529_beta	%read{842,4136} %write{839,4135}
local	color	___560_transformed_color	%read{1109,4363} %write{951,4362}
local	vector	___560_v_color	%read{967,4360} %write{911,4165}
local	color	___572_transformed_color	%read{1336,4590} %write{1162,4589}
local	vector	___572_v_color	%read{1159,4587} %write{1118,4567}
local	color	___584_transformed_color	%read{1563,4817} %write{1389,4816}
local	vector	___584_v_color	%read{1386,4814} %write{1345,4794}
local	color	___596_transformed_color	%read{1790,5044} %write{1616,5043}
local	vector	___596_v_color	%read{1613,5041} %write{1572,5024}
local	color	___608_transformed_color	%read{2012,5266} %write{1838,5265}
local	vector	___608_v_color	%read{1835,5260} %write{1794,5246}
local	color	___620_C	%read{2014,5268} %write{1109,5267}
local	color	___687_scene_linear_cms	%read{911,5269} %write{632,5268}
local	float	___721_angle_rad	%read{490,3743} %write{489,3742} %derivs
local	float	___721_c	%read{491,3748} %write{490,3743} %derivs
local	float	___721_s	%read{492,3747} %write{490,3743} %derivs
local	float[2]	___737_st	%read{482,3799} %write{478,3797} %derivs
local	normal	___739_a	%read{582,3838} %write{580,3834}
local	normal	___739_b	%read{582,3840} %write{581,3835}
local	normal	___739_n	%read{587,3848} %write{586,3847}
local	normal	Nn	%read{13,3830} %write{2,372}
local	point	Pp	%read{14,3724} %write{3,215} %derivs
local	matrix	___742_xform	%read{13,14} %write{12,12} %derivs
local	vector	___745_variation	%read{37,50} %write{31,39} %derivs
local	string	___747_manifold	%read{34,34} %write{32,33} %derivs
local	vector	___745_angle	%read{60,320} %write{55,55} %derivs
local	vector	___745_O	%read{62,371} %write{56,56} %derivs
local	vector	___745_X	%read{62,218} %write{57,57} %derivs
local	vector	___745_Y	%read{114,270} %write{58,58} %derivs
local	vector	___745_Z	%read{166,322} %write{59,59} %derivs
local	normal	normal_sign	%read{475,3850} %write{391,391} %derivs
local	normal	abs_normal	%read{395,3831} %write{392,392}
local	vector	blending	%read{396,5280} %write{395,401}
local	float	x_alpha	%read{2021,2021} %write{547,547}
local	float	y_alpha	%read{3647,3647} %write{2173,2173}
local	float	z_alpha	%read{5275,5275} %write{3800,3800}
local	int	exists	%read{407,3659} %write{402,3656}
local	int	numchannels	%read{415,3667} %write{403,3662}
local	string[2]	wrap_mode	%read{473,3726} %write{450,3722}
local	color	___749_x_axis	%read{551,2018} %write{547,2015}
local	normal	___750_tmp	%read{559,581} %write{557,574}
local	float	___751_x	%read{570,570} %write{567,567}
local	normal	___750_X	%read{595,602} %write{594,598}
local	color	___756_y_axis	%read{2177,3644} %write{2173,3641}
local	normal	___757_tmp	%read{2185,2207} %write{2183,2200}
local	float	___758_x	%read{2196,2196} %write{2193,2193}
local	normal	___757_Y	%read{2221,2228} %write{2220,2224}
local	color	___763_z_axis	%read{3804,5272} %write{3800,5269}
local	normal	___764_tmp	%read{3812,3835} %write{3810,3828}
local	float	___765_x	%read{3823,3823} %write{3820,3820}
local	normal	___764_Z	%read{3849,3856} %write{3848,3852}
const	string	$const1	"Object Space"		%read{4,4} %write{2147483647,-1}
temp	int	$tmp1	%read{5,5} %write{4,4}
temp	matrix	$tmp2	%read{7,7} %write{6,6}
const	int	$const2	1		%read{45,5230} %write{2147483647,-1}
const	float	$const3	1		%read{6,4142} %write{2147483647,-1}
temp	int	$tmp3	%read{8,8} %write{7,7}
temp	matrix	$tmp4	%read{12,12} %write{9,9} %derivs
const	string	$const4	"common"		%read{9,16} %write{2147483647,-1}
const	string	$const5	"object"		%read{9,59} %write{2147483647,-1}
temp	matrix	$tmp5	%read{12,12} %write{11,11} %derivs
const	string	$const6	"inverse"		%read{10,23} %write{2147483647,-1}
temp	matrix	$tmp6	%read{18,18} %write{17,17}
temp	int	$tmp7	%read{19,19} %write{18,18}
temp	matrix	$tmp8	%read{22,22} %write{21,21}
temp	matrix	$tmp9	%read{25,25} %write{24,24} %derivs
const	float	$const7	0		%read{26,5284} %write{2147483647,-1}
temp	int	$tmp10	%read{27,27} %write{26,26}
temp	int	$tmp11	%read{29,29} %write{28,28}
temp	float	$tmp12	%read{31,31} %write{30,30} %derivs
const	string	$const8	""		%read{32,32} %write{2147483647,-1}
temp	int	$tmp13	%read{2147483647,-1} %write{33,33}
const	string	$const9	"object:assembly_instance_name"		%read{33,33} %write{2147483647,-1}
temp	int	$tmp14	%read{35,35} %write{34,34} %derivs
temp	vector	$tmp15	%read{36,36} %write{35,35} %derivs
const	float	$const10	2		%read{37,3804} %write{2147483647,-1}
temp	vector	$tmp16	%read{38,38} %write{37,37} %derivs
const	float	$const11	360		%read{39,39} %write{2147483647,-1}
temp	float	$tmp17	%read{44,44} %write{43,43} %derivs
const	int	$const12	0		%read{40,5255} %write{2147483647,-1}
temp	float	$tmp18	%read{43,43} %write{40,40} %derivs
const	string	$const13	"radians"		%read{41,3740} %write{2147483647,-1}
const	float	$const14	3.14159274		%read{42,3741} %write{2147483647,-1}
const	float	$const15	180		%read{42,3741} %write{2147483647,-1}
temp	float	$tmp19	%read{43,43} %write{42,42} %derivs
temp	float	$tmp20	%read{55,55} %write{44,44} %derivs
temp	float	$tmp21	%read{49,49} %write{48,48} %derivs
temp	float	$tmp22	%read{48,48} %write{45,45} %derivs
temp	float	$tmp23	%read{48,48} %write{47,47} %derivs
temp	float	$tmp24	%read{55,55} %write{49,49} %derivs
temp	float	$tmp25	%read{54,54} %write{53,53} %derivs
const	int	$const16	2		%read{50,5280} %write{2147483647,-1}
temp	float	$tmp26	%read{53,53} %write{50,50} %derivs
temp	float	$tmp27	%read{53,53} %write{52,52} %derivs
temp	float	$tmp28	%read{55,55} %write{54,54} %derivs
temp	float	$tmp29	%read{64,64} %write{60,60} %derivs
const	string	$const17	"rotate"		%read{61,321} %write{2147483647,-1}
temp	vector	$tmp30	%read{63,63} %write{62,62} %derivs
temp	float	$tmp31	%read{73,73} %write{69,69} %derivs
temp	float	$tmp32	%read{71,71} %write{70,70} %derivs
temp	float	$tmp33	%read{72,72} %write{71,71} %derivs
temp	float	$tmp34	%read{73,73} %write{72,72} %derivs
temp	float	$tmp35	%read{108,108} %write{73,73} %derivs
temp	float	$tmp36	%read{75,75} %write{74,74} %derivs
temp	float	$tmp37	%read{77,77} %write{75,75} %derivs
temp	float	$tmp38	%read{77,77} %write{76,76} %derivs
temp	float	$tmp39	%read{108,108} %write{77,77} %derivs
temp	float	$tmp40	%read{79,79} %write{78,78} %derivs
temp	float	$tmp41	%read{81,81} %write{79,79} %derivs
temp	float	$tmp42	%read{81,81} %write{80,80} %derivs
temp	float	$tmp43	%read{108,108} %write{81,81} %derivs
temp	float	$tmp44	%read{83,83} %write{82,82} %derivs
temp	float	$tmp45	%read{85,85} %write{83,83} %derivs
temp	float	$tmp46	%read{85,85} %write{84,84} %derivs
temp	float	$tmp47	%read{108,108} %write{85,85} %derivs
temp	float	$tmp48	%read{90,90} %write{86,86} %derivs
temp	float	$tmp49	%read{88,88} %write{87,87} %derivs
temp	float	$tmp50	%read{89,89} %write{88,88} %derivs
temp	float	$tmp51	%read{90,90} %write{89,89} %derivs
temp	float	$tmp52	%read{108,108} %write{90,90} %derivs
temp	float	$tmp53	%read{92,92} %write{91,91} %derivs
temp	float	$tmp54	%read{94,94} %write{92,92} %derivs
temp	float	$tmp55	%read{94,94} %write{93,93} %derivs
temp	float	$tmp56	%read{108,108} %write{94,94} %derivs
temp	float	$tmp57	%read{96,96} %write{95,95} %derivs
temp	float	$tmp58	%read{98,98} %write{96,96} %derivs
temp	float	$tmp59	%read{98,98} %write{97,97} %derivs
temp	float	$tmp60	%read{108,108} %write{98,98} %derivs
temp	float	$tmp61	%read{100,100} %write{99,99} %derivs
temp	float	$tmp62	%read{102,102} %write{100,100} %derivs
temp	float	$tmp63	%read{102,102} %write{101,101} %derivs
temp	float	$tmp64	%read{108,108} %write{102,102} %derivs
temp	float	$tmp65	%read{107,107} %write{103,103} %derivs
temp	float	$tmp66	%read{105,105} %write{104,104} %derivs
temp	float	$tmp67	%read{106,106} %write{105,105} %derivs
temp	float	$tmp68	%read{107,107} %write{106,106} %derivs
temp	float	$tmp69	%read{108,108} %write{107,107} %derivs
temp	vector	$tmp70	%read{111,111} %write{110,110} %derivs
temp	vector	$tmp71	%read{110,110} %write{109,109} %derivs
temp	float	$tmp72	%read{116,116} %write{112,112} %derivs
temp	vector	$tmp73	%read{115,115} %write{114,114} %derivs
temp	float	$tmp74	%read{125,125} %write{121,121} %derivs
temp	float	$tmp75	%read{123,123} %write{122,122} %derivs
temp	float	$tmp76	%read{124,124} %write{123,123} %derivs
temp	float	$tmp77	%read{125,125} %write{124,124} %derivs
temp	float	$tmp78	%read{160,160} %write{125,125} %derivs
temp	float	$tmp79	%read{127,127} %write{126,126} %derivs
temp	float	$tmp80	%read{129,129} %write{127,127} %derivs
temp	float	$tmp81	%read{129,129} %write{128,128} %derivs
temp	float	$tmp82	%read{160,160} %write{129,129} %derivs
temp	float	$tmp83	%read{131,131} %write{130,130} %derivs
temp	float	$tmp84	%read{133,133} %write{131,131} %derivs
temp	float	$tmp85	%read{133,133} %write{132,132} %derivs
temp	float	$tmp86	%read{160,160} %write{133,133} %derivs
temp	float	$tmp87	%read{135,135} %write{134,134} %derivs
temp	float	$tmp88	%read{137,137} %write{135,135} %derivs
temp	float	$tmp89	%read{137,137} %write{136,136} %derivs
temp	float	$tmp90	%read{160,160} %write{137,137} %derivs
temp	float	$tmp91	%read{142,142} %write{138,138} %derivs
temp	float	$tmp92	%read{140,140} %write{139,139} %derivs
temp	float	$tmp93	%read{141,141} %write{140,140} %derivs
temp	float	$tmp94	%read{142,142} %write{141,141} %derivs
temp	float	$tmp95	%read{160,160} %write{142,142} %derivs
temp	float	$tmp96	%read{144,144} %write{143,143} %derivs
temp	float	$tmp97	%read{146,146} %write{144,144} %derivs
temp	float	$tmp98	%read{146,146} %write{145,145} %derivs
temp	float	$tmp99	%read{160,160} %write{146,146} %derivs
temp	float	$tmp100	%read{148,148} %write{147,147} %derivs
temp	float	$tmp101	%read{150,150} %write{148,148} %derivs
temp	float	$tmp102	%read{150,150} %write{149,149} %derivs
temp	float	$tmp103	%read{160,160} %write{150,150} %derivs
temp	float	$tmp104	%read{152,152} %write{151,151} %derivs
temp	float	$tmp105	%read{154,154} %write{152,152} %derivs
temp	float	$tmp106	%read{154,154} %write{153,153} %derivs
temp	float	$tmp107	%read{160,160} %write{154,154} %derivs
temp	float	$tmp108	%read{159,159} %write{155,155} %derivs
temp	float	$tmp109	%read{157,157} %write{156,156} %derivs
temp	float	$tmp110	%read{158,158} %write{157,157} %derivs
temp	float	$tmp111	%read{159,159} %write{158,158} %derivs
temp	float	$tmp112	%read{160,160} %write{159,159} %derivs
temp	vector	$tmp113	%read{163,163} %write{162,162} %derivs
temp	vector	$tmp114	%read{162,162} %write{161,161} %derivs
temp	float	$tmp115	%read{168,168} %write{164,164} %derivs
temp	vector	$tmp116	%read{167,167} %write{166,166} %derivs
temp	float	$tmp117	%read{177,177} %write{173,173} %derivs
temp	float	$tmp118	%read{175,175} %write{174,174} %derivs
temp	float	$tmp119	%read{176,176} %write{175,175} %derivs
temp	float	$tmp120	%read{177,177} %write{176,176} %derivs
temp	float	$tmp121	%read{212,212} %write{177,177} %derivs
temp	float	$tmp122	%read{179,179} %write{178,178} %derivs
temp	float	$tmp123	%read{181,181} %write{179,179} %derivs
temp	float	$tmp124	%read{181,181} %write{180,180} %derivs
temp	float	$tmp125	%read{212,212} %write{181,181} %derivs
temp	float	$tmp126	%read{183,183} %write{182,182} %derivs
temp	float	$tmp127	%read{185,185} %write{183,183} %derivs
temp	float	$tmp128	%read{185,185} %write{184,184} %derivs
temp	float	$tmp129	%read{212,212} %write{185,185} %derivs
temp	float	$tmp130	%read{187,187} %write{186,186} %derivs
temp	float	$tmp131	%read{189,189} %write{187,187} %derivs
temp	float	$tmp132	%read{189,189} %write{188,188} %derivs
temp	float	$tmp133	%read{212,212} %write{189,189} %derivs
temp	float	$tmp134	%read{194,194} %write{190,190} %derivs
temp	float	$tmp135	%read{192,192} %write{191,191} %derivs
temp	float	$tmp136	%read{193,193} %write{192,192} %derivs
temp	float	$tmp137	%read{194,194} %write{193,193} %derivs
temp	float	$tmp138	%read{212,212} %write{194,194} %derivs
temp	float	$tmp139	%read{196,196} %write{195,195} %derivs
temp	float	$tmp140	%read{198,198} %write{196,196} %derivs
temp	float	$tmp141	%read{198,198} %write{197,197} %derivs
temp	float	$tmp142	%read{212,212} %write{198,198} %derivs
temp	float	$tmp143	%read{200,200} %write{199,199} %derivs
temp	float	$tmp144	%read{202,202} %write{200,200} %derivs
temp	float	$tmp145	%read{202,202} %write{201,201} %derivs
temp	float	$tmp146	%read{212,212} %write{202,202} %derivs
temp	float	$tmp147	%read{204,204} %write{203,203} %derivs
temp	float	$tmp148	%read{206,206} %write{204,204} %derivs
temp	float	$tmp149	%read{206,206} %write{205,205} %derivs
temp	float	$tmp150	%read{212,212} %write{206,206} %derivs
temp	float	$tmp151	%read{211,211} %write{207,207} %derivs
temp	float	$tmp152	%read{209,209} %write{208,208} %derivs
temp	float	$tmp153	%read{210,210} %write{209,209} %derivs
temp	float	$tmp154	%read{211,211} %write{210,210} %derivs
temp	float	$tmp155	%read{212,212} %write{211,211} %derivs
temp	vector	$tmp156	%read{215,215} %write{214,214} %derivs
temp	vector	$tmp157	%read{214,214} %write{213,213} %derivs
temp	float	$tmp158	%read{220,220} %write{216,216} %derivs
temp	vector	$tmp159	%read{219,219} %write{218,218} %derivs
temp	float	$tmp160	%read{229,229} %write{225,225} %derivs
temp	float	$tmp161	%read{227,227} %write{226,226} %derivs
temp	float	$tmp162	%read{228,228} %write{227,227} %derivs
temp	float	$tmp163	%read{229,229} %write{228,228} %derivs
temp	float	$tmp164	%read{264,264} %write{229,229} %derivs
temp	float	$tmp165	%read{231,231} %write{230,230} %derivs
temp	float	$tmp166	%read{233,233} %write{231,231} %derivs
temp	float	$tmp167	%read{233,233} %write{232,232} %derivs
temp	float	$tmp168	%read{264,264} %write{233,233} %derivs
temp	float	$tmp169	%read{235,235} %write{234,234} %derivs
temp	float	$tmp170	%read{237,237} %write{235,235} %derivs
temp	float	$tmp171	%read{237,237} %write{236,236} %derivs
temp	float	$tmp172	%read{264,264} %write{237,237} %derivs
temp	float	$tmp173	%read{239,239} %write{238,238} %derivs
temp	float	$tmp174	%read{241,241} %write{239,239} %derivs
temp	float	$tmp175	%read{241,241} %write{240,240} %derivs
temp	float	$tmp176	%read{264,264} %write{241,241} %derivs
temp	float	$tmp177	%read{246,246} %write{242,242} %derivs
temp	float	$tmp178	%read{244,244} %write{243,243} %derivs
temp	float	$tmp179	%read{245,245} %write{244,244} %derivs
temp	float	$tmp180	%read{246,246} %write{245,245} %derivs
temp	float	$tmp181	%read{264,264} %write{246,246} %derivs
temp	float	$tmp182	%read{248,248} %write{247,247} %derivs
temp	float	$tmp183	%read{250,250} %write{248,248} %derivs
temp	float	$tmp184	%read{250,250} %write{249,249} %derivs
temp	float	$tmp185	%read{264,264} %write{250,250} %derivs
temp	float	$tmp186	%read{252,252} %write{251,251} %derivs
temp	float	$tmp187	%read{254,254} %write{252,252} %derivs
temp	float	$tmp188	%read{254,254} %write{253,253} %derivs
temp	float	$tmp189	%read{264,264} %write{254,254} %derivs
temp	float	$tmp190	%read{256,256} %write{255,255} %derivs
temp	float	$tmp191	%read{258,258} %write{256,256} %derivs
temp	float	$tmp192	%read{258,258} %write{257,257} %derivs
temp	float	$tmp193	%read{264,264} %write{258,258} %derivs
temp	float	$tmp194	%read{263,263} %write{259,259} %derivs
temp	float	$tmp195	%read{261,261} %write{260,260} %derivs
temp	float	$tmp196	%read{262,262} %write{261,261} %derivs
temp	float	$tmp197	%read{263,263} %write{262,262} %derivs
temp	float	$tmp198	%read{264,264} %write{263,263} %derivs
temp	vector	$tmp199	%read{267,267} %write{266,266}
temp	vector	$tmp200	%read{266,266} %write{265,265}
temp	float	$tmp201	%read{272,272} %write{268,268} %derivs
temp	vector	$tmp202	%read{271,271} %write{270,270} %derivs
temp	float	$tmp203	%read{281,281} %write{277,277} %derivs
temp	float	$tmp204	%read{279,279} %write{278,278} %derivs
temp	float	$tmp205	%read{280,280} %write{279,279} %derivs
temp	float	$tmp206	%read{281,281} %write{280,280} %derivs
temp	float	$tmp207	%read{316,316} %write{281,281} %derivs
temp	float	$tmp208	%read{283,283} %write{282,282} %derivs
temp	float	$tmp209	%read{285,285} %write{283,283} %derivs
temp	float	$tmp210	%read{285,285} %write{284,284} %derivs
temp	float	$tmp211	%read{316,316} %write{285,285} %derivs
temp	float	$tmp212	%read{287,287} %write{286,286} %derivs
temp	float	$tmp213	%read{289,289} %write{287,287} %derivs
temp	float	$tmp214	%read{289,289} %write{288,288} %derivs
temp	float	$tmp215	%read{316,316} %write{289,289} %derivs
temp	float	$tmp216	%read{291,291} %write{290,290} %derivs
temp	float	$tmp217	%read{293,293} %write{291,291} %derivs
temp	float	$tmp218	%read{293,293} %write{292,292} %derivs
temp	float	$tmp219	%read{316,316} %write{293,293} %derivs
temp	float	$tmp220	%read{298,298} %write{294,294} %derivs
temp	float	$tmp221	%read{296,296} %write{295,295} %derivs
temp	float	$tmp222	%read{297,297} %write{296,296} %derivs
temp	float	$tmp223	%read{298,298} %write{297,297} %derivs
temp	float	$tmp224	%read{316,316} %write{298,298} %derivs
temp	float	$tmp225	%read{300,300} %write{299,299} %derivs
temp	float	$tmp226	%read{302,302} %write{300,300} %derivs
temp	float	$tmp227	%read{302,302} %write{301,301} %derivs
temp	float	$tmp228	%read{316,316} %write{302,302} %derivs
temp	float	$tmp229	%read{304,304} %write{303,303} %derivs
temp	float	$tmp230	%read{306,306} %write{304,304} %derivs
temp	float	$tmp231	%read{306,306} %write{305,305} %derivs
temp	float	$tmp232	%read{316,316} %write{306,306} %derivs
temp	float	$tmp233	%read{308,308} %write{307,307} %derivs
temp	float	$tmp234	%read{310,310} %write{308,308} %derivs
temp	float	$tmp235	%read{310,310} %write{309,309} %derivs
temp	float	$tmp236	%read{316,316} %write{310,310} %derivs
temp	float	$tmp237	%read{315,315} %write{311,311} %derivs
temp	float	$tmp238	%read{313,313} %write{312,312} %derivs
temp	float	$tmp239	%read{314,314} %write{313,313} %derivs
temp	float	$tmp240	%read{315,315} %write{314,314} %derivs
temp	float	$tmp241	%read{316,316} %write{315,315} %derivs
temp	vector	$tmp242	%read{319,319} %write{318,318}
temp	vector	$tmp243	%read{318,318} %write{317,317}
temp	float	$tmp244	%read{324,324} %write{320,320} %derivs
temp	vector	$tmp245	%read{323,323} %write{322,322} %derivs
temp	float	$tmp246	%read{333,333} %write{329,329} %derivs
temp	float	$tmp247	%read{331,331} %write{330,330} %derivs
temp	float	$tmp248	%read{332,332} %write{331,331} %derivs
temp	float	$tmp249	%read{333,333} %write{332,332} %derivs
temp	float	$tmp250	%read{368,368} %write{333,333} %derivs
temp	float	$tmp251	%read{335,335} %write{334,334} %derivs
temp	float	$tmp252	%read{337,337} %write{335,335} %derivs
temp	float	$tmp253	%read{337,337} %write{336,336} %derivs
temp	float	$tmp254	%read{368,368} %write{337,337} %derivs
temp	float	$tmp255	%read{339,339} %write{338,338} %derivs
temp	float	$tmp256	%read{341,341} %write{339,339} %derivs
temp	float	$tmp257	%read{341,341} %write{340,340} %derivs
temp	float	$tmp258	%read{368,368} %write{341,341} %derivs
temp	float	$tmp259	%read{343,343} %write{342,342} %derivs
temp	float	$tmp260	%read{345,345} %write{343,343} %derivs
temp	float	$tmp261	%read{345,345} %write{344,344} %derivs
temp	float	$tmp262	%read{368,368} %write{345,345} %derivs
temp	float	$tmp263	%read{350,350} %write{346,346} %derivs
temp	float	$tmp264	%read{348,348} %write{347,347} %derivs
temp	float	$tmp265	%read{349,349} %write{348,348} %derivs
temp	float	$tmp266	%read{350,350} %write{349,349} %derivs
temp	float	$tmp267	%read{368,368} %write{350,350} %derivs
temp	float	$tmp268	%read{352,352} %write{351,351} %derivs
temp	float	$tmp269	%read{354,354} %write{352,352} %derivs
temp	float	$tmp270	%read{354,354} %write{353,353} %derivs
temp	float	$tmp271	%read{368,368} %write{354,354} %derivs
temp	float	$tmp272	%read{356,356} %write{355,355} %derivs
temp	float	$tmp273	%read{358,358} %write{356,356} %derivs
temp	float	$tmp274	%read{358,358} %write{357,357} %derivs
temp	float	$tmp275	%read{368,368} %write{358,358} %derivs
temp	float	$tmp276	%read{360,360} %write{359,359} %derivs
temp	float	$tmp277	%read{362,362} %write{360,360} %derivs
temp	float	$tmp278	%read{362,362} %write{361,361} %derivs
temp	float	$tmp279	%read{368,368} %write{362,362} %derivs
temp	float	$tmp280	%read{367,367} %write{363,363} %derivs
temp	float	$tmp281	%read{365,365} %write{364,364} %derivs
temp	float	$tmp282	%read{366,366} %write{365,365} %derivs
temp	float	$tmp283	%read{367,367} %write{366,366} %derivs
temp	float	$tmp284	%read{368,368} %write{367,367} %derivs
temp	vector	$tmp285	%read{371,371} %write{370,370}
temp	vector	$tmp286	%read{370,370} %write{369,369}
temp	int	$tmp287	%read{378,378} %write{376,377} %derivs
temp	float	$tmp288	%read{374,374} %write{373,373}
temp	int	$tmp289	%read{375,375} %write{374,374}
const	int	$const18	-1		%read{376,388} %write{2147483647,-1}
temp	float	$tmp290	%read{391,391} %write{378,378} %derivs
temp	int	$tmp291	%read{384,384} %write{382,383} %derivs
temp	float	$tmp292	%read{380,380} %write{379,379}
temp	int	$tmp293	%read{381,381} %write{380,380}
temp	float	$tmp294	%read{391,391} %write{384,384} %derivs
temp	int	$tmp295	%read{390,390} %write{388,389} %derivs
temp	float	$tmp296	%read{386,386} %write{385,385}
temp	int	$tmp297	%read{387,387} %write{386,386}
temp	float	$tmp298	%read{391,391} %write{390,390} %derivs
temp	float	$tmp299	%read{394,394} %write{393,393}
temp	float	$tmp300	%read{395,395} %write{394,394}
const	float	$const20	16		%read{394,394} %write{2147483647,-1}
temp	float	$tmp301	%read{398,398} %write{396,396}
temp	float	$tmp302	%read{398,398} %write{397,397}
temp	float	$tmp303	%read{400,400} %write{398,398}
temp	float	$tmp304	%read{400,400} %write{399,399}
temp	float	$tmp305	%read{401,401} %write{400,400}
temp	int	$tmp306	%read{405,405} %write{404,404}
const	string	$const21	"exists"		%read{404,3656} %write{2147483647,-1}
temp	int	$tmp307	%read{406,409} %write{405,408}
temp	int	$tmp308	%read{408,408} %write{407,407}
temp	int	$tmp309	%read{2147483647,-1} %write{410,410}
const	string	$const22	"channels"		%read{410,3662} %write{2147483647,-1}
temp	float	$tmp310	%read{412,412} %write{411,411}
temp	int	$tmp311	%read{413,413} %write{412,412}
temp	int	$tmp312	%read{414,429} %write{413,428}
const	int	$const23	3		%read{415,3716} %write{2147483647,-1}
temp	int	$tmp313	%read{416,416} %write{415,415}
temp	int	$tmp314	%read{417,427} %write{416,426}
temp	float	$tmp315	%read{424,424} %write{423,423}
const	string	$const24	"max"		%read{418,3873} %write{2147483647,-1}
temp	float	$tmp316	%read{423,423} %write{419,419}
temp	float	$tmp317	%read{423,423} %write{422,422}
temp	float	$tmp318	%read{422,422} %write{420,420}
temp	float	$tmp319	%read{422,422} %write{421,421}
temp	int	$tmp320	%read{425,425} %write{424,424}
temp	int	$tmp321	%read{426,426} %write{425,425}
temp	int	$tmp322	%read{428,428} %write{427,427}
const	string	$const25	"set_wrap_mode"		%read{430,3682} %write{2147483647,-1}
temp	string	$tmp323	%read{450,450} %write{434,448}
const	string	$const26	"get_wrap_mode"		%read{431,3703} %write{2147483647,-1}
temp	int	$tmp324	%read{433,433} %write{432,432}
const	string	$const27	"default"		%read{434,3706} %write{2147483647,-1}
temp	int	$tmp325	%read{437,437} %write{436,436}
const	string	$const28	"black"		%read{438,3710} %write{2147483647,-1}
temp	int	$tmp326	%read{441,441} %write{440,440}
const	string	$const29	"periodic"		%read{442,3714} %write{2147483647,-1}
temp	int	$tmp327	%read{445,445} %write{444,444}
const	string	$const30	"clamp"		%read{446,3808} %write{2147483647,-1}
const	string	$const31	"mirror"		%read{448,3720} %write{2147483647,-1}
temp	string	$tmp328	%read{470,470} %write{454,468}
temp	int	$tmp329	%read{453,453} %write{452,452}
temp	int	$tmp330	%read{457,457} %write{456,456}
temp	int	$tmp331	%read{461,461} %write{460,460}
temp	int	$tmp332	%read{465,465} %write{464,464}
temp	float	$tmp333	%read{478,478} %write{471,471} %derivs
temp	float	$tmp334	%read{479,479} %write{472,472} %derivs
temp	string	$tmp335	%read{547,547} %write{473,473}
temp	string	$tmp336	%read{547,547} %write{474,474}
temp	float	$tmp337	%read{476,476} %write{475,475} %derivs
temp	int	$tmp338	%read{542,542} %write{476,476} %derivs
const	string	$const32	"get_projection_color"		%read{477,3730} %write{2147483647,-1}
temp	int	$tmp339	%read{481,481} %write{480,480}
temp	float	$tmp340	%read{491,494} %write{482,482} %derivs
temp	float	$tmp341	%read{492,495} %write{483,483} %derivs
temp	float	$tmp342	%read{497,497} %write{484,493} %derivs
temp	float	$tmp343	%read{498,498} %write{485,496} %derivs
const	string	$const33	"rotate2d"		%read{486,3739} %write{2147483647,-1}
temp	float	$tmp344	%read{489,489} %write{488,488} %derivs
temp	float	$tmp345	%read{493,493} %write{491,491} %derivs
temp	float	$tmp346	%read{493,493} %write{492,492} %derivs
temp	float	$tmp347	%read{496,496} %write{494,494} %derivs
temp	float	$tmp348	%read{496,496} %write{495,495} %derivs
temp	float	$tmp349	%read{513,513} %write{506,512} %derivs
temp	float	$tmp350	%read{506,506} %write{505,505} %derivs
temp	float	$tmp351	%read{502,505} %write{500,500} %derivs
const	float	$const34	1.00010002		%read{502,3779} %write{2147483647,-1}
const	string	$const35	"mod"		%read{501,3776} %write{2147483647,-1}
temp	float	$tmp352	%read{504,504} %write{503,503} %derivs
temp	float	$tmp353	%read{503,503} %write{502,502} %derivs
temp	float	$tmp354	%read{505,505} %write{504,504} %derivs
temp	float	$tmp355	%read{509,512} %write{507,507} %derivs
temp	float	$tmp356	%read{511,511} %write{510,510} %derivs
temp	float	$tmp357	%read{510,510} %write{509,509} %derivs
temp	float	$tmp358	%read{512,512} %write{511,511} %derivs
temp	float	$tmp359	%read{528,528} %write{521,527} %derivs
temp	float	$tmp360	%read{521,521} %write{520,520} %derivs
temp	float	$tmp361	%read{517,520} %write{515,515} %derivs
temp	float	$tmp362	%read{519,519} %write{518,518} %derivs
temp	float	$tmp363	%read{518,518} %write{517,517} %derivs
temp	float	$tmp364	%read{520,520} %write{519,519} %derivs
temp	float	$tmp365	%read{524,527} %write{522,522} %derivs
temp	float	$tmp366	%read{526,526} %write{525,525} %derivs
temp	float	$tmp367	%read{525,525} %write{524,524} %derivs
temp	float	$tmp368	%read{527,527} %write{526,526} %derivs
temp	float	$tmp369	%read{530,530} %write{529,529} %derivs
temp	float	$tmp370	%read{531,531} %write{530,530} %derivs
temp	float	$tmp371	%read{533,533} %write{532,532} %derivs
temp	float	$tmp372	%read{534,534} %write{533,533} %derivs
temp	float	$tmp373	%read{536,536} %write{535,535} %derivs
temp	float	$tmp374	%read{537,537} %write{536,536} %derivs
temp	float	$tmp375	%read{539,539} %write{538,538} %derivs
temp	float	$tmp376	%read{540,540} %write{539,539} %derivs
temp	float	$tmp377	%read{543,543} %write{541,541} %derivs
temp	float	$tmp378	%read{544,544} %write{543,543} %derivs
temp	float	$tmp379	%read{543,543} %write{542,542} %derivs
temp	float	$tmp380	%read{547,547} %write{545,545} %derivs
temp	float	$tmp381	%read{547,547} %write{546,546} %derivs
const	string	$const36	"swrap"		%read{547,3800} %write{2147483647,-1}
const	string	$const37	"twrap"		%read{547,3800} %write{2147483647,-1}
const	string	$const38	"missingcolor"		%read{547,3800} %write{2147483647,-1}
const	color	$const39	0 0 0		%read{547,5267} %write{2147483647,-1}
const	string	$const40	"missingalpha"		%read{547,3800} %write{2147483647,-1}
const	string	$const41	"alpha"		%read{547,3800} %write{2147483647,-1}
const	string	$const42	"Tangent Normal"		%read{549,3802} %write{2147483647,-1}
temp	int	$tmp383	%read{550,550} %write{549,549}
temp	color	$tmp384	%read{552,552} %write{551,551}
temp	color	$tmp385	%read{556,556} %write{552,552}
const	float	$const43	-1		%read{553,3817} %write{2147483647,-1}
temp	color	$tmp386	%read{557,557} %write{553,553}
temp	color	$tmp387	%read{556,556} %write{554,554}
temp	color	$tmp388	%read{557,557} %write{556,556}
temp	float	$tmp389	%read{560,560} %write{559,559}
temp	float	$tmp390	%read{561,561} %write{560,560}
temp	float	$tmp391	%read{564,564} %write{563,563}
temp	float	$tmp392	%read{565,565} %write{564,564}
temp	float	$tmp393	%read{569,569} %write{568,568}
temp	float	$tmp394	%read{573,573} %write{571,571}
temp	float	$tmp395	%read{573,573} %write{572,572}
temp	float	$tmp396	%read{574,574} %write{573,573}
temp	normal	$tmp397	%read{580,580} %write{578,578}
temp	float	$tmp398	%read{578,578} %write{575,575}
temp	float	$tmp399	%read{578,578} %write{576,576}
temp	float	$tmp400	%read{578,578} %write{577,577}
const	string	$const44	"rnm_blend"		%read{579,3833} %write{2147483647,-1}
const	normal	$const45	0 0 1		%read{580,3834} %write{2147483647,-1}
const	normal	$const46	-1 -1 1		%read{581,3835} %write{2147483647,-1}
temp	float	$tmp403	%read{583,583} %write{582,582}
temp	normal	$tmp404	%read{585,585} %write{583,583}
temp	float	$tmp405	%read{585,585} %write{584,584}
temp	normal	$tmp406	%read{586,586} %write{585,585}
temp	float	$tmp407	%read{588,588} %write{587,587}
temp	int	$tmp408	%read{589,589} %write{588,588}
temp	normal	$tmp409	%read{593,593} %write{592,592}
temp	float	$tmp410	%read{592,592} %write{590,590}
temp	float	$tmp411	%read{592,592} %write{591,591}
temp	float	$tmp412	%read{597,597} %write{595,595}
temp	float	$tmp413	%read{597,597} %write{596,596}
temp	float	$tmp414	%read{598,598} %write{597,597}
temp	float	$tmp415	%read{604,604} %write{599,599}
temp	normal	$tmp416	%read{604,604} %write{603,603}
temp	float	$tmp417	%read{603,603} %write{600,600}
temp	float	$tmp418	%read{603,603} %write{601,601}
temp	float	$tmp419	%read{603,603} %write{602,602}
temp	normal	$tmp420	%read{605,605} %write{604,604}
temp	int	$tmp421	%read{607,617} %write{606,616}
temp	float	$tmp422	%read{614,614} %write{613,613}
temp	float	$tmp423	%read{613,613} %write{609,609}
temp	float	$tmp424	%read{613,613} %write{612,612}
temp	float	$tmp425	%read{612,612} %write{610,610}
temp	float	$tmp426	%read{612,612} %write{611,611}
temp	int	$tmp427	%read{615,615} %write{614,614}
temp	int	$tmp428	%read{616,616} %write{615,615}
temp	int	$tmp429	%read{618,628} %write{617,627}
temp	float	$tmp430	%read{625,625} %write{624,624}
temp	float	$tmp431	%read{624,624} %write{620,620}
temp	float	$tmp432	%read{624,624} %write{623,623}
temp	float	$tmp433	%read{623,623} %write{621,621}
temp	float	$tmp434	%read{623,623} %write{622,622}
temp	int	$tmp435	%read{626,626} %write{625,625}
temp	int	$tmp436	%read{627,627} %write{626,626}
const	string	$const47	"apply_color_management"		%read{629,3883} %write{2147483647,-1}
const	string	$const48	"Raw"		%read{630,4149} %write{2147483647,-1}
temp	int	$tmp437	%read{631,631} %write{630,630}
const	string	$const49	"sRGB"		%read{633,5049} %write{2147483647,-1}
temp	int	$tmp438	%read{634,634} %write{633,633}
const	string	$const50	"sRGB_EOTF"		%read{635,5077} %write{2147483647,-1}
temp	float	$tmp439	%read{672,672} %write{647,647}
temp	float	$tmp440	%read{638,645} %write{636,636}
const	float	$const51	0.0404499993		%read{638,5078} %write{2147483647,-1}
temp	int	$tmp441	%read{639,639} %write{638,638}
const	float	$const52	0.0549999997		%read{640,5080} %write{2147483647,-1}
temp	float	$tmp442	%read{641,641} %write{640,640}
const	float	$const53	1.05499995		%read{641,5081} %write{2147483647,-1}
temp	float	$tmp443	%read{642,642} %write{641,641}
const	float	$const54	2.4000001		%read{642,5244} %write{2147483647,-1}
temp	int	$tmp444	%read{644,644} %write{643,643}
const	float	$const55	12.9200001		%read{645,5085} %write{2147483647,-1}
temp	float	$tmp445	%read{672,672} %write{659,659}
temp	float	$tmp446	%read{650,657} %write{648,648}
temp	int	$tmp447	%read{651,651} %write{650,650}
temp	float	$tmp448	%read{653,653} %write{652,652}
temp	float	$tmp449	%read{654,654} %write{653,653}
temp	int	$tmp450	%read{656,656} %write{655,655}
temp	float	$tmp451	%read{672,672} %write{671,671}
temp	float	$tmp452	%read{662,669} %write{660,660}
temp	int	$tmp453	%read{663,663} %write{662,662}
temp	float	$tmp454	%read{665,665} %write{664,664}
temp	float	$tmp455	%read{666,666} %write{665,665}
temp	int	$tmp456	%read{668,668} %write{667,667}
const	string	$const56	"Rec.709"		%read{673,3927} %write{2147483647,-1}
temp	int	$tmp457	%read{674,674} %write{673,673}
const	string	$const57	"Rec709_EOTF"		%read{675,3959} %write{2147483647,-1}
temp	float	$tmp458	%read{718,718} %write{689,689}
temp	float	$tmp459	%read{678,687} %write{676,676}
const	float	$const58	0.0810000002		%read{678,3960} %write{2147483647,-1}
temp	int	$tmp460	%read{679,679} %write{678,678}
const	float	$const59	0.0989999995		%read{680,3962} %write{2147483647,-1}
temp	float	$tmp461	%read{681,681} %write{680,680}
const	float	$const60	1.09899998		%read{681,4132} %write{2147483647,-1}
temp	float	$tmp462	%read{683,683} %write{681,681}
const	float	$const61	0.449999988		%read{682,4142} %write{2147483647,-1}
temp	float	$tmp463	%read{683,683} %write{682,682}
temp	int	$tmp464	%read{685,685} %write{684,684}
const	float	$const62	4.5		%read{686,4138} %write{2147483647,-1}
temp	float	$tmp465	%read{687,687} %write{686,686}
temp	float	$tmp466	%read{718,718} %write{703,703}
temp	float	$tmp467	%read{692,701} %write{690,690}
temp	int	$tmp468	%read{693,693} %write{692,692}
temp	float	$tmp469	%read{695,695} %write{694,694}
temp	float	$tmp470	%read{697,697} %write{695,695}
temp	float	$tmp471	%read{697,697} %write{696,696}
temp	int	$tmp472	%read{699,699} %write{698,698}
temp	float	$tmp473	%read{701,701} %write{700,700}
temp	float	$tmp474	%read{718,718} %write{717,717}
temp	float	$tmp475	%read{706,715} %write{704,704}
temp	int	$tmp476	%read{707,707} %write{706,706}
temp	float	$tmp477	%read{709,709} %write{708,708}
temp	float	$tmp478	%read{711,711} %write{709,709}
temp	float	$tmp479	%read{711,711} %write{710,710}
temp	int	$tmp480	%read{713,713} %write{712,712}
temp	float	$tmp481	%read{715,715} %write{714,714}
const	string	$const63	"Gamma 2.2"		%read{719,3973} %write{2147483647,-1}
temp	int	$tmp482	%read{720,720} %write{719,719}
const	float	$const64	2.20000005		%read{728,5212} %write{2147483647,-1}
const	string	$const65	"gamma_CCTF"		%read{721,5239} %write{2147483647,-1}
temp	float	$tmp483	%read{746,746} %write{726,728}
temp	float	$tmp484	%read{724,728} %write{722,722}
temp	int	$tmp485	%read{725,725} %write{724,724}
temp	float	$tmp486	%read{746,746} %write{734,736}
temp	float	$tmp487	%read{732,736} %write{730,730}
temp	int	$tmp488	%read{733,733} %write{732,732}
temp	float	$tmp489	%read{746,746} %write{742,744}
temp	float	$tmp490	%read{740,744} %write{738,738}
temp	int	$tmp491	%read{741,741} %write{740,740}
const	string	$const66	"Gamma 2.4"		%read{747,4001} %write{2147483647,-1}
temp	int	$tmp492	%read{748,748} %write{747,747}
temp	float	$tmp493	%read{774,774} %write{754,756}
temp	float	$tmp494	%read{752,756} %write{750,750}
temp	int	$tmp495	%read{753,753} %write{752,752}
temp	float	$tmp496	%read{774,774} %write{762,764}
temp	float	$tmp497	%read{760,764} %write{758,758}
temp	int	$tmp498	%read{761,761} %write{760,760}
temp	float	$tmp499	%read{774,774} %write{770,772}
temp	float	$tmp500	%read{768,772} %write{766,766}
temp	int	$tmp501	%read{769,769} %write{768,768}
const	string	$const67	"Gamma 2.6 (DCI)"		%read{775,4029} %write{2147483647,-1}
temp	int	$tmp502	%read{776,776} %write{775,775}
const	float	$const68	2.5999999		%read{784,4054} %write{2147483647,-1}
temp	float	$tmp503	%read{802,802} %write{782,784}
temp	float	$tmp504	%read{780,784} %write{778,778}
temp	int	$tmp505	%read{781,781} %write{780,780}
temp	float	$tmp506	%read{802,802} %write{790,792}
temp	float	$tmp507	%read{788,792} %write{786,786}
temp	int	$tmp508	%read{789,789} %write{788,788}
temp	float	$tmp509	%read{802,802} %write{798,800}
temp	float	$tmp510	%read{796,800} %write{794,794}
temp	int	$tmp511	%read{797,797} %write{796,796}
const	string	$const69	"Rec.1886"		%read{803,4057} %write{2147483647,-1}
temp	int	$tmp512	%read{804,804} %write{803,803}
const	string	$const70	"Rec1886_EOTF"		%read{805,5144} %write{2147483647,-1}
temp	float	$tmp513	%read{827,827} %write{810,811}
temp	float	$tmp514	%read{808,810} %write{806,806}
temp	int	$tmp515	%read{809,809} %write{808,808}
temp	float	$tmp516	%read{827,827} %write{817,818}
temp	float	$tmp517	%read{815,817} %write{813,813}
temp	int	$tmp518	%read{816,816} %write{815,815}
temp	float	$tmp519	%read{827,827} %write{824,825}
temp	float	$tmp520	%read{822,824} %write{820,820}
temp	int	$tmp521	%read{823,823} %write{822,822}
const	string	$const71	"Rec.2020"		%read{828,5107} %write{2147483647,-1}
temp	int	$tmp522	%read{829,829} %write{828,828}
const	string	$const72	"Rec2020_EOTF"		%read{830,4127} %write{2147483647,-1}
const	int	$const73	12		%read{836,4130} %write{2147483647,-1}
temp	float	$tmp523	%read{892,892} %write{851,851}
temp	float	$tmp524	%read{834,846} %write{832,832}
temp	int	$tmp525	%read{835,835} %write{834,834}
const	int	$const74	10		%read{836,4130} %write{2147483647,-1}
temp	int	$tmp526	%read{837,837} %write{836,836}
const	float	$const75	0.0179999992		%read{839,4133} %write{2147483647,-1}
const	float	$const76	1.09930003		%read{840,4134} %write{2147483647,-1}
const	float	$const77	0.0181000009		%read{841,4135} %write{2147483647,-1}
temp	int	$tmp527	%read{843,843} %write{842,842}
temp	float	$tmp528	%read{846,846} %write{845,845}
temp	float	$tmp529	%read{847,847} %write{846,846}
temp	float	$tmp530	%read{849,849} %write{847,847}
temp	float	$tmp531	%read{849,849} %write{848,848}
temp	float	$tmp532	%read{892,892} %write{871,871}
temp	float	$tmp533	%read{854,866} %write{852,852}
temp	int	$tmp534	%read{855,855} %write{854,854}
temp	int	$tmp535	%read{857,857} %write{856,856}
temp	int	$tmp536	%read{863,863} %write{862,862}
temp	float	$tmp537	%read{866,866} %write{865,865}
temp	float	$tmp538	%read{867,867} %write{866,866}
temp	float	$tmp539	%read{869,869} %write{867,867}
temp	float	$tmp540	%read{869,869} %write{868,868}
temp	float	$tmp541	%read{892,892} %write{891,891}
temp	float	$tmp542	%read{874,886} %write{872,872}
temp	int	$tmp543	%read{875,875} %write{874,874}
temp	int	$tmp544	%read{877,877} %write{876,876}
temp	int	$tmp545	%read{883,883} %write{882,882}
temp	float	$tmp546	%read{886,886} %write{885,885}
temp	float	$tmp547	%read{887,887} %write{886,886}
temp	float	$tmp548	%read{889,889} %write{887,887}
temp	float	$tmp549	%read{889,889} %write{888,888}
temp	int	$tmp550	%read{896,896} %write{895,895}
temp	int	$tmp551	%read{897,901} %write{896,900}
temp	int	$tmp552	%read{899,899} %write{898,898}
temp	int	$tmp553	%read{900,900} %write{899,899}
const	string	$const78	"transform_colorspace_to_workingspace"		%read{902,4156} %write{2147483647,-1}
const	string	$const79	"scene-linear Rec 709/sRGB"		%read{903,5093} %write{2147483647,-1}
temp	int	$tmp554	%read{904,904} %write{903,903}
temp	int	$tmp555	%read{905,909} %write{904,908}
const	string	$const80	"sRGB/Rec.709"		%read{906,5096} %write{2147483647,-1}
temp	int	$tmp556	%read{907,907} %write{906,906}
temp	int	$tmp557	%read{908,908} %write{907,907}
const	string	$const81	"transform_color_space_to_Rec709"		%read{910,4164} %write{2147483647,-1}
temp	int	$tmp558	%read{913,913} %write{912,912}
temp	float	$tmp559	%read{951,951} %write{926,926}
temp	float	$tmp560	%read{917,924} %write{915,915}
temp	int	$tmp561	%read{918,918} %write{917,917}
temp	float	$tmp562	%read{920,920} %write{919,919}
temp	float	$tmp563	%read{921,921} %write{920,920}
temp	int	$tmp564	%read{923,923} %write{922,922}
temp	float	$tmp565	%read{951,951} %write{938,938}
temp	float	$tmp566	%read{929,936} %write{927,927}
temp	int	$tmp567	%read{930,930} %write{929,929}
temp	float	$tmp568	%read{932,932} %write{931,931}
temp	float	$tmp569	%read{933,933} %write{932,932}
temp	int	$tmp570	%read{935,935} %write{934,934}
temp	float	$tmp571	%read{951,951} %write{950,950}
temp	float	$tmp572	%read{941,948} %write{939,939}
temp	int	$tmp573	%read{942,942} %write{941,941}
temp	float	$tmp574	%read{944,944} %write{943,943}
temp	float	$tmp575	%read{945,945} %write{944,944}
temp	int	$tmp576	%read{947,947} %write{946,946}
temp	int	$tmp577	%read{953,953} %write{952,952}
temp	int	$tmp578	%read{954,958} %write{953,957}
temp	int	$tmp579	%read{956,956} %write{955,955}
temp	int	$tmp580	%read{957,957} %write{956,956}
const	string	$const82	"scene-linear Rec 2020"		%read{960,5104} %write{2147483647,-1}
temp	int	$tmp581	%read{961,961} %write{960,960}
temp	int	$tmp582	%read{962,966} %write{961,965}
temp	int	$tmp583	%read{964,964} %write{963,963}
temp	int	$tmp584	%read{965,965} %write{964,964}
temp	float	$tmp585	%read{970,970} %write{967,967}
const	vector	$const83	1.66049099 -0.58764112 -0.0728497878		%read{967,4221} %write{2147483647,-1}
temp	float	$tmp587	%read{970,970} %write{968,968}
const	vector	$const84	-0.124550469 1.13289988 -0.00834941957		%read{968,4222} %write{2147483647,-1}
temp	float	$tmp589	%read{970,970} %write{969,969}
const	vector	$const85	-0.0181507599 -0.100578092 1.11872971		%read{969,4223} %write{2147483647,-1}
const	string	$const86	"scene-linear DCI-P3"		%read{971,5115} %write{2147483647,-1}
temp	int	$tmp591	%read{972,972} %write{971,971}
temp	int	$tmp592	%read{973,977} %write{972,976}
const	string	$const87	"DCI-P3"		%read{974,5118} %write{2147483647,-1}
temp	int	$tmp593	%read{975,975} %write{974,974}
temp	int	$tmp594	%read{976,976} %write{975,975}
temp	float	$tmp595	%read{981,981} %write{978,978}
const	vector	$const88	1.15751636 -0.154962376 -0.00255402992		%read{978,4232} %write{2147483647,-1}
temp	float	$tmp597	%read{981,981} %write{979,979}
const	vector	$const89	-0.0415000692 1.04556787 -0.00406784983		%read{979,4233} %write{2147483647,-1}
temp	float	$tmp599	%read{981,981} %write{980,980}
const	vector	$const90	-0.0180500392 -0.078578271 1.09662831		%read{980,4234} %write{2147483647,-1}
const	string	$const91	"camera Rec 709"		%read{982,5126} %write{2147483647,-1}
temp	int	$tmp601	%read{983,983} %write{982,982}
temp	float	$tmp602	%read{1006,1006} %write{989,990}
temp	float	$tmp603	%read{987,989} %write{985,985}
temp	int	$tmp604	%read{988,988} %write{987,987}
temp	float	$tmp605	%read{1006,1006} %write{996,997}
temp	float	$tmp606	%read{994,996} %write{992,992}
temp	int	$tmp607	%read{995,995} %write{994,994}
temp	float	$tmp608	%read{1006,1006} %write{1003,1004}
temp	float	$tmp609	%read{1001,1003} %write{999,999}
temp	int	$tmp610	%read{1002,1002} %write{1001,1001}
const	string	$const92	"gamma 1.8 Rec 709"		%read{1007,5155} %write{2147483647,-1}
temp	int	$tmp611	%read{1008,1008} %write{1007,1007}
const	float	$const93	1.79999995		%read{1016,5180} %write{2147483647,-1}
temp	float	$tmp612	%read{1034,1034} %write{1014,1016}
temp	float	$tmp613	%read{1012,1016} %write{1010,1010}
temp	int	$tmp614	%read{1013,1013} %write{1012,1012}
temp	float	$tmp615	%read{1034,1034} %write{1022,1024}
temp	float	$tmp616	%read{1020,1024} %write{1018,1018}
temp	int	$tmp617	%read{1021,1021} %write{1020,1020}
temp	float	$tmp618	%read{1034,1034} %write{1030,1032}
temp	float	$tmp619	%read{1028,1032} %write{1026,1026}
temp	int	$tmp620	%read{1029,1029} %write{1028,1028}
const	string	$const94	"gamma 2.2 Rec 709"		%read{1035,5187} %write{2147483647,-1}
temp	int	$tmp621	%read{1036,1036} %write{1035,1035}
temp	float	$tmp622	%read{1062,1062} %write{1042,1044}
temp	float	$tmp623	%read{1040,1044} %write{1038,1038}
temp	int	$tmp624	%read{1041,1041} %write{1040,1040}
temp	float	$tmp625	%read{1062,1062} %write{1050,1052}
temp	float	$tmp626	%read{1048,1052} %write{1046,1046}
temp	int	$tmp627	%read{1049,1049} %write{1048,1048}
temp	float	$tmp628	%read{1062,1062} %write{1058,1060}
temp	float	$tmp629	%read{1056,1060} %write{1054,1054}
temp	int	$tmp630	%read{1057,1057} %write{1056,1056}
const	string	$const95	"gamma 2.4 Rec 709 (video)"		%read{1063,5219} %write{2147483647,-1}
temp	int	$tmp631	%read{1064,1064} %write{1063,1063}
temp	float	$tmp632	%read{1090,1090} %write{1070,1072}
temp	float	$tmp633	%read{1068,1072} %write{1066,1066}
temp	int	$tmp634	%read{1069,1069} %write{1068,1068}
temp	float	$tmp635	%read{1090,1090} %write{1078,1080}
temp	float	$tmp636	%read{1076,1080} %write{1074,1074}
temp	int	$tmp637	%read{1077,1077} %write{1076,1076}
temp	float	$tmp638	%read{1090,1090} %write{1086,1088}
temp	float	$tmp639	%read{1084,1088} %write{1082,1082}
temp	int	$tmp640	%read{1085,1085} %write{1084,1084}
const	string	$const96	"ACES2065-1"		%read{1091,5251} %write{2147483647,-1}
temp	int	$tmp641	%read{1092,1092} %write{1091,1091}
temp	int	$tmp642	%read{1093,1097} %write{1092,1096}
const	string	$const97	"ACES"		%read{1094,5254} %write{2147483647,-1}
temp	int	$tmp643	%read{1095,1095} %write{1094,1094}
temp	int	$tmp644	%read{1096,1096} %write{1095,1095}
temp	float	$tmp645	%read{1101,1101} %write{1098,1098}
const	vector	$const98	2.52168608 -1.13413095 -0.387555212		%read{1098,4352} %write{2147483647,-1}
temp	float	$tmp647	%read{1101,1101} %write{1099,1099}
const	vector	$const99	-0.2764799 1.37271905 -0.0962391719		%read{1099,4353} %write{2147483647,-1}
temp	float	$tmp649	%read{1101,1101} %write{1100,1100}
const	vector	$const100	-0.0153780598 -0.152975336 1.16835344		%read{1100,4354} %write{2147483647,-1}
const	string	$const101	"ACEScg"		%read{1102,5262} %write{2147483647,-1}
temp	int	$tmp651	%read{1103,1103} %write{1102,1102}
temp	float	$tmp652	%read{1107,1107} %write{1104,1104}
const	vector	$const102	1.70505095 -0.621792138 -0.0832588673		%read{1104,4358} %write{2147483647,-1}
temp	float	$tmp654	%read{1107,1107} %write{1105,1105}
const	vector	$const103	-0.130256414 1.14080477 -0.0105483197		%read{1105,4359} %write{2147483647,-1}
temp	float	$tmp656	%read{1107,1107} %write{1106,1106}
const	vector	$const104	-0.0240033604 -0.128968984 1.15297234		%read{1106,4360} %write{2147483647,-1}
temp	int	$tmp658	%read{1111,1111} %write{1110,1110}
temp	int	$tmp659	%read{1112,1116} %write{1111,1115}
temp	int	$tmp660	%read{1114,1114} %write{1113,1113}
temp	int	$tmp661	%read{1115,1115} %write{1114,1114}
const	string	$const105	"transform_color_space_to_Rec2020"		%read{1117,4371} %write{2147483647,-1}
temp	int	$tmp662	%read{1120,1120} %write{1119,1119}
temp	float	$tmp663	%read{1158,1158} %write{1133,1133}
temp	float	$tmp664	%read{1124,1131} %write{1122,1122}
temp	int	$tmp665	%read{1125,1125} %write{1124,1124}
temp	float	$tmp666	%read{1127,1127} %write{1126,1126}
temp	float	$tmp667	%read{1128,1128} %write{1127,1127}
temp	int	$tmp668	%read{1130,1130} %write{1129,1129}
temp	float	$tmp669	%read{1158,1158} %write{1145,1145}
temp	float	$tmp670	%read{1136,1143} %write{1134,1134}
temp	int	$tmp671	%read{1137,1137} %write{1136,1136}
temp	float	$tmp672	%read{1139,1139} %write{1138,1138}
temp	float	$tmp673	%read{1140,1140} %write{1139,1139}
temp	int	$tmp674	%read{1142,1142} %write{1141,1141}
temp	float	$tmp675	%read{1158,1158} %write{1157,1157}
temp	float	$tmp676	%read{1148,1155} %write{1146,1146}
temp	int	$tmp677	%read{1149,1149} %write{1148,1148}
temp	float	$tmp678	%read{1151,1151} %write{1150,1150}
temp	float	$tmp679	%read{1152,1152} %write{1151,1151}
temp	int	$tmp680	%read{1154,1154} %write{1153,1153}
temp	float	$tmp681	%read{1162,1162} %write{1159,1159}
const	vector	$const106	0.627403915 0.329283029 0.0433130711		%read{1159,4568} %write{2147483647,-1}
temp	float	$tmp683	%read{1162,1162} %write{1160,1160}
const	vector	$const107	0.069097288 0.919540405 0.0113623198		%read{1160,4569} %write{2147483647,-1}
temp	float	$tmp685	%read{1162,1162} %write{1161,1161}
const	vector	$const108	0.0163914394 0.0880133137 0.895595253		%read{1161,4570} %write{2147483647,-1}
temp	int	$tmp687	%read{1164,1164} %write{1163,1163}
temp	int	$tmp688	%read{1165,1169} %write{1164,1168}
temp	int	$tmp689	%read{1167,1167} %write{1166,1166}
temp	int	$tmp690	%read{1168,1168} %write{1167,1167}
temp	float	$tmp691	%read{1173,1173} %write{1170,1170}
temp	float	$tmp693	%read{1173,1173} %write{1171,1171}
temp	float	$tmp695	%read{1173,1173} %write{1172,1172}
temp	int	$tmp697	%read{1175,1175} %write{1174,1174}
temp	int	$tmp698	%read{1176,1180} %write{1175,1179}
temp	int	$tmp699	%read{1178,1178} %write{1177,1177}
temp	int	$tmp700	%read{1179,1179} %write{1178,1178}
temp	int	$tmp701	%read{1183,1183} %write{1182,1182}
temp	int	$tmp702	%read{1184,1188} %write{1183,1187}
temp	int	$tmp703	%read{1186,1186} %write{1185,1185}
temp	int	$tmp704	%read{1187,1187} %write{1186,1186}
temp	float	$tmp705	%read{1192,1192} %write{1189,1189}
const	vector	$const109	0.71178323 0.243660316 0.0445564501		%read{1189,4443} %write{2147483647,-1}
temp	float	$tmp707	%read{1192,1192} %write{1190,1190}
const	vector	$const110	0.0415141582 0.949841619 0.0085432101		%read{1190,4444} %write{2147483647,-1}
temp	float	$tmp709	%read{1192,1192} %write{1191,1191}
const	vector	$const111	-0.000844730006 0.0191095099 0.981735229		%read{1191,4445} %write{2147483647,-1}
temp	int	$tmp711	%read{1194,1194} %write{1193,1193}
temp	float	$tmp712	%read{1217,1217} %write{1200,1201}
temp	float	$tmp713	%read{1198,1200} %write{1196,1196}
temp	int	$tmp714	%read{1199,1199} %write{1198,1198}
temp	float	$tmp715	%read{1217,1217} %write{1207,1208}
temp	float	$tmp716	%read{1205,1207} %write{1203,1203}
temp	int	$tmp717	%read{1206,1206} %write{1205,1205}
temp	float	$tmp718	%read{1217,1217} %write{1214,1215}
temp	float	$tmp719	%read{1212,1214} %write{1210,1210}
temp	int	$tmp720	%read{1213,1213} %write{1212,1212}
temp	float	$tmp721	%read{1221,1221} %write{1218,1218}
temp	float	$tmp723	%read{1221,1221} %write{1219,1219}
temp	float	$tmp725	%read{1221,1221} %write{1220,1220}
temp	int	$tmp727	%read{1223,1223} %write{1222,1222}
temp	float	$tmp728	%read{1249,1249} %write{1229,1231}
temp	float	$tmp729	%read{1227,1231} %write{1225,1225}
temp	int	$tmp730	%read{1228,1228} %write{1227,1227}
temp	float	$tmp731	%read{1249,1249} %write{1237,1239}
temp	float	$tmp732	%read{1235,1239} %write{1233,1233}
temp	int	$tmp733	%read{1236,1236} %write{1235,1235}
temp	float	$tmp734	%read{1249,1249} %write{1245,1247}
temp	float	$tmp735	%read{1243,1247} %write{1241,1241}
temp	int	$tmp736	%read{1244,1244} %write{1243,1243}
temp	float	$tmp737	%read{1253,1253} %write{1250,1250}
temp	float	$tmp739	%read{1253,1253} %write{1251,1251}
temp	float	$tmp741	%read{1253,1253} %write{1252,1252}
temp	int	$tmp743	%read{1255,1255} %write{1254,1254}
temp	float	$tmp744	%read{1281,1281} %write{1261,1263}
temp	float	$tmp745	%read{1259,1263} %write{1257,1257}
temp	int	$tmp746	%read{1260,1260} %write{1259,1259}
temp	float	$tmp747	%read{1281,1281} %write{1269,1271}
temp	float	$tmp748	%read{1267,1271} %write{1265,1265}
temp	int	$tmp749	%read{1268,1268} %write{1267,1267}
temp	float	$tmp750	%read{1281,1281} %write{1277,1279}
temp	float	$tmp751	%read{1275,1279} %write{1273,1273}
temp	int	$tmp752	%read{1276,1276} %write{1275,1275}
temp	float	$tmp753	%read{1285,1285} %write{1282,1282}
temp	float	$tmp755	%read{1285,1285} %write{1283,1283}
temp	float	$tmp757	%read{1285,1285} %write{1284,1284}
temp	int	$tmp759	%read{1287,1287} %write{1286,1286}
temp	float	$tmp760	%read{1313,1313} %write{1293,1295}
temp	float	$tmp761	%read{1291,1295} %write{1289,1289}
temp	int	$tmp762	%read{1292,1292} %write{1291,1291}
temp	float	$tmp763	%read{1313,1313} %write{1301,1303}
temp	float	$tmp764	%read{1299,1303} %write{1297,1297}
temp	int	$tmp765	%read{1300,1300} %write{1299,1299}
temp	float	$tmp766	%read{1313,1313} %write{1309,1311}
temp	float	$tmp767	%read{1307,1311} %write{1305,1305}
temp	int	$tmp768	%read{1308,1308} %write{1307,1307}
temp	float	$tmp769	%read{1317,1317} %write{1314,1314}
temp	float	$tmp771	%read{1317,1317} %write{1315,1315}
temp	float	$tmp773	%read{1317,1317} %write{1316,1316}
temp	int	$tmp775	%read{1319,1319} %write{1318,1318}
temp	int	$tmp776	%read{1320,1324} %write{1319,1323}
temp	int	$tmp777	%read{1322,1322} %write{1321,1321}
temp	int	$tmp778	%read{1323,1323} %write{1322,1322}
temp	float	$tmp779	%read{1328,1328} %write{1325,1325}
const	vector	$const112	1.49040949 -0.266170919 -0.224238604		%read{1325,4579} %write{2147483647,-1}
temp	float	$tmp781	%read{1328,1328} %write{1326,1326}
const	vector	$const113	-0.0801675022 1.18216717 -0.101999603		%read{1326,4580} %write{2147483647,-1}
temp	float	$tmp783	%read{1328,1328} %write{1327,1327}
const	vector	$const114	0.00322762993 -0.034776479 1.03154886		%read{1327,4581} %write{2147483647,-1}
temp	int	$tmp785	%read{1330,1330} %write{1329,1329}
temp	float	$tmp786	%read{1334,1334} %write{1331,1331}
const	vector	$const115	1.02582479 -0.0200531892 -0.00577156013		%read{1331,4585} %write{2147483647,-1}
temp	float	$tmp788	%read{1334,1334} %write{1332,1332}
const	vector	$const116	-0.00223436998 1.00458646 -0.0023521299		%read{1332,4586} %write{2147483647,-1}
temp	float	$tmp790	%read{1334,1334} %write{1333,1333}
const	vector	$const117	-0.00501334993 -0.0252900701 1.03030348		%read{1333,4587} %write{2147483647,-1}
temp	int	$tmp792	%read{1338,1338} %write{1337,1337}
temp	int	$tmp793	%read{1339,1343} %write{1338,1342}
temp	int	$tmp794	%read{1341,1341} %write{1340,1340}
temp	int	$tmp795	%read{1342,1342} %write{1341,1341}
const	string	$const118	"transform_color_space_to_DCIP3"		%read{1344,4598} %write{2147483647,-1}
temp	int	$tmp796	%read{1347,1347} %write{1346,1346}
temp	float	$tmp797	%read{1385,1385} %write{1360,1360}
temp	float	$tmp798	%read{1351,1358} %write{1349,1349}
temp	int	$tmp799	%read{1352,1352} %write{1351,1351}
temp	float	$tmp800	%read{1354,1354} %write{1353,1353}
temp	float	$tmp801	%read{1355,1355} %write{1354,1354}
temp	int	$tmp802	%read{1357,1357} %write{1356,1356}
temp	float	$tmp803	%read{1385,1385} %write{1372,1372}
temp	float	$tmp804	%read{1363,1370} %write{1361,1361}
temp	int	$tmp805	%read{1364,1364} %write{1363,1363}
temp	float	$tmp806	%read{1366,1366} %write{1365,1365}
temp	float	$tmp807	%read{1367,1367} %write{1366,1366}
temp	int	$tmp808	%read{1369,1369} %write{1368,1368}
temp	float	$tmp809	%read{1385,1385} %write{1384,1384}
temp	float	$tmp810	%read{1375,1382} %write{1373,1373}
temp	int	$tmp811	%read{1376,1376} %write{1375,1375}
temp	float	$tmp812	%read{1378,1378} %write{1377,1377}
temp	float	$tmp813	%read{1379,1379} %write{1378,1378}
temp	int	$tmp814	%read{1381,1381} %write{1380,1380}
temp	float	$tmp815	%read{1389,1389} %write{1386,1386}
const	vector	$const119	0.868579745 0.12891914 0.00250112009		%read{1386,4795} %write{2147483647,-1}
temp	float	$tmp817	%read{1389,1389} %write{1387,1387}
const	vector	$const120	0.0345404111 0.961811364 0.00364820007		%read{1387,4796} %write{2147483647,-1}
temp	float	$tmp819	%read{1389,1389} %write{1388,1388}
const	vector	$const121	0.0167714301 0.071039997 0.91218859		%read{1388,4797} %write{2147483647,-1}
temp	int	$tmp821	%read{1391,1391} %write{1390,1390}
temp	int	$tmp822	%read{1392,1396} %write{1391,1395}
temp	int	$tmp823	%read{1394,1394} %write{1393,1393}
temp	int	$tmp824	%read{1395,1395} %write{1394,1394}
temp	float	$tmp825	%read{1400,1400} %write{1397,1397}
temp	float	$tmp827	%read{1400,1400} %write{1398,1398}
temp	float	$tmp829	%read{1400,1400} %write{1399,1399}
temp	int	$tmp831	%read{1402,1402} %write{1401,1401}
temp	int	$tmp832	%read{1403,1407} %write{1402,1406}
temp	int	$tmp833	%read{1405,1405} %write{1404,1404}
temp	int	$tmp834	%read{1406,1406} %write{1405,1405}
temp	float	$tmp835	%read{1411,1411} %write{1408,1408}
const	vector	$const122	1.42616653 -0.364612281 -0.0615542382		%read{1408,4662} %write{2147483647,-1}
temp	float	$tmp837	%read{1411,1411} %write{1409,1409}
const	vector	$const123	-0.0625062436 1.06897175 -0.0064654802		%read{1409,4663} %write{2147483647,-1}
temp	float	$tmp839	%read{1411,1411} %write{1410,1410}
const	vector	$const124	0.00244382001 -0.0211213008 1.01867747		%read{1410,4664} %write{2147483647,-1}
temp	int	$tmp841	%read{1413,1413} %write{1412,1412}
temp	int	$tmp842	%read{1414,1418} %write{1413,1417}
temp	int	$tmp843	%read{1416,1416} %write{1415,1415}
temp	int	$tmp844	%read{1417,1417} %write{1416,1416}
temp	int	$tmp845	%read{1421,1421} %write{1420,1420}
temp	float	$tmp846	%read{1444,1444} %write{1427,1428}
temp	float	$tmp847	%read{1425,1427} %write{1423,1423}
temp	int	$tmp848	%read{1426,1426} %write{1425,1425}
temp	float	$tmp849	%read{1444,1444} %write{1434,1435}
temp	float	$tmp850	%read{1432,1434} %write{1430,1430}
temp	int	$tmp851	%read{1433,1433} %write{1432,1432}
temp	float	$tmp852	%read{1444,1444} %write{1441,1442}
temp	float	$tmp853	%read{1439,1441} %write{1437,1437}
temp	int	$tmp854	%read{1440,1440} %write{1439,1439}
temp	float	$tmp855	%read{1448,1448} %write{1445,1445}
temp	float	$tmp857	%read{1448,1448} %write{1446,1446}
temp	float	$tmp859	%read{1448,1448} %write{1447,1447}
temp	int	$tmp861	%read{1450,1450} %write{1449,1449}
temp	float	$tmp862	%read{1476,1476} %write{1456,1458}
temp	float	$tmp863	%read{1454,1458} %write{1452,1452}
temp	int	$tmp864	%read{1455,1455} %write{1454,1454}
temp	float	$tmp865	%read{1476,1476} %write{1464,1466}
temp	float	$tmp866	%read{1462,1466} %write{1460,1460}
temp	int	$tmp867	%read{1463,1463} %write{1462,1462}
temp	float	$tmp868	%read{1476,1476} %write{1472,1474}
temp	float	$tmp869	%read{1470,1474} %write{1468,1468}
temp	int	$tmp870	%read{1471,1471} %write{1470,1470}
temp	float	$tmp871	%read{1480,1480} %write{1477,1477}
temp	float	$tmp873	%read{1480,1480} %write{1478,1478}
temp	float	$tmp875	%read{1480,1480} %write{1479,1479}
temp	int	$tmp877	%read{1482,1482} %write{1481,1481}
temp	float	$tmp878	%read{1508,1508} %write{1488,1490}
temp	float	$tmp879	%read{1486,1490} %write{1484,1484}
temp	int	$tmp880	%read{1487,1487} %write{1486,1486}
temp	float	$tmp881	%read{1508,1508} %write{1496,1498}
temp	float	$tmp882	%read{1494,1498} %write{1492,1492}
temp	int	$tmp883	%read{1495,1495} %write{1494,1494}
temp	float	$tmp884	%read{1508,1508} %write{1504,1506}
temp	float	$tmp885	%read{1502,1506} %write{1500,1500}
temp	int	$tmp886	%read{1503,1503} %write{1502,1502}
temp	float	$tmp887	%read{1512,1512} %write{1509,1509}
temp	float	$tmp889	%read{1512,1512} %write{1510,1510}
temp	float	$tmp891	%read{1512,1512} %write{1511,1511}
temp	int	$tmp893	%read{1514,1514} %write{1513,1513}
temp	float	$tmp894	%read{1540,1540} %write{1520,1522}
temp	float	$tmp895	%read{1518,1522} %write{1516,1516}
temp	int	$tmp896	%read{1519,1519} %write{1518,1518}
temp	float	$tmp897	%read{1540,1540} %write{1528,1530}
temp	float	$tmp898	%read{1526,1530} %write{1524,1524}
temp	int	$tmp899	%read{1527,1527} %write{1526,1526}
temp	float	$tmp900	%read{1540,1540} %write{1536,1538}
temp	float	$tmp901	%read{1534,1538} %write{1532,1532}
temp	int	$tmp902	%read{1535,1535} %write{1534,1534}
temp	float	$tmp903	%read{1544,1544} %write{1541,1541}
temp	float	$tmp905	%read{1544,1544} %write{1542,1542}
temp	float	$tmp907	%read{1544,1544} %write{1543,1543}
temp	int	$tmp909	%read{1546,1546} %write{1545,1545}
temp	int	$tmp910	%read{1547,1551} %write{1546,1550}
temp	int	$tmp911	%read{1549,1549} %write{1548,1548}
temp	int	$tmp912	%read{1550,1550} %write{1549,1549}
temp	float	$tmp913	%read{1555,1555} %write{1552,1552}
const	vector	$const125	2.15460348 -0.808496058 -0.346107483		%read{1552,4806} %write{2147483647,-1}
temp	float	$tmp915	%read{1555,1555} %write{1553,1553}
const	vector	$const126	-0.178877562 1.28056538 -0.101687863		%read{1553,4807} %write{2147483647,-1}
temp	float	$tmp917	%read{1555,1555} %write{1554,1554}
const	vector	$const127	0.00862345006 -0.0610453896 1.05242193		%read{1554,4808} %write{2147483647,-1}
temp	int	$tmp919	%read{1557,1557} %write{1556,1556}
temp	float	$tmp920	%read{1561,1561} %write{1558,1558}
const	vector	$const128	1.46412015 -0.393327028 -0.0707931295		%read{1558,4812} %write{2147483647,-1}
temp	float	$tmp922	%read{1561,1561} %write{1559,1559}
const	vector	$const129	-0.066476509 1.07529151 -0.00881501008		%read{1559,4813} %write{2147483647,-1}
temp	float	$tmp924	%read{1561,1561} %write{1560,1560}
const	vector	$const130	-0.00255285995 -0.0470295995 1.04958248		%read{1560,4814} %write{2147483647,-1}
temp	int	$tmp926	%read{1565,1565} %write{1564,1564}
temp	int	$tmp927	%read{1566,1570} %write{1565,1569}
temp	int	$tmp928	%read{1568,1568} %write{1567,1567}
temp	int	$tmp929	%read{1569,1569} %write{1568,1568}
const	string	$const131	"transform_color_space_to_ACES"		%read{1571,4825} %write{2147483647,-1}
temp	int	$tmp930	%read{1574,1574} %write{1573,1573}
temp	float	$tmp931	%read{1612,1612} %write{1587,1587}
temp	float	$tmp932	%read{1578,1585} %write{1576,1576}
temp	int	$tmp933	%read{1579,1579} %write{1578,1578}
temp	float	$tmp934	%read{1581,1581} %write{1580,1580}
temp	float	$tmp935	%read{1582,1582} %write{1581,1581}
temp	int	$tmp936	%read{1584,1584} %write{1583,1583}
temp	float	$tmp937	%read{1612,1612} %write{1599,1599}
temp	float	$tmp938	%read{1590,1597} %write{1588,1588}
temp	int	$tmp939	%read{1591,1591} %write{1590,1590}
temp	float	$tmp940	%read{1593,1593} %write{1592,1592}
temp	float	$tmp941	%read{1594,1594} %write{1593,1593}
temp	int	$tmp942	%read{1596,1596} %write{1595,1595}
temp	float	$tmp943	%read{1612,1612} %write{1611,1611}
temp	float	$tmp944	%read{1602,1609} %write{1600,1600}
temp	int	$tmp945	%read{1603,1603} %write{1602,1602}
temp	float	$tmp946	%read{1605,1605} %write{1604,1604}
temp	float	$tmp947	%read{1606,1606} %write{1605,1605}
temp	int	$tmp948	%read{1608,1608} %write{1607,1607}
temp	float	$tmp949	%read{1616,1616} %write{1613,1613}
const	vector	$const132	0.439632982 0.382988691 0.177378327		%read{1613,5025} %write{2147483647,-1}
temp	float	$tmp951	%read{1616,1616} %write{1614,1614}
const	vector	$const133	0.0897764415 0.813439429 0.0967841297		%read{1614,5026} %write{2147483647,-1}
temp	float	$tmp953	%read{1616,1616} %write{1615,1615}
const	vector	$const134	0.0175411701 0.111546554 0.870912254		%read{1615,5027} %write{2147483647,-1}
temp	int	$tmp955	%read{1618,1618} %write{1617,1617}
temp	int	$tmp956	%read{1619,1623} %write{1618,1622}
temp	int	$tmp957	%read{1621,1621} %write{1620,1620}
temp	int	$tmp958	%read{1622,1622} %write{1621,1621}
temp	float	$tmp959	%read{1627,1627} %write{1624,1624}
temp	float	$tmp961	%read{1627,1627} %write{1625,1625}
temp	float	$tmp963	%read{1627,1627} %write{1626,1626}
temp	int	$tmp965	%read{1629,1629} %write{1628,1628}
temp	int	$tmp966	%read{1630,1634} %write{1629,1633}
temp	int	$tmp967	%read{1632,1632} %write{1631,1631}
temp	int	$tmp968	%read{1633,1633} %write{1632,1632}
temp	float	$tmp969	%read{1638,1638} %write{1635,1635}
const	vector	$const135	0.679085612 0.157700911 0.163213447		%read{1635,4889} %write{2147483647,-1}
temp	float	$tmp971	%read{1638,1638} %write{1636,1636}
const	vector	$const136	0.0460020006 0.859054685 0.0949433222		%read{1636,4890} %write{2147483647,-1}
temp	float	$tmp973	%read{1638,1638} %write{1637,1637}
const	vector	$const137	-0.000573939993 0.0284677707 0.972106159		%read{1637,4891} %write{2147483647,-1}
temp	int	$tmp975	%read{1640,1640} %write{1639,1639}
temp	int	$tmp976	%read{1641,1645} %write{1640,1644}
temp	int	$tmp977	%read{1643,1643} %write{1642,1642}
temp	int	$tmp978	%read{1644,1644} %write{1643,1643}
temp	float	$tmp979	%read{1649,1649} %write{1646,1646}
const	vector	$const138	0.489786655 0.318376034 0.191837311		%read{1646,4900} %write{2147483647,-1}
temp	float	$tmp981	%read{1649,1649} %write{1647,1647}
const	vector	$const139	0.0684129521 0.828989089 0.102597967		%read{1647,4901} %write{2147483647,-1}
temp	float	$tmp983	%read{1649,1649} %write{1648,1648}
const	vector	$const140	-4.50000007e-05 0.0454764888 0.954568505		%read{1648,4902} %write{2147483647,-1}
temp	int	$tmp985	%read{1651,1651} %write{1650,1650}
temp	float	$tmp986	%read{1674,1674} %write{1657,1658}
temp	float	$tmp987	%read{1655,1657} %write{1653,1653}
temp	int	$tmp988	%read{1656,1656} %write{1655,1655}
temp	float	$tmp989	%read{1674,1674} %write{1664,1665}
temp	float	$tmp990	%read{1662,1664} %write{1660,1660}
temp	int	$tmp991	%read{1663,1663} %write{1662,1662}
temp	float	$tmp992	%read{1674,1674} %write{1671,1672}
temp	float	$tmp993	%read{1669,1671} %write{1667,1667}
temp	int	$tmp994	%read{1670,1670} %write{1669,1669}
temp	float	$tmp995	%read{1678,1678} %write{1675,1675}
temp	float	$tmp997	%read{1678,1678} %write{1676,1676}
temp	float	$tmp999	%read{1678,1678} %write{1677,1677}
temp	int	$tmp1001	%read{1680,1680} %write{1679,1679}
temp	float	$tmp1002	%read{1706,1706} %write{1686,1688}
temp	float	$tmp1003	%read{1684,1688} %write{1682,1682}
temp	int	$tmp1004	%read{1685,1685} %write{1684,1684}
temp	float	$tmp1005	%read{1706,1706} %write{1694,1696}
temp	float	$tmp1006	%read{1692,1696} %write{1690,1690}
temp	int	$tmp1007	%read{1693,1693} %write{1692,1692}
temp	float	$tmp1008	%read{1706,1706} %write{1702,1704}
temp	float	$tmp1009	%read{1700,1704} %write{1698,1698}
temp	int	$tmp1010	%read{1701,1701} %write{1700,1700}
temp	float	$tmp1011	%read{1710,1710} %write{1707,1707}
temp	float	$tmp1013	%read{1710,1710} %write{1708,1708}
temp	float	$tmp1015	%read{1710,1710} %write{1709,1709}
temp	int	$tmp1017	%read{1712,1712} %write{1711,1711}
temp	float	$tmp1018	%read{1738,1738} %write{1718,1720}
temp	float	$tmp1019	%read{1716,1720} %write{1714,1714}
temp	int	$tmp1020	%read{1717,1717} %write{1716,1716}
temp	float	$tmp1021	%read{1738,1738} %write{1726,1728}
temp	float	$tmp1022	%read{1724,1728} %write{1722,1722}
temp	int	$tmp1023	%read{1725,1725} %write{1724,1724}
temp	float	$tmp1024	%read{1738,1738} %write{1734,1736}
temp	float	$tmp1025	%read{1732,1736} %write{1730,1730}
temp	int	$tmp1026	%read{1733,1733} %write{1732,1732}
temp	float	$tmp1027	%read{1742,1742} %write{1739,1739}
temp	float	$tmp1029	%read{1742,1742} %write{1740,1740}
temp	float	$tmp1031	%read{1742,1742} %write{1741,1741}
temp	int	$tmp1033	%read{1744,1744} %write{1743,1743}
temp	float	$tmp1034	%read{1770,1770} %write{1750,1752}
temp	float	$tmp1035	%read{1748,1752} %write{1746,1746}
temp	int	$tmp1036	%read{1749,1749} %write{1748,1748}
temp	float	$tmp1037	%read{1770,1770} %write{1758,1760}
temp	float	$tmp1038	%read{1756,1760} %write{1754,1754}
temp	int	$tmp1039	%read{1757,1757} %write{1756,1756}
temp	float	$tmp1040	%read{1770,1770} %write{1766,1768}
temp	float	$tmp1041	%read{1764,1768} %write{1762,1762}
temp	int	$tmp1042	%read{1765,1765} %write{1764,1764}
temp	float	$tmp1043	%read{1774,1774} %write{1771,1771}
temp	float	$tmp1045	%read{1774,1774} %write{1772,1772}
temp	float	$tmp1047	%read{1774,1774} %write{1773,1773}
temp	int	$tmp1049	%read{1776,1776} %write{1775,1775}
temp	int	$tmp1050	%read{1777,1781} %write{1776,1780}
temp	int	$tmp1051	%read{1779,1779} %write{1778,1778}
temp	int	$tmp1052	%read{1780,1780} %write{1779,1779}
temp	int	$tmp1053	%read{1784,1784} %write{1783,1783}
temp	float	$tmp1054	%read{1788,1788} %write{1785,1785}
const	vector	$const141	0.695452213 0.140678704 0.163869053		%read{1785,5039} %write{2147483647,-1}
temp	float	$tmp1056	%read{1788,1788} %write{1786,1786}
const	vector	$const142	0.0447945595 0.859671116 0.0955343172		%read{1786,5040} %write{2147483647,-1}
temp	float	$tmp1058	%read{1788,1788} %write{1787,1787}
const	vector	$const143	-0.00552588003 0.00402521016 1.00150073		%read{1787,5041} %write{2147483647,-1}
temp	int	$tmp1060	%read{1792,1792} %write{1791,1791}
const	string	$const144	"transform_color_space_to_ACEScg"		%read{1793,5047} %write{2147483647,-1}
temp	int	$tmp1061	%read{1796,1796} %write{1795,1795}
temp	float	$tmp1062	%read{1834,1834} %write{1809,1809}
temp	float	$tmp1063	%read{1800,1807} %write{1798,1798}
temp	int	$tmp1064	%read{1801,1801} %write{1800,1800}
temp	float	$tmp1065	%read{1803,1803} %write{1802,1802}
temp	float	$tmp1066	%read{1804,1804} %write{1803,1803}
temp	int	$tmp1067	%read{1806,1806} %write{1805,1805}
temp	float	$tmp1068	%read{1834,1834} %write{1821,1821}
temp	float	$tmp1069	%read{1812,1819} %write{1810,1810}
temp	int	$tmp1070	%read{1813,1813} %write{1812,1812}
temp	float	$tmp1071	%read{1815,1815} %write{1814,1814}
temp	float	$tmp1072	%read{1816,1816} %write{1815,1815}
temp	int	$tmp1073	%read{1818,1818} %write{1817,1817}
temp	float	$tmp1074	%read{1834,1834} %write{1833,1833}
temp	float	$tmp1075	%read{1824,1831} %write{1822,1822}
temp	int	$tmp1076	%read{1825,1825} %write{1824,1824}
temp	float	$tmp1077	%read{1827,1827} %write{1826,1826}
temp	float	$tmp1078	%read{1828,1828} %write{1827,1827}
temp	int	$tmp1079	%read{1830,1830} %write{1829,1829}
temp	float	$tmp1080	%read{1838,1838} %write{1835,1835}
const	vector	$const145	0.613097429 0.339523137 0.047379449		%read{1835,5247} %write{2147483647,-1}
temp	float	$tmp1082	%read{1838,1838} %write{1836,1836}
const	vector	$const146	0.0701937228 0.916353881 0.0134524005		%read{1836,5248} %write{2147483647,-1}
temp	float	$tmp1084	%read{1838,1838} %write{1837,1837}
const	vector	$const147	0.0206155907 0.109569773 0.869814634		%read{1837,5249} %write{2147483647,-1}
temp	int	$tmp1086	%read{1840,1840} %write{1839,1839}
temp	int	$tmp1087	%read{1841,1845} %write{1840,1844}
temp	int	$tmp1088	%read{1843,1843} %write{1842,1842}
temp	int	$tmp1089	%read{1844,1844} %write{1843,1843}
temp	float	$tmp1090	%read{1849,1849} %write{1846,1846}
temp	float	$tmp1092	%read{1849,1849} %write{1847,1847}
temp	float	$tmp1094	%read{1849,1849} %write{1848,1848}
temp	int	$tmp1096	%read{1851,1851} %write{1850,1850}
temp	int	$tmp1097	%read{1852,1856} %write{1851,1855}
temp	int	$tmp1098	%read{1854,1854} %write{1853,1853}
temp	int	$tmp1099	%read{1855,1855} %write{1854,1854}
temp	float	$tmp1100	%read{1860,1860} %write{1857,1857}
const	vector	$const148	0.974895 0.0195991099 0.00550591014		%read{1857,5111} %write{2147483647,-1}
temp	float	$tmp1102	%read{1860,1860} %write{1858,1858}
const	vector	$const149	0.00217956002 0.995535493 0.0022849699		%read{1858,5112} %write{2147483647,-1}
temp	float	$tmp1104	%read{1860,1860} %write{1859,1859}
const	vector	$const150	0.00479723979 0.0245320201 0.97067076		%read{1859,5113} %write{2147483647,-1}
temp	int	$tmp1106	%read{1862,1862} %write{1861,1861}
temp	int	$tmp1107	%read{1863,1867} %write{1862,1866}
temp	int	$tmp1108	%read{1865,1865} %write{1864,1864}
temp	int	$tmp1109	%read{1866,1866} %write{1865,1865}
temp	float	$tmp1110	%read{1871,1871} %write{1868,1868}
const	vector	$const151	0.694724858 0.256264478 0.0490106493		%read{1868,5122} %write{2147483647,-1}
temp	float	$tmp1112	%read{1871,1871} %write{1869,1869}
const	vector	$const152	0.0429788195 0.946175754 0.0108454097		%read{1869,5123} %write{2147483647,-1}
temp	float	$tmp1114	%read{1871,1871} %write{1870,1870}
const	vector	$const153	0.00361555 0.0430194698 0.953364968		%read{1870,5124} %write{2147483647,-1}
temp	int	$tmp1116	%read{1873,1873} %write{1872,1872}
temp	float	$tmp1117	%read{1896,1896} %write{1879,1880}
temp	float	$tmp1118	%read{1877,1879} %write{1875,1875}
temp	int	$tmp1119	%read{1878,1878} %write{1877,1877}
temp	float	$tmp1120	%read{1896,1896} %write{1886,1887}
temp	float	$tmp1121	%read{1884,1886} %write{1882,1882}
temp	int	$tmp1122	%read{1885,1885} %write{1884,1884}
temp	float	$tmp1123	%read{1896,1896} %write{1893,1894}
temp	float	$tmp1124	%read{1891,1893} %write{1889,1889}
temp	int	$tmp1125	%read{1892,1892} %write{1891,1891}
temp	float	$tmp1126	%read{1900,1900} %write{1897,1897}
temp	float	$tmp1128	%read{1900,1900} %write{1898,1898}
temp	float	$tmp1130	%read{1900,1900} %write{1899,1899}
temp	int	$tmp1132	%read{1902,1902} %write{1901,1901}
temp	float	$tmp1133	%read{1928,1928} %write{1908,1910}
temp	float	$tmp1134	%read{1906,1910} %write{1904,1904}
temp	int	$tmp1135	%read{1907,1907} %write{1906,1906}
temp	float	$tmp1136	%read{1928,1928} %write{1916,1918}
temp	float	$tmp1137	%read{1914,1918} %write{1912,1912}
temp	int	$tmp1138	%read{1915,1915} %write{1914,1914}
temp	float	$tmp1139	%read{1928,1928} %write{1924,1926}
temp	float	$tmp1140	%read{1922,1926} %write{1920,1920}
temp	int	$tmp1141	%read{1923,1923} %write{1922,1922}
temp	float	$tmp1142	%read{1932,1932} %write{1929,1929}
temp	float	$tmp1144	%read{1932,1932} %write{1930,1930}
temp	float	$tmp1146	%read{1932,1932} %write{1931,1931}
temp	int	$tmp1148	%read{1934,1934} %write{1933,1933}
temp	float	$tmp1149	%read{1960,1960} %write{1940,1942}
temp	float	$tmp1150	%read{1938,1942} %write{1936,1936}
temp	int	$tmp1151	%read{1939,1939} %write{1938,1938}
temp	float	$tmp1152	%read{1960,1960} %write{1948,1950}
temp	float	$tmp1153	%read{1946,1950} %write{1944,1944}
temp	int	$tmp1154	%read{1947,1947} %write{1946,1946}
temp	float	$tmp1155	%read{1960,1960} %write{1956,1958}
temp	float	$tmp1156	%read{1954,1958} %write{1952,1952}
temp	int	$tmp1157	%read{1955,1955} %write{1954,1954}
temp	float	$tmp1158	%read{1964,1964} %write{1961,1961}
temp	float	$tmp1160	%read{1964,1964} %write{1962,1962}
temp	float	$tmp1162	%read{1964,1964} %write{1963,1963}
temp	int	$tmp1164	%read{1966,1966} %write{1965,1965}
temp	float	$tmp1165	%read{1992,1992} %write{1972,1974}
temp	float	$tmp1166	%read{1970,1974} %write{1968,1968}
temp	int	$tmp1167	%read{1971,1971} %write{1970,1970}
temp	float	$tmp1168	%read{1992,1992} %write{1980,1982}
temp	float	$tmp1169	%read{1978,1982} %write{1976,1976}
temp	int	$tmp1170	%read{1979,1979} %write{1978,1978}
temp	float	$tmp1171	%read{1992,1992} %write{1988,1990}
temp	float	$tmp1172	%read{1986,1990} %write{1984,1984}
temp	int	$tmp1173	%read{1987,1987} %write{1986,1986}
temp	float	$tmp1174	%read{1996,1996} %write{1993,1993}
temp	float	$tmp1176	%read{1996,1996} %write{1994,1994}
temp	float	$tmp1178	%read{1996,1996} %write{1995,1995}
temp	int	$tmp1180	%read{1998,1998} %write{1997,1997}
temp	int	$tmp1181	%read{1999,2003} %write{1998,2002}
temp	int	$tmp1182	%read{2001,2001} %write{2000,2000}
temp	int	$tmp1183	%read{2002,2002} %write{2001,2001}
temp	float	$tmp1184	%read{2007,2007} %write{2004,2004}
const	vector	$const154	1.45143926 -0.236510754 -0.214928567		%read{2004,5258} %write{2147483647,-1}
temp	float	$tmp1186	%read{2007,2007} %write{2005,2005}
const	vector	$const155	-0.0765537694 1.17622972 -0.099675931		%read{2005,5259} %write{2147483647,-1}
temp	float	$tmp1188	%read{2007,2007} %write{2006,2006}
const	vector	$const156	0.00831614994 -0.00603245012 0.997716308		%read{2006,5260} %write{2147483647,-1}
temp	int	$tmp1190	%read{2009,2009} %write{2008,2008}
temp	float	$tmp1191	%read{2017,2017} %write{2016,2016}
temp	color	$tmp1192	%read{2018,2018} %write{2017,2017}
temp	color	$tmp1193	%read{2019,2019} %write{2018,2018}
temp	float	$tmp1194	%read{2021,2021} %write{2020,2020}
temp	float	$tmp1195	%read{2022,2022} %write{2021,2021}
temp	float	$tmp1196	%read{2024,2024} %write{2023,2023}
temp	color	$tmp1197	%read{2025,2025} %write{2024,2024}
temp	float	$tmp1198	%read{2027,2027} %write{2026,2026}
temp	int	$tmp1199	%read{2031,2031} %write{2030,2030}
temp	int	$tmp1200	%read{2032,2035} %write{2031,2034}
temp	int	$tmp1201	%read{2034,2034} %write{2033,2033}
temp	int	$tmp1202	%read{2147483647,-1} %write{2036,2036}
temp	float	$tmp1203	%read{2038,2038} %write{2037,2037}
temp	int	$tmp1204	%read{2039,2039} %write{2038,2038}
temp	int	$tmp1205	%read{2040,2055} %write{2039,2054}
temp	int	$tmp1206	%read{2042,2042} %write{2041,2041}
temp	int	$tmp1207	%read{2043,2053} %write{2042,2052}
temp	float	$tmp1208	%read{2050,2050} %write{2049,2049}
temp	float	$tmp1209	%read{2049,2049} %write{2045,2045}
temp	float	$tmp1210	%read{2049,2049} %write{2048,2048}
temp	float	$tmp1211	%read{2048,2048} %write{2046,2046}
temp	float	$tmp1212	%read{2048,2048} %write{2047,2047}
temp	int	$tmp1213	%read{2051,2051} %write{2050,2050}
temp	int	$tmp1214	%read{2052,2052} %write{2051,2051}
temp	int	$tmp1215	%read{2054,2054} %write{2053,2053}
temp	string	$tmp1216	%read{2076,2076} %write{2060,2074}
temp	int	$tmp1217	%read{2059,2059} %write{2058,2058}
temp	int	$tmp1218	%read{2063,2063} %write{2062,2062}
temp	int	$tmp1219	%read{2067,2067} %write{2066,2066}
temp	int	$tmp1220	%read{2071,2071} %write{2070,2070}
temp	string	$tmp1221	%read{2096,2096} %write{2080,2094}
temp	int	$tmp1222	%read{2079,2079} %write{2078,2078}
temp	int	$tmp1223	%read{2083,2083} %write{2082,2082}
temp	int	$tmp1224	%read{2087,2087} %write{2086,2086}
temp	int	$tmp1225	%read{2091,2091} %write{2090,2090}
temp	float	$tmp1226	%read{2104,2104} %write{2097,2097} %derivs
temp	float	$tmp1227	%read{2105,2105} %write{2098,2098} %derivs
temp	string	$tmp1228	%read{2173,2173} %write{2099,2099}
temp	string	$tmp1229	%read{2173,2173} %write{2100,2100}
temp	float	$tmp1230	%read{2102,2102} %write{2101,2101} %derivs
temp	int	$tmp1231	%read{2168,2168} %write{2102,2102} %derivs
temp	int	$tmp1232	%read{2107,2107} %write{2106,2106}
temp	float	$tmp1233	%read{2117,2120} %write{2108,2108} %derivs
temp	float	$tmp1234	%read{2118,2121} %write{2109,2109} %derivs
temp	float	$tmp1235	%read{2123,2123} %write{2110,2119} %derivs
temp	float	$tmp1236	%read{2124,2124} %write{2111,2122} %derivs
temp	float	$tmp1237	%read{2115,2115} %write{2114,2114} %derivs
temp	float	$tmp1238	%read{2119,2119} %write{2117,2117} %derivs
temp	float	$tmp1239	%read{2119,2119} %write{2118,2118} %derivs
temp	float	$tmp1240	%read{2122,2122} %write{2120,2120} %derivs
temp	float	$tmp1241	%read{2122,2122} %write{2121,2121} %derivs
temp	float	$tmp1242	%read{2139,2139} %write{2132,2138} %derivs
temp	float	$tmp1243	%read{2132,2132} %write{2131,2131} %derivs
temp	float	$tmp1244	%read{2128,2131} %write{2126,2126} %derivs
temp	float	$tmp1245	%read{2130,2130} %write{2129,2129} %derivs
temp	float	$tmp1246	%read{2129,2129} %write{2128,2128} %derivs
temp	float	$tmp1247	%read{2131,2131} %write{2130,2130} %derivs
temp	float	$tmp1248	%read{2135,2138} %write{2133,2133} %derivs
temp	float	$tmp1249	%read{2137,2137} %write{2136,2136} %derivs
temp	float	$tmp1250	%read{2136,2136} %write{2135,2135} %derivs
temp	float	$tmp1251	%read{2138,2138} %write{2137,2137} %derivs
temp	float	$tmp1252	%read{2154,2154} %write{2147,2153} %derivs
temp	float	$tmp1253	%read{2147,2147} %write{2146,2146} %derivs
temp	float	$tmp1254	%read{2143,2146} %write{2141,2141} %derivs
temp	float	$tmp1255	%read{2145,2145} %write{2144,2144} %derivs
temp	float	$tmp1256	%read{2144,2144} %write{2143,2143} %derivs
temp	float	$tmp1257	%read{2146,2146} %write{2145,2145} %derivs
temp	float	$tmp1258	%read{2150,2153} %write{2148,2148} %derivs
temp	float	$tmp1259	%read{2152,2152} %write{2151,2151} %derivs
temp	float	$tmp1260	%read{2151,2151} %write{2150,2150} %derivs
temp	float	$tmp1261	%read{2153,2153} %write{2152,2152} %derivs
temp	float	$tmp1262	%read{2156,2156} %write{2155,2155} %derivs
temp	float	$tmp1263	%read{2157,2157} %write{2156,2156} %derivs
temp	float	$tmp1264	%read{2159,2159} %write{2158,2158} %derivs
temp	float	$tmp1265	%read{2160,2160} %write{2159,2159} %derivs
temp	float	$tmp1266	%read{2162,2162} %write{2161,2161} %derivs
temp	float	$tmp1267	%read{2163,2163} %write{2162,2162} %derivs
temp	float	$tmp1268	%read{2165,2165} %write{2164,2164} %derivs
temp	float	$tmp1269	%read{2166,2166} %write{2165,2165} %derivs
temp	float	$tmp1270	%read{2169,2169} %write{2167,2167} %derivs
temp	float	$tmp1271	%read{2170,2170} %write{2169,2169} %derivs
temp	float	$tmp1272	%read{2169,2169} %write{2168,2168} %derivs
temp	float	$tmp1273	%read{2173,2173} %write{2171,2171} %derivs
temp	float	$tmp1274	%read{2173,2173} %write{2172,2172} %derivs
temp	int	$tmp1276	%read{2176,2176} %write{2175,2175}
temp	color	$tmp1277	%read{2178,2178} %write{2177,2177}
temp	color	$tmp1278	%read{2182,2182} %write{2178,2178}
temp	color	$tmp1279	%read{2183,2183} %write{2179,2179}
temp	color	$tmp1280	%read{2182,2182} %write{2180,2180}
temp	color	$tmp1281	%read{2183,2183} %write{2182,2182}
temp	float	$tmp1282	%read{2186,2186} %write{2185,2185}
temp	float	$tmp1283	%read{2187,2187} %write{2186,2186}
temp	float	$tmp1284	%read{2190,2190} %write{2189,2189}
temp	float	$tmp1285	%read{2191,2191} %write{2190,2190}
temp	float	$tmp1286	%read{2195,2195} %write{2194,2194}
temp	float	$tmp1287	%read{2199,2199} %write{2197,2197}
temp	float	$tmp1288	%read{2199,2199} %write{2198,2198}
temp	float	$tmp1289	%read{2200,2200} %write{2199,2199}
temp	normal	$tmp1290	%read{2206,2206} %write{2204,2204}
temp	float	$tmp1291	%read{2204,2204} %write{2201,2201}
temp	float	$tmp1292	%read{2204,2204} %write{2202,2202}
temp	float	$tmp1293	%read{2204,2204} %write{2203,2203}
temp	float	$tmp1296	%read{2209,2209} %write{2208,2208}
temp	normal	$tmp1297	%read{2211,2211} %write{2209,2209}
temp	float	$tmp1298	%read{2211,2211} %write{2210,2210}
temp	normal	$tmp1299	%read{2212,2212} %write{2211,2211}
temp	float	$tmp1300	%read{2214,2214} %write{2213,2213}
temp	int	$tmp1301	%read{2215,2215} %write{2214,2214}
temp	normal	$tmp1302	%read{2219,2219} %write{2218,2218}
temp	float	$tmp1303	%read{2218,2218} %write{2216,2216}
temp	float	$tmp1304	%read{2218,2218} %write{2217,2217}
temp	float	$tmp1305	%read{2223,2223} %write{2221,2221}
temp	float	$tmp1306	%read{2223,2223} %write{2222,2222}
temp	float	$tmp1307	%read{2224,2224} %write{2223,2223}
temp	float	$tmp1308	%read{2230,2230} %write{2225,2225}
temp	normal	$tmp1309	%read{2230,2230} %write{2229,2229}
temp	float	$tmp1310	%read{2229,2229} %write{2226,2226}
temp	float	$tmp1311	%read{2229,2229} %write{2227,2227}
temp	float	$tmp1312	%read{2229,2229} %write{2228,2228}
temp	normal	$tmp1313	%read{2231,2231} %write{2230,2230}
temp	int	$tmp1314	%read{2233,2243} %write{2232,2242}
temp	float	$tmp1315	%read{2240,2240} %write{2239,2239}
temp	float	$tmp1316	%read{2239,2239} %write{2235,2235}
temp	float	$tmp1317	%read{2239,2239} %write{2238,2238}
temp	float	$tmp1318	%read{2238,2238} %write{2236,2236}
temp	float	$tmp1319	%read{2238,2238} %write{2237,2237}
temp	int	$tmp1320	%read{2241,2241} %write{2240,2240}
temp	int	$tmp1321	%read{2242,2242} %write{2241,2241}
temp	int	$tmp1322	%read{2244,2254} %write{2243,2253}
temp	float	$tmp1323	%read{2251,2251} %write{2250,2250}
temp	float	$tmp1324	%read{2250,2250} %write{2246,2246}
temp	float	$tmp1325	%read{2250,2250} %write{2249,2249}
temp	float	$tmp1326	%read{2249,2249} %write{2247,2247}
temp	float	$tmp1327	%read{2249,2249} %write{2248,2248}
temp	int	$tmp1328	%read{2252,2252} %write{2251,2251}
temp	int	$tmp1329	%read{2253,2253} %write{2252,2252}
temp	int	$tmp1330	%read{2257,2257} %write{2256,2256}
temp	int	$tmp1331	%read{2260,2260} %write{2259,2259}
temp	float	$tmp1332	%read{2298,2298} %write{2273,2273}
temp	float	$tmp1333	%read{2264,2271} %write{2262,2262}
temp	int	$tmp1334	%read{2265,2265} %write{2264,2264}
temp	float	$tmp1335	%read{2267,2267} %write{2266,2266}
temp	float	$tmp1336	%read{2268,2268} %write{2267,2267}
temp	int	$tmp1337	%read{2270,2270} %write{2269,2269}
temp	float	$tmp1338	%read{2298,2298} %write{2285,2285}
temp	float	$tmp1339	%read{2276,2283} %write{2274,2274}
temp	int	$tmp1340	%read{2277,2277} %write{2276,2276}
temp	float	$tmp1341	%read{2279,2279} %write{2278,2278}
temp	float	$tmp1342	%read{2280,2280} %write{2279,2279}
temp	int	$tmp1343	%read{2282,2282} %write{2281,2281}
temp	float	$tmp1344	%read{2298,2298} %write{2297,2297}
temp	float	$tmp1345	%read{2288,2295} %write{2286,2286}
temp	int	$tmp1346	%read{2289,2289} %write{2288,2288}
temp	float	$tmp1347	%read{2291,2291} %write{2290,2290}
temp	float	$tmp1348	%read{2292,2292} %write{2291,2291}
temp	int	$tmp1349	%read{2294,2294} %write{2293,2293}
temp	int	$tmp1350	%read{2300,2300} %write{2299,2299}
temp	float	$tmp1351	%read{2344,2344} %write{2315,2315}
temp	float	$tmp1352	%read{2304,2313} %write{2302,2302}
temp	int	$tmp1353	%read{2305,2305} %write{2304,2304}
temp	float	$tmp1354	%read{2307,2307} %write{2306,2306}
temp	float	$tmp1355	%read{2309,2309} %write{2307,2307}
temp	float	$tmp1356	%read{2309,2309} %write{2308,2308}
temp	int	$tmp1357	%read{2311,2311} %write{2310,2310}
temp	float	$tmp1358	%read{2313,2313} %write{2312,2312}
temp	float	$tmp1359	%read{2344,2344} %write{2329,2329}
temp	float	$tmp1360	%read{2318,2327} %write{2316,2316}
temp	int	$tmp1361	%read{2319,2319} %write{2318,2318}
temp	float	$tmp1362	%read{2321,2321} %write{2320,2320}
temp	float	$tmp1363	%read{2323,2323} %write{2321,2321}
temp	float	$tmp1364	%read{2323,2323} %write{2322,2322}
temp	int	$tmp1365	%read{2325,2325} %write{2324,2324}
temp	float	$tmp1366	%read{2327,2327} %write{2326,2326}
temp	float	$tmp1367	%read{2344,2344} %write{2343,2343}
temp	float	$tmp1368	%read{2332,2341} %write{2330,2330}
temp	int	$tmp1369	%read{2333,2333} %write{2332,2332}
temp	float	$tmp1370	%read{2335,2335} %write{2334,2334}
temp	float	$tmp1371	%read{2337,2337} %write{2335,2335}
temp	float	$tmp1372	%read{2337,2337} %write{2336,2336}
temp	int	$tmp1373	%read{2339,2339} %write{2338,2338}
temp	float	$tmp1374	%read{2341,2341} %write{2340,2340}
temp	int	$tmp1375	%read{2346,2346} %write{2345,2345}
temp	float	$tmp1376	%read{2372,2372} %write{2352,2354}
temp	float	$tmp1377	%read{2350,2354} %write{2348,2348}
temp	int	$tmp1378	%read{2351,2351} %write{2350,2350}
temp	float	$tmp1379	%read{2372,2372} %write{2360,2362}
temp	float	$tmp1380	%read{2358,2362} %write{2356,2356}
temp	int	$tmp1381	%read{2359,2359} %write{2358,2358}
temp	float	$tmp1382	%read{2372,2372} %write{2368,2370}
temp	float	$tmp1383	%read{2366,2370} %write{2364,2364}
temp	int	$tmp1384	%read{2367,2367} %write{2366,2366}
temp	int	$tmp1385	%read{2374,2374} %write{2373,2373}
temp	float	$tmp1386	%read{2400,2400} %write{2380,2382}
temp	float	$tmp1387	%read{2378,2382} %write{2376,2376}
temp	int	$tmp1388	%read{2379,2379} %write{2378,2378}
temp	float	$tmp1389	%read{2400,2400} %write{2388,2390}
temp	float	$tmp1390	%read{2386,2390} %write{2384,2384}
temp	int	$tmp1391	%read{2387,2387} %write{2386,2386}
temp	float	$tmp1392	%read{2400,2400} %write{2396,2398}
temp	float	$tmp1393	%read{2394,2398} %write{2392,2392}
temp	int	$tmp1394	%read{2395,2395} %write{2394,2394}
temp	int	$tmp1395	%read{2402,2402} %write{2401,2401}
temp	float	$tmp1396	%read{2428,2428} %write{2408,2410}
temp	float	$tmp1397	%read{2406,2410} %write{2404,2404}
temp	int	$tmp1398	%read{2407,2407} %write{2406,2406}
temp	float	$tmp1399	%read{2428,2428} %write{2416,2418}
temp	float	$tmp1400	%read{2414,2418} %write{2412,2412}
temp	int	$tmp1401	%read{2415,2415} %write{2414,2414}
temp	float	$tmp1402	%read{2428,2428} %write{2424,2426}
temp	float	$tmp1403	%read{2422,2426} %write{2420,2420}
temp	int	$tmp1404	%read{2423,2423} %write{2422,2422}
temp	int	$tmp1405	%read{2430,2430} %write{2429,2429}
temp	float	$tmp1406	%read{2453,2453} %write{2436,2437}
temp	float	$tmp1407	%read{2434,2436} %write{2432,2432}
temp	int	$tmp1408	%read{2435,2435} %write{2434,2434}
temp	float	$tmp1409	%read{2453,2453} %write{2443,2444}
temp	float	$tmp1410	%read{2441,2443} %write{2439,2439}
temp	int	$tmp1411	%read{2442,2442} %write{2441,2441}
temp	float	$tmp1412	%read{2453,2453} %write{2450,2451}
temp	float	$tmp1413	%read{2448,2450} %write{2446,2446}
temp	int	$tmp1414	%read{2449,2449} %write{2448,2448}
temp	int	$tmp1415	%read{2455,2455} %write{2454,2454}
temp	float	$tmp1416	%read{2518,2518} %write{2477,2477}
temp	float	$tmp1417	%read{2460,2472} %write{2458,2458}
temp	int	$tmp1418	%read{2461,2461} %write{2460,2460}
temp	int	$tmp1419	%read{2463,2463} %write{2462,2462}
temp	int	$tmp1420	%read{2469,2469} %write{2468,2468}
temp	float	$tmp1421	%read{2472,2472} %write{2471,2471}
temp	float	$tmp1422	%read{2473,2473} %write{2472,2472}
temp	float	$tmp1423	%read{2475,2475} %write{2473,2473}
temp	float	$tmp1424	%read{2475,2475} %write{2474,2474}
temp	float	$tmp1425	%read{2518,2518} %write{2497,2497}
temp	float	$tmp1426	%read{2480,2492} %write{2478,2478}
temp	int	$tmp1427	%read{2481,2481} %write{2480,2480}
temp	int	$tmp1428	%read{2483,2483} %write{2482,2482}
temp	int	$tmp1429	%read{2489,2489} %write{2488,2488}
temp	float	$tmp1430	%read{2492,2492} %write{2491,2491}
temp	float	$tmp1431	%read{2493,2493} %write{2492,2492}
temp	float	$tmp1432	%read{2495,2495} %write{2493,2493}
temp	float	$tmp1433	%read{2495,2495} %write{2494,2494}
temp	float	$tmp1434	%read{2518,2518} %write{2517,2517}
temp	float	$tmp1435	%read{2500,2512} %write{2498,2498}
temp	int	$tmp1436	%read{2501,2501} %write{2500,2500}
temp	int	$tmp1437	%read{2503,2503} %write{2502,2502}
temp	int	$tmp1438	%read{2509,2509} %write{2508,2508}
temp	float	$tmp1439	%read{2512,2512} %write{2511,2511}
temp	float	$tmp1440	%read{2513,2513} %write{2512,2512}
temp	float	$tmp1441	%read{2515,2515} %write{2513,2513}
temp	float	$tmp1442	%read{2515,2515} %write{2514,2514}
temp	int	$tmp1443	%read{2522,2522} %write{2521,2521}
temp	int	$tmp1444	%read{2523,2527} %write{2522,2526}
temp	int	$tmp1445	%read{2525,2525} %write{2524,2524}
temp	int	$tmp1446	%read{2526,2526} %write{2525,2525}
temp	int	$tmp1447	%read{2530,2530} %write{2529,2529}
temp	int	$tmp1448	%read{2531,2535} %write{2530,2534}
temp	int	$tmp1449	%read{2533,2533} %write{2532,2532}
temp	int	$tmp1450	%read{2534,2534} %write{2533,2533}
temp	int	$tmp1451	%read{2539,2539} %write{2538,2538}
temp	float	$tmp1452	%read{2577,2577} %write{2552,2552}
temp	float	$tmp1453	%read{2543,2550} %write{2541,2541}
temp	int	$tmp1454	%read{2544,2544} %write{2543,2543}
temp	float	$tmp1455	%read{2546,2546} %write{2545,2545}
temp	float	$tmp1456	%read{2547,2547} %write{2546,2546}
temp	int	$tmp1457	%read{2549,2549} %write{2548,2548}
temp	float	$tmp1458	%read{2577,2577} %write{2564,2564}
temp	float	$tmp1459	%read{2555,2562} %write{2553,2553}
temp	int	$tmp1460	%read{2556,2556} %write{2555,2555}
temp	float	$tmp1461	%read{2558,2558} %write{2557,2557}
temp	float	$tmp1462	%read{2559,2559} %write{2558,2558}
temp	int	$tmp1463	%read{2561,2561} %write{2560,2560}
temp	float	$tmp1464	%read{2577,2577} %write{2576,2576}
temp	float	$tmp1465	%read{2567,2574} %write{2565,2565}
temp	int	$tmp1466	%read{2568,2568} %write{2567,2567}
temp	float	$tmp1467	%read{2570,2570} %write{2569,2569}
temp	float	$tmp1468	%read{2571,2571} %write{2570,2570}
temp	int	$tmp1469	%read{2573,2573} %write{2572,2572}
temp	int	$tmp1470	%read{2579,2579} %write{2578,2578}
temp	int	$tmp1471	%read{2580,2584} %write{2579,2583}
temp	int	$tmp1472	%read{2582,2582} %write{2581,2581}
temp	int	$tmp1473	%read{2583,2583} %write{2582,2582}
temp	int	$tmp1474	%read{2587,2587} %write{2586,2586}
temp	int	$tmp1475	%read{2588,2592} %write{2587,2591}
temp	int	$tmp1476	%read{2590,2590} %write{2589,2589}
temp	int	$tmp1477	%read{2591,2591} %write{2590,2590}
temp	float	$tmp1478	%read{2596,2596} %write{2593,2593}
temp	float	$tmp1480	%read{2596,2596} %write{2594,2594}
temp	float	$tmp1482	%read{2596,2596} %write{2595,2595}
temp	int	$tmp1484	%read{2598,2598} %write{2597,2597}
temp	int	$tmp1485	%read{2599,2603} %write{2598,2602}
temp	int	$tmp1486	%read{2601,2601} %write{2600,2600}
temp	int	$tmp1487	%read{2602,2602} %write{2601,2601}
temp	float	$tmp1488	%read{2607,2607} %write{2604,2604}
temp	float	$tmp1490	%read{2607,2607} %write{2605,2605}
temp	float	$tmp1492	%read{2607,2607} %write{2606,2606}
temp	int	$tmp1494	%read{2609,2609} %write{2608,2608}
temp	float	$tmp1495	%read{2632,2632} %write{2615,2616}
temp	float	$tmp1496	%read{2613,2615} %write{2611,2611}
temp	int	$tmp1497	%read{2614,2614} %write{2613,2613}
temp	float	$tmp1498	%read{2632,2632} %write{2622,2623}
temp	float	$tmp1499	%read{2620,2622} %write{2618,2618}
temp	int	$tmp1500	%read{2621,2621} %write{2620,2620}
temp	float	$tmp1501	%read{2632,2632} %write{2629,2630}
temp	float	$tmp1502	%read{2627,2629} %write{2625,2625}
temp	int	$tmp1503	%read{2628,2628} %write{2627,2627}
temp	int	$tmp1504	%read{2634,2634} %write{2633,2633}
temp	float	$tmp1505	%read{2660,2660} %write{2640,2642}
temp	float	$tmp1506	%read{2638,2642} %write{2636,2636}
temp	int	$tmp1507	%read{2639,2639} %write{2638,2638}
temp	float	$tmp1508	%read{2660,2660} %write{2648,2650}
temp	float	$tmp1509	%read{2646,2650} %write{2644,2644}
temp	int	$tmp1510	%read{2647,2647} %write{2646,2646}
temp	float	$tmp1511	%read{2660,2660} %write{2656,2658}
temp	float	$tmp1512	%read{2654,2658} %write{2652,2652}
temp	int	$tmp1513	%read{2655,2655} %write{2654,2654}
temp	int	$tmp1514	%read{2662,2662} %write{2661,2661}
temp	float	$tmp1515	%read{2688,2688} %write{2668,2670}
temp	float	$tmp1516	%read{2666,2670} %write{2664,2664}
temp	int	$tmp1517	%read{2667,2667} %write{2666,2666}
temp	float	$tmp1518	%read{2688,2688} %write{2676,2678}
temp	float	$tmp1519	%read{2674,2678} %write{2672,2672}
temp	int	$tmp1520	%read{2675,2675} %write{2674,2674}
temp	float	$tmp1521	%read{2688,2688} %write{2684,2686}
temp	float	$tmp1522	%read{2682,2686} %write{2680,2680}
temp	int	$tmp1523	%read{2683,2683} %write{2682,2682}
temp	int	$tmp1524	%read{2690,2690} %write{2689,2689}
temp	float	$tmp1525	%read{2716,2716} %write{2696,2698}
temp	float	$tmp1526	%read{2694,2698} %write{2692,2692}
temp	int	$tmp1527	%read{2695,2695} %write{2694,2694}
temp	float	$tmp1528	%read{2716,2716} %write{2704,2706}
temp	float	$tmp1529	%read{2702,2706} %write{2700,2700}
temp	int	$tmp1530	%read{2703,2703} %write{2702,2702}
temp	float	$tmp1531	%read{2716,2716} %write{2712,2714}
temp	float	$tmp1532	%read{2710,2714} %write{2708,2708}
temp	int	$tmp1533	%read{2711,2711} %write{2710,2710}
temp	int	$tmp1534	%read{2718,2718} %write{2717,2717}
temp	int	$tmp1535	%read{2719,2723} %write{2718,2722}
temp	int	$tmp1536	%read{2721,2721} %write{2720,2720}
temp	int	$tmp1537	%read{2722,2722} %write{2721,2721}
temp	float	$tmp1538	%read{2727,2727} %write{2724,2724}
temp	float	$tmp1540	%read{2727,2727} %write{2725,2725}
temp	float	$tmp1542	%read{2727,2727} %write{2726,2726}
temp	int	$tmp1544	%read{2729,2729} %write{2728,2728}
temp	float	$tmp1545	%read{2733,2733} %write{2730,2730}
temp	float	$tmp1547	%read{2733,2733} %write{2731,2731}
temp	float	$tmp1549	%read{2733,2733} %write{2732,2732}
temp	int	$tmp1551	%read{2737,2737} %write{2736,2736}
temp	int	$tmp1552	%read{2738,2742} %write{2737,2741}
temp	int	$tmp1553	%read{2740,2740} %write{2739,2739}
temp	int	$tmp1554	%read{2741,2741} %write{2740,2740}
temp	int	$tmp1555	%read{2746,2746} %write{2745,2745}
temp	float	$tmp1556	%read{2784,2784} %write{2759,2759}
temp	float	$tmp1557	%read{2750,2757} %write{2748,2748}
temp	int	$tmp1558	%read{2751,2751} %write{2750,2750}
temp	float	$tmp1559	%read{2753,2753} %write{2752,2752}
temp	float	$tmp1560	%read{2754,2754} %write{2753,2753}
temp	int	$tmp1561	%read{2756,2756} %write{2755,2755}
temp	float	$tmp1562	%read{2784,2784} %write{2771,2771}
temp	float	$tmp1563	%read{2762,2769} %write{2760,2760}
temp	int	$tmp1564	%read{2763,2763} %write{2762,2762}
temp	float	$tmp1565	%read{2765,2765} %write{2764,2764}
temp	float	$tmp1566	%read{2766,2766} %write{2765,2765}
temp	int	$tmp1567	%read{2768,2768} %write{2767,2767}
temp	float	$tmp1568	%read{2784,2784} %write{2783,2783}
temp	float	$tmp1569	%read{2774,2781} %write{2772,2772}
temp	int	$tmp1570	%read{2775,2775} %write{2774,2774}
temp	float	$tmp1571	%read{2777,2777} %write{2776,2776}
temp	float	$tmp1572	%read{2778,2778} %write{2777,2777}
temp	int	$tmp1573	%read{2780,2780} %write{2779,2779}
temp	float	$tmp1574	%read{2788,2788} %write{2785,2785}
temp	float	$tmp1576	%read{2788,2788} %write{2786,2786}
temp	float	$tmp1578	%read{2788,2788} %write{2787,2787}
temp	int	$tmp1580	%read{2790,2790} %write{2789,2789}
temp	int	$tmp1581	%read{2791,2795} %write{2790,2794}
temp	int	$tmp1582	%read{2793,2793} %write{2792,2792}
temp	int	$tmp1583	%read{2794,2794} %write{2793,2793}
temp	float	$tmp1584	%read{2799,2799} %write{2796,2796}
temp	float	$tmp1586	%read{2799,2799} %write{2797,2797}
temp	float	$tmp1588	%read{2799,2799} %write{2798,2798}
temp	int	$tmp1590	%read{2801,2801} %write{2800,2800}
temp	int	$tmp1591	%read{2802,2806} %write{2801,2805}
temp	int	$tmp1592	%read{2804,2804} %write{2803,2803}
temp	int	$tmp1593	%read{2805,2805} %write{2804,2804}
temp	int	$tmp1594	%read{2809,2809} %write{2808,2808}
temp	int	$tmp1595	%read{2810,2814} %write{2809,2813}
temp	int	$tmp1596	%read{2812,2812} %write{2811,2811}
temp	int	$tmp1597	%read{2813,2813} %write{2812,2812}
temp	float	$tmp1598	%read{2818,2818} %write{2815,2815}
temp	float	$tmp1600	%read{2818,2818} %write{2816,2816}
temp	float	$tmp1602	%read{2818,2818} %write{2817,2817}
temp	int	$tmp1604	%read{2820,2820} %write{2819,2819}
temp	float	$tmp1605	%read{2843,2843} %write{2826,2827}
temp	float	$tmp1606	%read{2824,2826} %write{2822,2822}
temp	int	$tmp1607	%read{2825,2825} %write{2824,2824}
temp	float	$tmp1608	%read{2843,2843} %write{2833,2834}
temp	float	$tmp1609	%read{2831,2833} %write{2829,2829}
temp	int	$tmp1610	%read{2832,2832} %write{2831,2831}
temp	float	$tmp1611	%read{2843,2843} %write{2840,2841}
temp	float	$tmp1612	%read{2838,2840} %write{2836,2836}
temp	int	$tmp1613	%read{2839,2839} %write{2838,2838}
temp	float	$tmp1614	%read{2847,2847} %write{2844,2844}
temp	float	$tmp1616	%read{2847,2847} %write{2845,2845}
temp	float	$tmp1618	%read{2847,2847} %write{2846,2846}
temp	int	$tmp1620	%read{2849,2849} %write{2848,2848}
temp	float	$tmp1621	%read{2875,2875} %write{2855,2857}
temp	float	$tmp1622	%read{2853,2857} %write{2851,2851}
temp	int	$tmp1623	%read{2854,2854} %write{2853,2853}
temp	float	$tmp1624	%read{2875,2875} %write{2863,2865}
temp	float	$tmp1625	%read{2861,2865} %write{2859,2859}
temp	int	$tmp1626	%read{2862,2862} %write{2861,2861}
temp	float	$tmp1627	%read{2875,2875} %write{2871,2873}
temp	float	$tmp1628	%read{2869,2873} %write{2867,2867}
temp	int	$tmp1629	%read{2870,2870} %write{2869,2869}
temp	float	$tmp1630	%read{2879,2879} %write{2876,2876}
temp	float	$tmp1632	%read{2879,2879} %write{2877,2877}
temp	float	$tmp1634	%read{2879,2879} %write{2878,2878}
temp	int	$tmp1636	%read{2881,2881} %write{2880,2880}
temp	float	$tmp1637	%read{2907,2907} %write{2887,2889}
temp	float	$tmp1638	%read{2885,2889} %write{2883,2883}
temp	int	$tmp1639	%read{2886,2886} %write{2885,2885}
temp	float	$tmp1640	%read{2907,2907} %write{2895,2897}
temp	float	$tmp1641	%read{2893,2897} %write{2891,2891}
temp	int	$tmp1642	%read{2894,2894} %write{2893,2893}
temp	float	$tmp1643	%read{2907,2907} %write{2903,2905}
temp	float	$tmp1644	%read{2901,2905} %write{2899,2899}
temp	int	$tmp1645	%read{2902,2902} %write{2901,2901}
temp	float	$tmp1646	%read{2911,2911} %write{2908,2908}
temp	float	$tmp1648	%read{2911,2911} %write{2909,2909}
temp	float	$tmp1650	%read{2911,2911} %write{2910,2910}
temp	int	$tmp1652	%read{2913,2913} %write{2912,2912}
temp	float	$tmp1653	%read{2939,2939} %write{2919,2921}
temp	float	$tmp1654	%read{2917,2921} %write{2915,2915}
temp	int	$tmp1655	%read{2918,2918} %write{2917,2917}
temp	float	$tmp1656	%read{2939,2939} %write{2927,2929}
temp	float	$tmp1657	%read{2925,2929} %write{2923,2923}
temp	int	$tmp1658	%read{2926,2926} %write{2925,2925}
temp	float	$tmp1659	%read{2939,2939} %write{2935,2937}
temp	float	$tmp1660	%read{2933,2937} %write{2931,2931}
temp	int	$tmp1661	%read{2934,2934} %write{2933,2933}
temp	float	$tmp1662	%read{2943,2943} %write{2940,2940}
temp	float	$tmp1664	%read{2943,2943} %write{2941,2941}
temp	float	$tmp1666	%read{2943,2943} %write{2942,2942}
temp	int	$tmp1668	%read{2945,2945} %write{2944,2944}
temp	int	$tmp1669	%read{2946,2950} %write{2945,2949}
temp	int	$tmp1670	%read{2948,2948} %write{2947,2947}
temp	int	$tmp1671	%read{2949,2949} %write{2948,2948}
temp	float	$tmp1672	%read{2954,2954} %write{2951,2951}
temp	float	$tmp1674	%read{2954,2954} %write{2952,2952}
temp	float	$tmp1676	%read{2954,2954} %write{2953,2953}
temp	int	$tmp1678	%read{2956,2956} %write{2955,2955}
temp	float	$tmp1679	%read{2960,2960} %write{2957,2957}
temp	float	$tmp1681	%read{2960,2960} %write{2958,2958}
temp	float	$tmp1683	%read{2960,2960} %write{2959,2959}
temp	int	$tmp1685	%read{2964,2964} %write{2963,2963}
temp	int	$tmp1686	%read{2965,2969} %write{2964,2968}
temp	int	$tmp1687	%read{2967,2967} %write{2966,2966}
temp	int	$tmp1688	%read{2968,2968} %write{2967,2967}
temp	int	$tmp1689	%read{2973,2973} %write{2972,2972}
temp	float	$tmp1690	%read{3011,3011} %write{2986,2986}
temp	float	$tmp1691	%read{2977,2984} %write{2975,2975}
temp	int	$tmp1692	%read{2978,2978} %write{2977,2977}
temp	float	$tmp1693	%read{2980,2980} %write{2979,2979}
temp	float	$tmp1694	%read{2981,2981} %write{2980,2980}
temp	int	$tmp1695	%read{2983,2983} %write{2982,2982}
temp	float	$tmp1696	%read{3011,3011} %write{2998,2998}
temp	float	$tmp1697	%read{2989,2996} %write{2987,2987}
temp	int	$tmp1698	%read{2990,2990} %write{2989,2989}
temp	float	$tmp1699	%read{2992,2992} %write{2991,2991}
temp	float	$tmp1700	%read{2993,2993} %write{2992,2992}
temp	int	$tmp1701	%read{2995,2995} %write{2994,2994}
temp	float	$tmp1702	%read{3011,3011} %write{3010,3010}
temp	float	$tmp1703	%read{3001,3008} %write{2999,2999}
temp	int	$tmp1704	%read{3002,3002} %write{3001,3001}
temp	float	$tmp1705	%read{3004,3004} %write{3003,3003}
temp	float	$tmp1706	%read{3005,3005} %write{3004,3004}
temp	int	$tmp1707	%read{3007,3007} %write{3006,3006}
temp	float	$tmp1708	%read{3015,3015} %write{3012,3012}
temp	float	$tmp1710	%read{3015,3015} %write{3013,3013}
temp	float	$tmp1712	%read{3015,3015} %write{3014,3014}
temp	int	$tmp1714	%read{3017,3017} %write{3016,3016}
temp	int	$tmp1715	%read{3018,3022} %write{3017,3021}
temp	int	$tmp1716	%read{3020,3020} %write{3019,3019}
temp	int	$tmp1717	%read{3021,3021} %write{3020,3020}
temp	float	$tmp1718	%read{3026,3026} %write{3023,3023}
temp	float	$tmp1720	%read{3026,3026} %write{3024,3024}
temp	float	$tmp1722	%read{3026,3026} %write{3025,3025}
temp	int	$tmp1724	%read{3028,3028} %write{3027,3027}
temp	int	$tmp1725	%read{3029,3033} %write{3028,3032}
temp	int	$tmp1726	%read{3031,3031} %write{3030,3030}
temp	int	$tmp1727	%read{3032,3032} %write{3031,3031}
temp	float	$tmp1728	%read{3037,3037} %write{3034,3034}
temp	float	$tmp1730	%read{3037,3037} %write{3035,3035}
temp	float	$tmp1732	%read{3037,3037} %write{3036,3036}
temp	int	$tmp1734	%read{3039,3039} %write{3038,3038}
temp	int	$tmp1735	%read{3040,3044} %write{3039,3043}
temp	int	$tmp1736	%read{3042,3042} %write{3041,3041}
temp	int	$tmp1737	%read{3043,3043} %write{3042,3042}
temp	int	$tmp1738	%read{3047,3047} %write{3046,3046}
temp	float	$tmp1739	%read{3070,3070} %write{3053,3054}
temp	float	$tmp1740	%read{3051,3053} %write{3049,3049}
temp	int	$tmp1741	%read{3052,3052} %write{3051,3051}
temp	float	$tmp1742	%read{3070,3070} %write{3060,3061}
temp	float	$tmp1743	%read{3058,3060} %write{3056,3056}
temp	int	$tmp1744	%read{3059,3059} %write{3058,3058}
temp	float	$tmp1745	%read{3070,3070} %write{3067,3068}
temp	float	$tmp1746	%read{3065,3067} %write{3063,3063}
temp	int	$tmp1747	%read{3066,3066} %write{3065,3065}
temp	float	$tmp1748	%read{3074,3074} %write{3071,3071}
temp	float	$tmp1750	%read{3074,3074} %write{3072,3072}
temp	float	$tmp1752	%read{3074,3074} %write{3073,3073}
temp	int	$tmp1754	%read{3076,3076} %write{3075,3075}
temp	float	$tmp1755	%read{3102,3102} %write{3082,3084}
temp	float	$tmp1756	%read{3080,3084} %write{3078,3078}
temp	int	$tmp1757	%read{3081,3081} %write{3080,3080}
temp	float	$tmp1758	%read{3102,3102} %write{3090,3092}
temp	float	$tmp1759	%read{3088,3092} %write{3086,3086}
temp	int	$tmp1760	%read{3089,3089} %write{3088,3088}
temp	float	$tmp1761	%read{3102,3102} %write{3098,3100}
temp	float	$tmp1762	%read{3096,3100} %write{3094,3094}
temp	int	$tmp1763	%read{3097,3097} %write{3096,3096}
temp	float	$tmp1764	%read{3106,3106} %write{3103,3103}
temp	float	$tmp1766	%read{3106,3106} %write{3104,3104}
temp	float	$tmp1768	%read{3106,3106} %write{3105,3105}
temp	int	$tmp1770	%read{3108,3108} %write{3107,3107}
temp	float	$tmp1771	%read{3134,3134} %write{3114,3116}
temp	float	$tmp1772	%read{3112,3116} %write{3110,3110}
temp	int	$tmp1773	%read{3113,3113} %write{3112,3112}
temp	float	$tmp1774	%read{3134,3134} %write{3122,3124}
temp	float	$tmp1775	%read{3120,3124} %write{3118,3118}
temp	int	$tmp1776	%read{3121,3121} %write{3120,3120}
temp	float	$tmp1777	%read{3134,3134} %write{3130,3132}
temp	float	$tmp1778	%read{3128,3132} %write{3126,3126}
temp	int	$tmp1779	%read{3129,3129} %write{3128,3128}
temp	float	$tmp1780	%read{3138,3138} %write{3135,3135}
temp	float	$tmp1782	%read{3138,3138} %write{3136,3136}
temp	float	$tmp1784	%read{3138,3138} %write{3137,3137}
temp	int	$tmp1786	%read{3140,3140} %write{3139,3139}
temp	float	$tmp1787	%read{3166,3166} %write{3146,3148}
temp	float	$tmp1788	%read{3144,3148} %write{3142,3142}
temp	int	$tmp1789	%read{3145,3145} %write{3144,3144}
temp	float	$tmp1790	%read{3166,3166} %write{3154,3156}
temp	float	$tmp1791	%read{3152,3156} %write{3150,3150}
temp	int	$tmp1792	%read{3153,3153} %write{3152,3152}
temp	float	$tmp1793	%read{3166,3166} %write{3162,3164}
temp	float	$tmp1794	%read{3160,3164} %write{3158,3158}
temp	int	$tmp1795	%read{3161,3161} %write{3160,3160}
temp	float	$tmp1796	%read{3170,3170} %write{3167,3167}
temp	float	$tmp1798	%read{3170,3170} %write{3168,3168}
temp	float	$tmp1800	%read{3170,3170} %write{3169,3169}
temp	int	$tmp1802	%read{3172,3172} %write{3171,3171}
temp	int	$tmp1803	%read{3173,3177} %write{3172,3176}
temp	int	$tmp1804	%read{3175,3175} %write{3174,3174}
temp	int	$tmp1805	%read{3176,3176} %write{3175,3175}
temp	float	$tmp1806	%read{3181,3181} %write{3178,3178}
temp	float	$tmp1808	%read{3181,3181} %write{3179,3179}
temp	float	$tmp1810	%read{3181,3181} %write{3180,3180}
temp	int	$tmp1812	%read{3183,3183} %write{3182,3182}
temp	float	$tmp1813	%read{3187,3187} %write{3184,3184}
temp	float	$tmp1815	%read{3187,3187} %write{3185,3185}
temp	float	$tmp1817	%read{3187,3187} %write{3186,3186}
temp	int	$tmp1819	%read{3191,3191} %write{3190,3190}
temp	int	$tmp1820	%read{3192,3196} %write{3191,3195}
temp	int	$tmp1821	%read{3194,3194} %write{3193,3193}
temp	int	$tmp1822	%read{3195,3195} %write{3194,3194}
temp	int	$tmp1823	%read{3200,3200} %write{3199,3199}
temp	float	$tmp1824	%read{3238,3238} %write{3213,3213}
temp	float	$tmp1825	%read{3204,3211} %write{3202,3202}
temp	int	$tmp1826	%read{3205,3205} %write{3204,3204}
temp	float	$tmp1827	%read{3207,3207} %write{3206,3206}
temp	float	$tmp1828	%read{3208,3208} %write{3207,3207}
temp	int	$tmp1829	%read{3210,3210} %write{3209,3209}
temp	float	$tmp1830	%read{3238,3238} %write{3225,3225}
temp	float	$tmp1831	%read{3216,3223} %write{3214,3214}
temp	int	$tmp1832	%read{3217,3217} %write{3216,3216}
temp	float	$tmp1833	%read{3219,3219} %write{3218,3218}
temp	float	$tmp1834	%read{3220,3220} %write{3219,3219}
temp	int	$tmp1835	%read{3222,3222} %write{3221,3221}
temp	float	$tmp1836	%read{3238,3238} %write{3237,3237}
temp	float	$tmp1837	%read{3228,3235} %write{3226,3226}
temp	int	$tmp1838	%read{3229,3229} %write{3228,3228}
temp	float	$tmp1839	%read{3231,3231} %write{3230,3230}
temp	float	$tmp1840	%read{3232,3232} %write{3231,3231}
temp	int	$tmp1841	%read{3234,3234} %write{3233,3233}
temp	float	$tmp1842	%read{3242,3242} %write{3239,3239}
temp	float	$tmp1844	%read{3242,3242} %write{3240,3240}
temp	float	$tmp1846	%read{3242,3242} %write{3241,3241}
temp	int	$tmp1848	%read{3244,3244} %write{3243,3243}
temp	int	$tmp1849	%read{3245,3249} %write{3244,3248}
temp	int	$tmp1850	%read{3247,3247} %write{3246,3246}
temp	int	$tmp1851	%read{3248,3248} %write{3247,3247}
temp	float	$tmp1852	%read{3253,3253} %write{3250,3250}
temp	float	$tmp1854	%read{3253,3253} %write{3251,3251}
temp	float	$tmp1856	%read{3253,3253} %write{3252,3252}
temp	int	$tmp1858	%read{3255,3255} %write{3254,3254}
temp	int	$tmp1859	%read{3256,3260} %write{3255,3259}
temp	int	$tmp1860	%read{3258,3258} %write{3257,3257}
temp	int	$tmp1861	%read{3259,3259} %write{3258,3258}
temp	float	$tmp1862	%read{3264,3264} %write{3261,3261}
temp	float	$tmp1864	%read{3264,3264} %write{3262,3262}
temp	float	$tmp1866	%read{3264,3264} %write{3263,3263}
temp	int	$tmp1868	%read{3266,3266} %write{3265,3265}
temp	int	$tmp1869	%read{3267,3271} %write{3266,3270}
temp	int	$tmp1870	%read{3269,3269} %write{3268,3268}
temp	int	$tmp1871	%read{3270,3270} %write{3269,3269}
temp	float	$tmp1872	%read{3275,3275} %write{3272,3272}
temp	float	$tmp1874	%read{3275,3275} %write{3273,3273}
temp	float	$tmp1876	%read{3275,3275} %write{3274,3274}
temp	int	$tmp1878	%read{3277,3277} %write{3276,3276}
temp	float	$tmp1879	%read{3300,3300} %write{3283,3284}
temp	float	$tmp1880	%read{3281,3283} %write{3279,3279}
temp	int	$tmp1881	%read{3282,3282} %write{3281,3281}
temp	float	$tmp1882	%read{3300,3300} %write{3290,3291}
temp	float	$tmp1883	%read{3288,3290} %write{3286,3286}
temp	int	$tmp1884	%read{3289,3289} %write{3288,3288}
temp	float	$tmp1885	%read{3300,3300} %write{3297,3298}
temp	float	$tmp1886	%read{3295,3297} %write{3293,3293}
temp	int	$tmp1887	%read{3296,3296} %write{3295,3295}
temp	float	$tmp1888	%read{3304,3304} %write{3301,3301}
temp	float	$tmp1890	%read{3304,3304} %write{3302,3302}
temp	float	$tmp1892	%read{3304,3304} %write{3303,3303}
temp	int	$tmp1894	%read{3306,3306} %write{3305,3305}
temp	float	$tmp1895	%read{3332,3332} %write{3312,3314}
temp	float	$tmp1896	%read{3310,3314} %write{3308,3308}
temp	int	$tmp1897	%read{3311,3311} %write{3310,3310}
temp	float	$tmp1898	%read{3332,3332} %write{3320,3322}
temp	float	$tmp1899	%read{3318,3322} %write{3316,3316}
temp	int	$tmp1900	%read{3319,3319} %write{3318,3318}
temp	float	$tmp1901	%read{3332,3332} %write{3328,3330}
temp	float	$tmp1902	%read{3326,3330} %write{3324,3324}
temp	int	$tmp1903	%read{3327,3327} %write{3326,3326}
temp	float	$tmp1904	%read{3336,3336} %write{3333,3333}
temp	float	$tmp1906	%read{3336,3336} %write{3334,3334}
temp	float	$tmp1908	%read{3336,3336} %write{3335,3335}
temp	int	$tmp1910	%read{3338,3338} %write{3337,3337}
temp	float	$tmp1911	%read{3364,3364} %write{3344,3346}
temp	float	$tmp1912	%read{3342,3346} %write{3340,3340}
temp	int	$tmp1913	%read{3343,3343} %write{3342,3342}
temp	float	$tmp1914	%read{3364,3364} %write{3352,3354}
temp	float	$tmp1915	%read{3350,3354} %write{3348,3348}
temp	int	$tmp1916	%read{3351,3351} %write{3350,3350}
temp	float	$tmp1917	%read{3364,3364} %write{3360,3362}
temp	float	$tmp1918	%read{3358,3362} %write{3356,3356}
temp	int	$tmp1919	%read{3359,3359} %write{3358,3358}
temp	float	$tmp1920	%read{3368,3368} %write{3365,3365}
temp	float	$tmp1922	%read{3368,3368} %write{3366,3366}
temp	float	$tmp1924	%read{3368,3368} %write{3367,3367}
temp	int	$tmp1926	%read{3370,3370} %write{3369,3369}
temp	float	$tmp1927	%read{3396,3396} %write{3376,3378}
temp	float	$tmp1928	%read{3374,3378} %write{3372,3372}
temp	int	$tmp1929	%read{3375,3375} %write{3374,3374}
temp	float	$tmp1930	%read{3396,3396} %write{3384,3386}
temp	float	$tmp1931	%read{3382,3386} %write{3380,3380}
temp	int	$tmp1932	%read{3383,3383} %write{3382,3382}
temp	float	$tmp1933	%read{3396,3396} %write{3392,3394}
temp	float	$tmp1934	%read{3390,3394} %write{3388,3388}
temp	int	$tmp1935	%read{3391,3391} %write{3390,3390}
temp	float	$tmp1936	%read{3400,3400} %write{3397,3397}
temp	float	$tmp1938	%read{3400,3400} %write{3398,3398}
temp	float	$tmp1940	%read{3400,3400} %write{3399,3399}
temp	int	$tmp1942	%read{3402,3402} %write{3401,3401}
temp	int	$tmp1943	%read{3403,3407} %write{3402,3406}
temp	int	$tmp1944	%read{3405,3405} %write{3404,3404}
temp	int	$tmp1945	%read{3406,3406} %write{3405,3405}
temp	int	$tmp1946	%read{3410,3410} %write{3409,3409}
temp	float	$tmp1947	%read{3414,3414} %write{3411,3411}
temp	float	$tmp1949	%read{3414,3414} %write{3412,3412}
temp	float	$tmp1951	%read{3414,3414} %write{3413,3413}
temp	int	$tmp1953	%read{3418,3418} %write{3417,3417}
temp	int	$tmp1954	%read{3422,3422} %write{3421,3421}
temp	float	$tmp1955	%read{3460,3460} %write{3435,3435}
temp	float	$tmp1956	%read{3426,3433} %write{3424,3424}
temp	int	$tmp1957	%read{3427,3427} %write{3426,3426}
temp	float	$tmp1958	%read{3429,3429} %write{3428,3428}
temp	float	$tmp1959	%read{3430,3430} %write{3429,3429}
temp	int	$tmp1960	%read{3432,3432} %write{3431,3431}
temp	float	$tmp1961	%read{3460,3460} %write{3447,3447}
temp	float	$tmp1962	%read{3438,3445} %write{3436,3436}
temp	int	$tmp1963	%read{3439,3439} %write{3438,3438}
temp	float	$tmp1964	%read{3441,3441} %write{3440,3440}
temp	float	$tmp1965	%read{3442,3442} %write{3441,3441}
temp	int	$tmp1966	%read{3444,3444} %write{3443,3443}
temp	float	$tmp1967	%read{3460,3460} %write{3459,3459}
temp	float	$tmp1968	%read{3450,3457} %write{3448,3448}
temp	int	$tmp1969	%read{3451,3451} %write{3450,3450}
temp	float	$tmp1970	%read{3453,3453} %write{3452,3452}
temp	float	$tmp1971	%read{3454,3454} %write{3453,3453}
temp	int	$tmp1972	%read{3456,3456} %write{3455,3455}
temp	float	$tmp1973	%read{3464,3464} %write{3461,3461}
temp	float	$tmp1975	%read{3464,3464} %write{3462,3462}
temp	float	$tmp1977	%read{3464,3464} %write{3463,3463}
temp	int	$tmp1979	%read{3466,3466} %write{3465,3465}
temp	int	$tmp1980	%read{3467,3471} %write{3466,3470}
temp	int	$tmp1981	%read{3469,3469} %write{3468,3468}
temp	int	$tmp1982	%read{3470,3470} %write{3469,3469}
temp	float	$tmp1983	%read{3475,3475} %write{3472,3472}
temp	float	$tmp1985	%read{3475,3475} %write{3473,3473}
temp	float	$tmp1987	%read{3475,3475} %write{3474,3474}
temp	int	$tmp1989	%read{3477,3477} %write{3476,3476}
temp	int	$tmp1990	%read{3478,3482} %write{3477,3481}
temp	int	$tmp1991	%read{3480,3480} %write{3479,3479}
temp	int	$tmp1992	%read{3481,3481} %write{3480,3480}
temp	float	$tmp1993	%read{3486,3486} %write{3483,3483}
temp	float	$tmp1995	%read{3486,3486} %write{3484,3484}
temp	float	$tmp1997	%read{3486,3486} %write{3485,3485}
temp	int	$tmp1999	%read{3488,3488} %write{3487,3487}
temp	int	$tmp2000	%read{3489,3493} %write{3488,3492}
temp	int	$tmp2001	%read{3491,3491} %write{3490,3490}
temp	int	$tmp2002	%read{3492,3492} %write{3491,3491}
temp	float	$tmp2003	%read{3497,3497} %write{3494,3494}
temp	float	$tmp2005	%read{3497,3497} %write{3495,3495}
temp	float	$tmp2007	%read{3497,3497} %write{3496,3496}
temp	int	$tmp2009	%read{3499,3499} %write{3498,3498}
temp	float	$tmp2010	%read{3522,3522} %write{3505,3506}
temp	float	$tmp2011	%read{3503,3505} %write{3501,3501}
temp	int	$tmp2012	%read{3504,3504} %write{3503,3503}
temp	float	$tmp2013	%read{3522,3522} %write{3512,3513}
temp	float	$tmp2014	%read{3510,3512} %write{3508,3508}
temp	int	$tmp2015	%read{3511,3511} %write{3510,3510}
temp	float	$tmp2016	%read{3522,3522} %write{3519,3520}
temp	float	$tmp2017	%read{3517,3519} %write{3515,3515}
temp	int	$tmp2018	%read{3518,3518} %write{3517,3517}
temp	float	$tmp2019	%read{3526,3526} %write{3523,3523}
temp	float	$tmp2021	%read{3526,3526} %write{3524,3524}
temp	float	$tmp2023	%read{3526,3526} %write{3525,3525}
temp	int	$tmp2025	%read{3528,3528} %write{3527,3527}
temp	float	$tmp2026	%read{3554,3554} %write{3534,3536}
temp	float	$tmp2027	%read{3532,3536} %write{3530,3530}
temp	int	$tmp2028	%read{3533,3533} %write{3532,3532}
temp	float	$tmp2029	%read{3554,3554} %write{3542,3544}
temp	float	$tmp2030	%read{3540,3544} %write{3538,3538}
temp	int	$tmp2031	%read{3541,3541} %write{3540,3540}
temp	float	$tmp2032	%read{3554,3554} %write{3550,3552}
temp	float	$tmp2033	%read{3548,3552} %write{3546,3546}
temp	int	$tmp2034	%read{3549,3549} %write{3548,3548}
temp	float	$tmp2035	%read{3558,3558} %write{3555,3555}
temp	float	$tmp2037	%read{3558,3558} %write{3556,3556}
temp	float	$tmp2039	%read{3558,3558} %write{3557,3557}
temp	int	$tmp2041	%read{3560,3560} %write{3559,3559}
temp	float	$tmp2042	%read{3586,3586} %write{3566,3568}
temp	float	$tmp2043	%read{3564,3568} %write{3562,3562}
temp	int	$tmp2044	%read{3565,3565} %write{3564,3564}
temp	float	$tmp2045	%read{3586,3586} %write{3574,3576}
temp	float	$tmp2046	%read{3572,3576} %write{3570,3570}
temp	int	$tmp2047	%read{3573,3573} %write{3572,3572}
temp	float	$tmp2048	%read{3586,3586} %write{3582,3584}
temp	float	$tmp2049	%read{3580,3584} %write{3578,3578}
temp	int	$tmp2050	%read{3581,3581} %write{3580,3580}
temp	float	$tmp2051	%read{3590,3590} %write{3587,3587}
temp	float	$tmp2053	%read{3590,3590} %write{3588,3588}
temp	float	$tmp2055	%read{3590,3590} %write{3589,3589}
temp	int	$tmp2057	%read{3592,3592} %write{3591,3591}
temp	float	$tmp2058	%read{3618,3618} %write{3598,3600}
temp	float	$tmp2059	%read{3596,3600} %write{3594,3594}
temp	int	$tmp2060	%read{3597,3597} %write{3596,3596}
temp	float	$tmp2061	%read{3618,3618} %write{3606,3608}
temp	float	$tmp2062	%read{3604,3608} %write{3602,3602}
temp	int	$tmp2063	%read{3605,3605} %write{3604,3604}
temp	float	$tmp2064	%read{3618,3618} %write{3614,3616}
temp	float	$tmp2065	%read{3612,3616} %write{3610,3610}
temp	int	$tmp2066	%read{3613,3613} %write{3612,3612}
temp	float	$tmp2067	%read{3622,3622} %write{3619,3619}
temp	float	$tmp2069	%read{3622,3622} %write{3620,3620}
temp	float	$tmp2071	%read{3622,3622} %write{3621,3621}
temp	int	$tmp2073	%read{3624,3624} %write{3623,3623}
temp	int	$tmp2074	%read{3625,3629} %write{3624,3628}
temp	int	$tmp2075	%read{3627,3627} %write{3626,3626}
temp	int	$tmp2076	%read{3628,3628} %write{3627,3627}
temp	float	$tmp2077	%read{3633,3633} %write{3630,3630}
temp	float	$tmp2079	%read{3633,3633} %write{3631,3631}
temp	float	$tmp2081	%read{3633,3633} %write{3632,3632}
temp	int	$tmp2083	%read{3635,3635} %write{3634,3634}
temp	float	$tmp2084	%read{3643,3643} %write{3642,3642}
temp	color	$tmp2085	%read{3644,3644} %write{3643,3643}
temp	color	$tmp2086	%read{3645,3645} %write{3644,3644}
temp	float	$tmp2087	%read{3647,3647} %write{3646,3646}
temp	float	$tmp2088	%read{3648,3648} %write{3647,3647}
temp	float	$tmp2089	%read{3650,3650} %write{3649,3649}
temp	color	$tmp2090	%read{3651,3651} %write{3650,3650}
temp	float	$tmp2091	%read{3653,3653} %write{3652,3652}
temp	int	$tmp2092	%read{3657,3657} %write{3656,3656}
temp	int	$tmp2093	%read{3658,3661} %write{3657,3660}
temp	int	$tmp2094	%read{3660,3660} %write{3659,3659}
temp	int	$tmp2095	%read{2147483647,-1} %write{3662,3662}
temp	float	$tmp2096	%read{3664,3664} %write{3663,3663}
temp	int	$tmp2097	%read{3665,3665} %write{3664,3664}
temp	int	$tmp2098	%read{3666,3681} %write{3665,3680}
temp	int	$tmp2099	%read{3668,3668} %write{3667,3667}
temp	int	$tmp2100	%read{3669,3679} %write{3668,3678}
temp	float	$tmp2101	%read{3676,3676} %write{3675,3675}
temp	float	$tmp2102	%read{3675,3675} %write{3671,3671}
temp	float	$tmp2103	%read{3675,3675} %write{3674,3674}
temp	float	$tmp2104	%read{3674,3674} %write{3672,3672}
temp	float	$tmp2105	%read{3674,3674} %write{3673,3673}
temp	int	$tmp2106	%read{3677,3677} %write{3676,3676}
temp	int	$tmp2107	%read{3678,3678} %write{3677,3677}
temp	int	$tmp2108	%read{3680,3680} %write{3679,3679}
temp	string	$tmp2109	%read{3702,3702} %write{3686,3700}
temp	int	$tmp2110	%read{3685,3685} %write{3684,3684}
temp	int	$tmp2111	%read{3689,3689} %write{3688,3688}
temp	int	$tmp2112	%read{3693,3693} %write{3692,3692}
temp	int	$tmp2113	%read{3697,3697} %write{3696,3696}
temp	string	$tmp2114	%read{3722,3722} %write{3706,3720}
temp	int	$tmp2115	%read{3705,3705} %write{3704,3704}
temp	int	$tmp2116	%read{3709,3709} %write{3708,3708}
temp	int	$tmp2117	%read{3713,3713} %write{3712,3712}
temp	int	$tmp2118	%read{3717,3717} %write{3716,3716}
temp	float	$tmp2119	%read{3731,3731} %write{3723,3723} %derivs
temp	float	$tmp2120	%read{3732,3732} %write{3724,3724} %derivs
temp	string	$tmp2121	%read{3800,3800} %write{3725,3725}
temp	string	$tmp2122	%read{3800,3800} %write{3726,3726}
temp	float	$tmp2123	%read{3728,3728} %write{3727,3727} %derivs
temp	float	$tmp2124	%read{3729,3729} %write{3728,3728} %derivs
temp	int	$tmp2125	%read{3795,3795} %write{3729,3729} %derivs
temp	int	$tmp2126	%read{3734,3734} %write{3733,3733}
temp	float	$tmp2127	%read{3744,3747} %write{3735,3735} %derivs
temp	float	$tmp2128	%read{3745,3748} %write{3736,3736} %derivs
temp	float	$tmp2129	%read{3750,3750} %write{3737,3746} %derivs
temp	float	$tmp2130	%read{3751,3751} %write{3738,3749} %derivs
temp	float	$tmp2131	%read{3742,3742} %write{3741,3741} %derivs
temp	float	$tmp2132	%read{3746,3746} %write{3744,3744} %derivs
temp	float	$tmp2133	%read{3746,3746} %write{3745,3745} %derivs
temp	float	$tmp2134	%read{3749,3749} %write{3747,3747} %derivs
temp	float	$tmp2135	%read{3749,3749} %write{3748,3748} %derivs
temp	float	$tmp2136	%read{3766,3766} %write{3759,3765} %derivs
temp	float	$tmp2137	%read{3759,3759} %write{3758,3758} %derivs
temp	float	$tmp2138	%read{3755,3758} %write{3753,3753} %derivs
temp	float	$tmp2139	%read{3757,3757} %write{3756,3756} %derivs
temp	float	$tmp2140	%read{3756,3756} %write{3755,3755} %derivs
temp	float	$tmp2141	%read{3758,3758} %write{3757,3757} %derivs
temp	float	$tmp2142	%read{3762,3765} %write{3760,3760} %derivs
temp	float	$tmp2143	%read{3764,3764} %write{3763,3763} %derivs
temp	float	$tmp2144	%read{3763,3763} %write{3762,3762} %derivs
temp	float	$tmp2145	%read{3765,3765} %write{3764,3764} %derivs
temp	float	$tmp2146	%read{3781,3781} %write{3774,3780} %derivs
temp	float	$tmp2147	%read{3774,3774} %write{3773,3773} %derivs
temp	float	$tmp2148	%read{3770,3773} %write{3768,3768} %derivs
temp	float	$tmp2149	%read{3772,3772} %write{3771,3771} %derivs
temp	float	$tmp2150	%read{3771,3771} %write{3770,3770} %derivs
temp	float	$tmp2151	%read{3773,3773} %write{3772,3772} %derivs
temp	float	$tmp2152	%read{3777,3780} %write{3775,3775} %derivs
temp	float	$tmp2153	%read{3779,3779} %write{3778,3778} %derivs
temp	float	$tmp2154	%read{3778,3778} %write{3777,3777} %derivs
temp	float	$tmp2155	%read{3780,3780} %write{3779,3779} %derivs
temp	float	$tmp2156	%read{3783,3783} %write{3782,3782} %derivs
temp	float	$tmp2157	%read{3784,3784} %write{3783,3783} %derivs
temp	float	$tmp2158	%read{3786,3786} %write{3785,3785} %derivs
temp	float	$tmp2159	%read{3787,3787} %write{3786,3786} %derivs
temp	float	$tmp2160	%read{3789,3789} %write{3788,3788} %derivs
temp	float	$tmp2161	%read{3790,3790} %write{3789,3789} %derivs
temp	float	$tmp2162	%read{3792,3792} %write{3791,3791} %derivs
temp	float	$tmp2163	%read{3793,3793} %write{3792,3792} %derivs
temp	float	$tmp2164	%read{3796,3796} %write{3794,3794} %derivs
temp	float	$tmp2165	%read{3797,3797} %write{3796,3796} %derivs
temp	float	$tmp2166	%read{3796,3796} %write{3795,3795} %derivs
temp	float	$tmp2167	%read{3800,3800} %write{3798,3798} %derivs
temp	float	$tmp2168	%read{3800,3800} %write{3799,3799} %derivs
temp	int	$tmp2170	%read{3803,3803} %write{3802,3802}
temp	color	$tmp2171	%read{3805,3805} %write{3804,3804}
temp	color	$tmp2172	%read{3809,3809} %write{3805,3805}
temp	color	$tmp2173	%read{3810,3810} %write{3806,3806}
temp	color	$tmp2174	%read{3809,3809} %write{3807,3807}
temp	color	$tmp2175	%read{3810,3810} %write{3809,3809}
temp	float	$tmp2176	%read{3813,3813} %write{3812,3812}
temp	float	$tmp2177	%read{3814,3814} %write{3813,3813}
temp	float	$tmp2178	%read{3817,3817} %write{3816,3816}
temp	float	$tmp2179	%read{3818,3818} %write{3817,3817}
temp	float	$tmp2180	%read{3822,3822} %write{3821,3821}
temp	float	$tmp2181	%read{3827,3827} %write{3824,3824}
temp	float	$tmp2182	%read{3826,3826} %write{3825,3825}
temp	float	$tmp2183	%read{3827,3827} %write{3826,3826}
temp	float	$tmp2184	%read{3828,3828} %write{3827,3827}
temp	normal	$tmp2185	%read{3834,3834} %write{3832,3832}
temp	float	$tmp2186	%read{3832,3832} %write{3829,3829}
temp	float	$tmp2187	%read{3832,3832} %write{3830,3830}
temp	float	$tmp2188	%read{3832,3832} %write{3831,3831}
temp	float	$tmp2191	%read{3837,3837} %write{3836,3836}
temp	normal	$tmp2192	%read{3839,3839} %write{3837,3837}
temp	float	$tmp2193	%read{3839,3839} %write{3838,3838}
temp	normal	$tmp2194	%read{3840,3840} %write{3839,3839}
temp	float	$tmp2195	%read{3842,3842} %write{3841,3841}
temp	int	$tmp2196	%read{3843,3843} %write{3842,3842}
temp	normal	$tmp2197	%read{3847,3847} %write{3846,3846}
temp	float	$tmp2198	%read{3846,3846} %write{3844,3844}
temp	float	$tmp2199	%read{3846,3846} %write{3845,3845}
temp	float	$tmp2200	%read{3851,3851} %write{3849,3849}
temp	float	$tmp2201	%read{3851,3851} %write{3850,3850}
temp	float	$tmp2202	%read{3852,3852} %write{3851,3851}
temp	float	$tmp2203	%read{3858,3858} %write{3853,3853}
temp	normal	$tmp2204	%read{3858,3858} %write{3857,3857}
temp	float	$tmp2205	%read{3857,3857} %write{3854,3854}
temp	float	$tmp2206	%read{3857,3857} %write{3855,3855}
temp	float	$tmp2207	%read{3857,3857} %write{3856,3856}
temp	normal	$tmp2208	%read{3859,3859} %write{3858,3858}
temp	int	$tmp2209	%read{3861,3871} %write{3860,3870}
temp	float	$tmp2210	%read{3868,3868} %write{3867,3867}
temp	float	$tmp2211	%read{3867,3867} %write{3863,3863}
temp	float	$tmp2212	%read{3867,3867} %write{3866,3866}
temp	float	$tmp2213	%read{3866,3866} %write{3864,3864}
temp	float	$tmp2214	%read{3866,3866} %write{3865,3865}
temp	int	$tmp2215	%read{3869,3869} %write{3868,3868}
temp	int	$tmp2216	%read{3870,3870} %write{3869,3869}
temp	int	$tmp2217	%read{3872,3882} %write{3871,3881}
temp	float	$tmp2218	%read{3879,3879} %write{3878,3878}
temp	float	$tmp2219	%read{3878,3878} %write{3874,3874}
temp	float	$tmp2220	%read{3878,3878} %write{3877,3877}
temp	float	$tmp2221	%read{3877,3877} %write{3875,3875}
temp	float	$tmp2222	%read{3877,3877} %write{3876,3876}
temp	int	$tmp2223	%read{3880,3880} %write{3879,3879}
temp	int	$tmp2224	%read{3881,3881} %write{3880,3880}
temp	int	$tmp2225	%read{3885,3885} %write{3884,3884}
temp	int	$tmp2226	%read{3888,3888} %write{3887,3887}
temp	float	$tmp2227	%read{3926,3926} %write{3901,3901}
temp	float	$tmp2228	%read{3892,3899} %write{3890,3890}
temp	int	$tmp2229	%read{3893,3893} %write{3892,3892}
temp	float	$tmp2230	%read{3895,3895} %write{3894,3894}
temp	float	$tmp2231	%read{3896,3896} %write{3895,3895}
temp	int	$tmp2232	%read{3898,3898} %write{3897,3897}
temp	float	$tmp2233	%read{3926,3926} %write{3913,3913}
temp	float	$tmp2234	%read{3904,3911} %write{3902,3902}
temp	int	$tmp2235	%read{3905,3905} %write{3904,3904}
temp	float	$tmp2236	%read{3907,3907} %write{3906,3906}
temp	float	$tmp2237	%read{3908,3908} %write{3907,3907}
temp	int	$tmp2238	%read{3910,3910} %write{3909,3909}
temp	float	$tmp2239	%read{3926,3926} %write{3925,3925}
temp	float	$tmp2240	%read{3916,3923} %write{3914,3914}
temp	int	$tmp2241	%read{3917,3917} %write{3916,3916}
temp	float	$tmp2242	%read{3919,3919} %write{3918,3918}
temp	float	$tmp2243	%read{3920,3920} %write{3919,3919}
temp	int	$tmp2244	%read{3922,3922} %write{3921,3921}
temp	int	$tmp2245	%read{3928,3928} %write{3927,3927}
temp	float	$tmp2246	%read{3972,3972} %write{3943,3943}
temp	float	$tmp2247	%read{3932,3941} %write{3930,3930}
temp	int	$tmp2248	%read{3933,3933} %write{3932,3932}
temp	float	$tmp2249	%read{3935,3935} %write{3934,3934}
temp	float	$tmp2250	%read{3937,3937} %write{3935,3935}
temp	float	$tmp2251	%read{3937,3937} %write{3936,3936}
temp	int	$tmp2252	%read{3939,3939} %write{3938,3938}
temp	float	$tmp2253	%read{3941,3941} %write{3940,3940}
temp	float	$tmp2254	%read{3972,3972} %write{3957,3957}
temp	float	$tmp2255	%read{3946,3955} %write{3944,3944}
temp	int	$tmp2256	%read{3947,3947} %write{3946,3946}
temp	float	$tmp2257	%read{3949,3949} %write{3948,3948}
temp	float	$tmp2258	%read{3951,3951} %write{3949,3949}
temp	float	$tmp2259	%read{3951,3951} %write{3950,3950}
temp	int	$tmp2260	%read{3953,3953} %write{3952,3952}
temp	float	$tmp2261	%read{3955,3955} %write{3954,3954}
temp	float	$tmp2262	%read{3972,3972} %write{3971,3971}
temp	float	$tmp2263	%read{3960,3969} %write{3958,3958}
temp	int	$tmp2264	%read{3961,3961} %write{3960,3960}
temp	float	$tmp2265	%read{3963,3963} %write{3962,3962}
temp	float	$tmp2266	%read{3965,3965} %write{3963,3963}
temp	float	$tmp2267	%read{3965,3965} %write{3964,3964}
temp	int	$tmp2268	%read{3967,3967} %write{3966,3966}
temp	float	$tmp2269	%read{3969,3969} %write{3968,3968}
temp	int	$tmp2270	%read{3974,3974} %write{3973,3973}
temp	float	$tmp2271	%read{4000,4000} %write{3980,3982}
temp	float	$tmp2272	%read{3978,3982} %write{3976,3976}
temp	int	$tmp2273	%read{3979,3979} %write{3978,3978}
temp	float	$tmp2274	%read{4000,4000} %write{3988,3990}
temp	float	$tmp2275	%read{3986,3990} %write{3984,3984}
temp	int	$tmp2276	%read{3987,3987} %write{3986,3986}
temp	float	$tmp2277	%read{4000,4000} %write{3996,3998}
temp	float	$tmp2278	%read{3994,3998} %write{3992,3992}
temp	int	$tmp2279	%read{3995,3995} %write{3994,3994}
temp	int	$tmp2280	%read{4002,4002} %write{4001,4001}
temp	float	$tmp2281	%read{4028,4028} %write{4008,4010}
temp	float	$tmp2282	%read{4006,4010} %write{4004,4004}
temp	int	$tmp2283	%read{4007,4007} %write{4006,4006}
temp	float	$tmp2284	%read{4028,4028} %write{4016,4018}
temp	float	$tmp2285	%read{4014,4018} %write{4012,4012}
temp	int	$tmp2286	%read{4015,4015} %write{4014,4014}
temp	float	$tmp2287	%read{4028,4028} %write{4024,4026}
temp	float	$tmp2288	%read{4022,4026} %write{4020,4020}
temp	int	$tmp2289	%read{4023,4023} %write{4022,4022}
temp	int	$tmp2290	%read{4030,4030} %write{4029,4029}
temp	float	$tmp2291	%read{4056,4056} %write{4036,4038}
temp	float	$tmp2292	%read{4034,4038} %write{4032,4032}
temp	int	$tmp2293	%read{4035,4035} %write{4034,4034}
temp	float	$tmp2294	%read{4056,4056} %write{4044,4046}
temp	float	$tmp2295	%read{4042,4046} %write{4040,4040}
temp	int	$tmp2296	%read{4043,4043} %write{4042,4042}
temp	float	$tmp2297	%read{4056,4056} %write{4052,4054}
temp	float	$tmp2298	%read{4050,4054} %write{4048,4048}
temp	int	$tmp2299	%read{4051,4051} %write{4050,4050}
temp	int	$tmp2300	%read{4058,4058} %write{4057,4057}
temp	float	$tmp2301	%read{4081,4081} %write{4064,4065}
temp	float	$tmp2302	%read{4062,4064} %write{4060,4060}
temp	int	$tmp2303	%read{4063,4063} %write{4062,4062}
temp	float	$tmp2304	%read{4081,4081} %write{4071,4072}
temp	float	$tmp2305	%read{4069,4071} %write{4067,4067}
temp	int	$tmp2306	%read{4070,4070} %write{4069,4069}
temp	float	$tmp2307	%read{4081,4081} %write{4078,4079}
temp	float	$tmp2308	%read{4076,4078} %write{4074,4074}
temp	int	$tmp2309	%read{4077,4077} %write{4076,4076}
temp	int	$tmp2310	%read{4083,4083} %write{4082,4082}
temp	float	$tmp2311	%read{4146,4146} %write{4105,4105}
temp	float	$tmp2312	%read{4088,4100} %write{4086,4086}
temp	int	$tmp2313	%read{4089,4089} %write{4088,4088}
temp	int	$tmp2314	%read{4091,4091} %write{4090,4090}
temp	int	$tmp2315	%read{4097,4097} %write{4096,4096}
temp	float	$tmp2316	%read{4100,4100} %write{4099,4099}
temp	float	$tmp2317	%read{4101,4101} %write{4100,4100}
temp	float	$tmp2318	%read{4103,4103} %write{4101,4101}
temp	float	$tmp2319	%read{4103,4103} %write{4102,4102}
temp	float	$tmp2320	%read{4146,4146} %write{4125,4125}
temp	float	$tmp2321	%read{4108,4120} %write{4106,4106}
temp	int	$tmp2322	%read{4109,4109} %write{4108,4108}
temp	int	$tmp2323	%read{4111,4111} %write{4110,4110}
temp	int	$tmp2324	%read{4117,4117} %write{4116,4116}
temp	float	$tmp2325	%read{4120,4120} %write{4119,4119}
temp	float	$tmp2326	%read{4121,4121} %write{4120,4120}
temp	float	$tmp2327	%read{4123,4123} %write{4121,4121}
temp	float	$tmp2328	%read{4123,4123} %write{4122,4122}
temp	float	$tmp2329	%read{4146,4146} %write{4145,4145}
temp	float	$tmp2330	%read{4128,4140} %write{4126,4126}
temp	int	$tmp2331	%read{4129,4129} %write{4128,4128}
temp	int	$tmp2332	%read{4131,4131} %write{4130,4130}
temp	int	$tmp2333	%read{4137,4137} %write{4136,4136}
temp	float	$tmp2334	%read{4140,4140} %write{4139,4139}
temp	float	$tmp2335	%read{4141,4141} %write{4140,4140}
temp	float	$tmp2336	%read{4143,4143} %write{4141,4141}
temp	float	$tmp2337	%read{4143,4143} %write{4142,4142}
temp	int	$tmp2338	%read{4150,4150} %write{4149,4149}
temp	int	$tmp2339	%read{4151,4155} %write{4150,4154}
temp	int	$tmp2340	%read{4153,4153} %write{4152,4152}
temp	int	$tmp2341	%read{4154,4154} %write{4153,4153}
temp	int	$tmp2342	%read{4158,4158} %write{4157,4157}
temp	int	$tmp2343	%read{4159,4163} %write{4158,4162}
temp	int	$tmp2344	%read{4161,4161} %write{4160,4160}
temp	int	$tmp2345	%read{4162,4162} %write{4161,4161}
temp	int	$tmp2346	%read{4167,4167} %write{4166,4166}
temp	float	$tmp2347	%read{4205,4205} %write{4180,4180}
temp	float	$tmp2348	%read{4171,4178} %write{4169,4169}
temp	int	$tmp2349	%read{4172,4172} %write{4171,4171}
temp	float	$tmp2350	%read{4174,4174} %write{4173,4173}
temp	float	$tmp2351	%read{4175,4175} %write{4174,4174}
temp	int	$tmp2352	%read{4177,4177} %write{4176,4176}
temp	float	$tmp2353	%read{4205,4205} %write{4192,4192}
temp	float	$tmp2354	%read{4183,4190} %write{4181,4181}
temp	int	$tmp2355	%read{4184,4184} %write{4183,4183}
temp	float	$tmp2356	%read{4186,4186} %write{4185,4185}
temp	float	$tmp2357	%read{4187,4187} %write{4186,4186}
temp	int	$tmp2358	%read{4189,4189} %write{4188,4188}
temp	float	$tmp2359	%read{4205,4205} %write{4204,4204}
temp	float	$tmp2360	%read{4195,4202} %write{4193,4193}
temp	int	$tmp2361	%read{4196,4196} %write{4195,4195}
temp	float	$tmp2362	%read{4198,4198} %write{4197,4197}
temp	float	$tmp2363	%read{4199,4199} %write{4198,4198}
temp	int	$tmp2364	%read{4201,4201} %write{4200,4200}
temp	int	$tmp2365	%read{4207,4207} %write{4206,4206}
temp	int	$tmp2366	%read{4208,4212} %write{4207,4211}
temp	int	$tmp2367	%read{4210,4210} %write{4209,4209}
temp	int	$tmp2368	%read{4211,4211} %write{4210,4210}
temp	int	$tmp2369	%read{4215,4215} %write{4214,4214}
temp	int	$tmp2370	%read{4216,4220} %write{4215,4219}
temp	int	$tmp2371	%read{4218,4218} %write{4217,4217}
temp	int	$tmp2372	%read{4219,4219} %write{4218,4218}
temp	float	$tmp2373	%read{4224,4224} %write{4221,4221}
temp	float	$tmp2375	%read{4224,4224} %write{4222,4222}
temp	float	$tmp2377	%read{4224,4224} %write{4223,4223}
temp	int	$tmp2379	%read{4226,4226} %write{4225,4225}
temp	int	$tmp2380	%read{4227,4231} %write{4226,4230}
temp	int	$tmp2381	%read{4229,4229} %write{4228,4228}
temp	int	$tmp2382	%read{4230,4230} %write{4229,4229}
temp	float	$tmp2383	%read{4235,4235} %write{4232,4232}
temp	float	$tmp2385	%read{4235,4235} %write{4233,4233}
temp	float	$tmp2387	%read{4235,4235} %write{4234,4234}
temp	int	$tmp2389	%read{4237,4237} %write{4236,4236}
temp	float	$tmp2390	%read{4260,4260} %write{4243,4244}
temp	float	$tmp2391	%read{4241,4243} %write{4239,4239}
temp	int	$tmp2392	%read{4242,4242} %write{4241,4241}
temp	float	$tmp2393	%read{4260,4260} %write{4250,4251}
temp	float	$tmp2394	%read{4248,4250} %write{4246,4246}
temp	int	$tmp2395	%read{4249,4249} %write{4248,4248}
temp	float	$tmp2396	%read{4260,4260} %write{4257,4258}
temp	float	$tmp2397	%read{4255,4257} %write{4253,4253}
temp	int	$tmp2398	%read{4256,4256} %write{4255,4255}
temp	int	$tmp2399	%read{4262,4262} %write{4261,4261}
temp	float	$tmp2400	%read{4288,4288} %write{4268,4270}
temp	float	$tmp2401	%read{4266,4270} %write{4264,4264}
temp	int	$tmp2402	%read{4267,4267} %write{4266,4266}
temp	float	$tmp2403	%read{4288,4288} %write{4276,4278}
temp	float	$tmp2404	%read{4274,4278} %write{4272,4272}
temp	int	$tmp2405	%read{4275,4275} %write{4274,4274}
temp	float	$tmp2406	%read{4288,4288} %write{4284,4286}
temp	float	$tmp2407	%read{4282,4286} %write{4280,4280}
temp	int	$tmp2408	%read{4283,4283} %write{4282,4282}
temp	int	$tmp2409	%read{4290,4290} %write{4289,4289}
temp	float	$tmp2410	%read{4316,4316} %write{4296,4298}
temp	float	$tmp2411	%read{4294,4298} %write{4292,4292}
temp	int	$tmp2412	%read{4295,4295} %write{4294,4294}
temp	float	$tmp2413	%read{4316,4316} %write{4304,4306}
temp	float	$tmp2414	%read{4302,4306} %write{4300,4300}
temp	int	$tmp2415	%read{4303,4303} %write{4302,4302}
temp	float	$tmp2416	%read{4316,4316} %write{4312,4314}
temp	float	$tmp2417	%read{4310,4314} %write{4308,4308}
temp	int	$tmp2418	%read{4311,4311} %write{4310,4310}
temp	int	$tmp2419	%read{4318,4318} %write{4317,4317}
temp	float	$tmp2420	%read{4344,4344} %write{4324,4326}
temp	float	$tmp2421	%read{4322,4326} %write{4320,4320}
temp	int	$tmp2422	%read{4323,4323} %write{4322,4322}
temp	float	$tmp2423	%read{4344,4344} %write{4332,4334}
temp	float	$tmp2424	%read{4330,4334} %write{4328,4328}
temp	int	$tmp2425	%read{4331,4331} %write{4330,4330}
temp	float	$tmp2426	%read{4344,4344} %write{4340,4342}
temp	float	$tmp2427	%read{4338,4342} %write{4336,4336}
temp	int	$tmp2428	%read{4339,4339} %write{4338,4338}
temp	int	$tmp2429	%read{4346,4346} %write{4345,4345}
temp	int	$tmp2430	%read{4347,4351} %write{4346,4350}
temp	int	$tmp2431	%read{4349,4349} %write{4348,4348}
temp	int	$tmp2432	%read{4350,4350} %write{4349,4349}
temp	float	$tmp2433	%read{4355,4355} %write{4352,4352}
temp	float	$tmp2435	%read{4355,4355} %write{4353,4353}
temp	float	$tmp2437	%read{4355,4355} %write{4354,4354}
temp	int	$tmp2439	%read{4357,4357} %write{4356,4356}
temp	float	$tmp2440	%read{4361,4361} %write{4358,4358}
temp	float	$tmp2442	%read{4361,4361} %write{4359,4359}
temp	float	$tmp2444	%read{4361,4361} %write{4360,4360}
temp	int	$tmp2446	%read{4365,4365} %write{4364,4364}
temp	int	$tmp2447	%read{4366,4370} %write{4365,4369}
temp	int	$tmp2448	%read{4368,4368} %write{4367,4367}
temp	int	$tmp2449	%read{4369,4369} %write{4368,4368}
temp	int	$tmp2450	%read{4374,4374} %write{4373,4373}
temp	float	$tmp2451	%read{4412,4412} %write{4387,4387}
temp	float	$tmp2452	%read{4378,4385} %write{4376,4376}
temp	int	$tmp2453	%read{4379,4379} %write{4378,4378}
temp	float	$tmp2454	%read{4381,4381} %write{4380,4380}
temp	float	$tmp2455	%read{4382,4382} %write{4381,4381}
temp	int	$tmp2456	%read{4384,4384} %write{4383,4383}
temp	float	$tmp2457	%read{4412,4412} %write{4399,4399}
temp	float	$tmp2458	%read{4390,4397} %write{4388,4388}
temp	int	$tmp2459	%read{4391,4391} %write{4390,4390}
temp	float	$tmp2460	%read{4393,4393} %write{4392,4392}
temp	float	$tmp2461	%read{4394,4394} %write{4393,4393}
temp	int	$tmp2462	%read{4396,4396} %write{4395,4395}
temp	float	$tmp2463	%read{4412,4412} %write{4411,4411}
temp	float	$tmp2464	%read{4402,4409} %write{4400,4400}
temp	int	$tmp2465	%read{4403,4403} %write{4402,4402}
temp	float	$tmp2466	%read{4405,4405} %write{4404,4404}
temp	float	$tmp2467	%read{4406,4406} %write{4405,4405}
temp	int	$tmp2468	%read{4408,4408} %write{4407,4407}
temp	float	$tmp2469	%read{4416,4416} %write{4413,4413}
temp	float	$tmp2471	%read{4416,4416} %write{4414,4414}
temp	float	$tmp2473	%read{4416,4416} %write{4415,4415}
temp	int	$tmp2475	%read{4418,4418} %write{4417,4417}
temp	int	$tmp2476	%read{4419,4423} %write{4418,4422}
temp	int	$tmp2477	%read{4421,4421} %write{4420,4420}
temp	int	$tmp2478	%read{4422,4422} %write{4421,4421}
temp	float	$tmp2479	%read{4427,4427} %write{4424,4424}
temp	float	$tmp2481	%read{4427,4427} %write{4425,4425}
temp	float	$tmp2483	%read{4427,4427} %write{4426,4426}
temp	int	$tmp2485	%read{4429,4429} %write{4428,4428}
temp	int	$tmp2486	%read{4430,4434} %write{4429,4433}
temp	int	$tmp2487	%read{4432,4432} %write{4431,4431}
temp	int	$tmp2488	%read{4433,4433} %write{4432,4432}
temp	int	$tmp2489	%read{4437,4437} %write{4436,4436}
temp	int	$tmp2490	%read{4438,4442} %write{4437,4441}
temp	int	$tmp2491	%read{4440,4440} %write{4439,4439}
temp	int	$tmp2492	%read{4441,4441} %write{4440,4440}
temp	float	$tmp2493	%read{4446,4446} %write{4443,4443}
temp	float	$tmp2495	%read{4446,4446} %write{4444,4444}
temp	float	$tmp2497	%read{4446,4446} %write{4445,4445}
temp	int	$tmp2499	%read{4448,4448} %write{4447,4447}
temp	float	$tmp2500	%read{4471,4471} %write{4454,4455}
temp	float	$tmp2501	%read{4452,4454} %write{4450,4450}
temp	int	$tmp2502	%read{4453,4453} %write{4452,4452}
temp	float	$tmp2503	%read{4471,4471} %write{4461,4462}
temp	float	$tmp2504	%read{4459,4461} %write{4457,4457}
temp	int	$tmp2505	%read{4460,4460} %write{4459,4459}
temp	float	$tmp2506	%read{4471,4471} %write{4468,4469}
temp	float	$tmp2507	%read{4466,4468} %write{4464,4464}
temp	int	$tmp2508	%read{4467,4467} %write{4466,4466}
temp	float	$tmp2509	%read{4475,4475} %write{4472,4472}
temp	float	$tmp2511	%read{4475,4475} %write{4473,4473}
temp	float	$tmp2513	%read{4475,4475} %write{4474,4474}
temp	int	$tmp2515	%read{4477,4477} %write{4476,4476}
temp	float	$tmp2516	%read{4503,4503} %write{4483,4485}
temp	float	$tmp2517	%read{4481,4485} %write{4479,4479}
temp	int	$tmp2518	%read{4482,4482} %write{4481,4481}
temp	float	$tmp2519	%read{4503,4503} %write{4491,4493}
temp	float	$tmp2520	%read{4489,4493} %write{4487,4487}
temp	int	$tmp2521	%read{4490,4490} %write{4489,4489}
temp	float	$tmp2522	%read{4503,4503} %write{4499,4501}
temp	float	$tmp2523	%read{4497,4501} %write{4495,4495}
temp	int	$tmp2524	%read{4498,4498} %write{4497,4497}
temp	float	$tmp2525	%read{4507,4507} %write{4504,4504}
temp	float	$tmp2527	%read{4507,4507} %write{4505,4505}
temp	float	$tmp2529	%read{4507,4507} %write{4506,4506}
temp	int	$tmp2531	%read{4509,4509} %write{4508,4508}
temp	float	$tmp2532	%read{4535,4535} %write{4515,4517}
temp	float	$tmp2533	%read{4513,4517} %write{4511,4511}
temp	int	$tmp2534	%read{4514,4514} %write{4513,4513}
temp	float	$tmp2535	%read{4535,4535} %write{4523,4525}
temp	float	$tmp2536	%read{4521,4525} %write{4519,4519}
temp	int	$tmp2537	%read{4522,4522} %write{4521,4521}
temp	float	$tmp2538	%read{4535,4535} %write{4531,4533}
temp	float	$tmp2539	%read{4529,4533} %write{4527,4527}
temp	int	$tmp2540	%read{4530,4530} %write{4529,4529}
temp	float	$tmp2541	%read{4539,4539} %write{4536,4536}
temp	float	$tmp2543	%read{4539,4539} %write{4537,4537}
temp	float	$tmp2545	%read{4539,4539} %write{4538,4538}
temp	int	$tmp2547	%read{4541,4541} %write{4540,4540}
temp	float	$tmp2548	%read{4567,4567} %write{4547,4549}
temp	float	$tmp2549	%read{4545,4549} %write{4543,4543}
temp	int	$tmp2550	%read{4546,4546} %write{4545,4545}
temp	float	$tmp2551	%read{4567,4567} %write{4555,4557}
temp	float	$tmp2552	%read{4553,4557} %write{4551,4551}
temp	int	$tmp2553	%read{4554,4554} %write{4553,4553}
temp	float	$tmp2554	%read{4567,4567} %write{4563,4565}
temp	float	$tmp2555	%read{4561,4565} %write{4559,4559}
temp	int	$tmp2556	%read{4562,4562} %write{4561,4561}
temp	float	$tmp2557	%read{4571,4571} %write{4568,4568}
temp	float	$tmp2559	%read{4571,4571} %write{4569,4569}
temp	float	$tmp2561	%read{4571,4571} %write{4570,4570}
temp	int	$tmp2563	%read{4573,4573} %write{4572,4572}
temp	int	$tmp2564	%read{4574,4578} %write{4573,4577}
temp	int	$tmp2565	%read{4576,4576} %write{4575,4575}
temp	int	$tmp2566	%read{4577,4577} %write{4576,4576}
temp	float	$tmp2567	%read{4582,4582} %write{4579,4579}
temp	float	$tmp2569	%read{4582,4582} %write{4580,4580}
temp	float	$tmp2571	%read{4582,4582} %write{4581,4581}
temp	int	$tmp2573	%read{4584,4584} %write{4583,4583}
temp	float	$tmp2574	%read{4588,4588} %write{4585,4585}
temp	float	$tmp2576	%read{4588,4588} %write{4586,4586}
temp	float	$tmp2578	%read{4588,4588} %write{4587,4587}
temp	int	$tmp2580	%read{4592,4592} %write{4591,4591}
temp	int	$tmp2581	%read{4593,4597} %write{4592,4596}
temp	int	$tmp2582	%read{4595,4595} %write{4594,4594}
temp	int	$tmp2583	%read{4596,4596} %write{4595,4595}
temp	int	$tmp2584	%read{4601,4601} %write{4600,4600}
temp	float	$tmp2585	%read{4639,4639} %write{4614,4614}
temp	float	$tmp2586	%read{4605,4612} %write{4603,4603}
temp	int	$tmp2587	%read{4606,4606} %write{4605,4605}
temp	float	$tmp2588	%read{4608,4608} %write{4607,4607}
temp	float	$tmp2589	%read{4609,4609} %write{4608,4608}
temp	int	$tmp2590	%read{4611,4611} %write{4610,4610}
temp	float	$tmp2591	%read{4639,4639} %write{4626,4626}
temp	float	$tmp2592	%read{4617,4624} %write{4615,4615}
temp	int	$tmp2593	%read{4618,4618} %write{4617,4617}
temp	float	$tmp2594	%read{4620,4620} %write{4619,4619}
temp	float	$tmp2595	%read{4621,4621} %write{4620,4620}
temp	int	$tmp2596	%read{4623,4623} %write{4622,4622}
temp	float	$tmp2597	%read{4639,4639} %write{4638,4638}
temp	float	$tmp2598	%read{4629,4636} %write{4627,4627}
temp	int	$tmp2599	%read{4630,4630} %write{4629,4629}
temp	float	$tmp2600	%read{4632,4632} %write{4631,4631}
temp	float	$tmp2601	%read{4633,4633} %write{4632,4632}
temp	int	$tmp2602	%read{4635,4635} %write{4634,4634}
temp	float	$tmp2603	%read{4643,4643} %write{4640,4640}
temp	float	$tmp2605	%read{4643,4643} %write{4641,4641}
temp	float	$tmp2607	%read{4643,4643} %write{4642,4642}
temp	int	$tmp2609	%read{4645,4645} %write{4644,4644}
temp	int	$tmp2610	%read{4646,4650} %write{4645,4649}
temp	int	$tmp2611	%read{4648,4648} %write{4647,4647}
temp	int	$tmp2612	%read{4649,4649} %write{4648,4648}
temp	float	$tmp2613	%read{4654,4654} %write{4651,4651}
temp	float	$tmp2615	%read{4654,4654} %write{4652,4652}
temp	float	$tmp2617	%read{4654,4654} %write{4653,4653}
temp	int	$tmp2619	%read{4656,4656} %write{4655,4655}
temp	int	$tmp2620	%read{4657,4661} %write{4656,4660}
temp	int	$tmp2621	%read{4659,4659} %write{4658,4658}
temp	int	$tmp2622	%read{4660,4660} %write{4659,4659}
temp	float	$tmp2623	%read{4665,4665} %write{4662,4662}
temp	float	$tmp2625	%read{4665,4665} %write{4663,4663}
temp	float	$tmp2627	%read{4665,4665} %write{4664,4664}
temp	int	$tmp2629	%read{4667,4667} %write{4666,4666}
temp	int	$tmp2630	%read{4668,4672} %write{4667,4671}
temp	int	$tmp2631	%read{4670,4670} %write{4669,4669}
temp	int	$tmp2632	%read{4671,4671} %write{4670,4670}
temp	int	$tmp2633	%read{4675,4675} %write{4674,4674}
temp	float	$tmp2634	%read{4698,4698} %write{4681,4682}
temp	float	$tmp2635	%read{4679,4681} %write{4677,4677}
temp	int	$tmp2636	%read{4680,4680} %write{4679,4679}
temp	float	$tmp2637	%read{4698,4698} %write{4688,4689}
temp	float	$tmp2638	%read{4686,4688} %write{4684,4684}
temp	int	$tmp2639	%read{4687,4687} %write{4686,4686}
temp	float	$tmp2640	%read{4698,4698} %write{4695,4696}
temp	float	$tmp2641	%read{4693,4695} %write{4691,4691}
temp	int	$tmp2642	%read{4694,4694} %write{4693,4693}
temp	float	$tmp2643	%read{4702,4702} %write{4699,4699}
temp	float	$tmp2645	%read{4702,4702} %write{4700,4700}
temp	float	$tmp2647	%read{4702,4702} %write{4701,4701}
temp	int	$tmp2649	%read{4704,4704} %write{4703,4703}
temp	float	$tmp2650	%read{4730,4730} %write{4710,4712}
temp	float	$tmp2651	%read{4708,4712} %write{4706,4706}
temp	int	$tmp2652	%read{4709,4709} %write{4708,4708}
temp	float	$tmp2653	%read{4730,4730} %write{4718,4720}
temp	float	$tmp2654	%read{4716,4720} %write{4714,4714}
temp	int	$tmp2655	%read{4717,4717} %write{4716,4716}
temp	float	$tmp2656	%read{4730,4730} %write{4726,4728}
temp	float	$tmp2657	%read{4724,4728} %write{4722,4722}
temp	int	$tmp2658	%read{4725,4725} %write{4724,4724}
temp	float	$tmp2659	%read{4734,4734} %write{4731,4731}
temp	float	$tmp2661	%read{4734,4734} %write{4732,4732}
temp	float	$tmp2663	%read{4734,4734} %write{4733,4733}
temp	int	$tmp2665	%read{4736,4736} %write{4735,4735}
temp	float	$tmp2666	%read{4762,4762} %write{4742,4744}
temp	float	$tmp2667	%read{4740,4744} %write{4738,4738}
temp	int	$tmp2668	%read{4741,4741} %write{4740,4740}
temp	float	$tmp2669	%read{4762,4762} %write{4750,4752}
temp	float	$tmp2670	%read{4748,4752} %write{4746,4746}
temp	int	$tmp2671	%read{4749,4749} %write{4748,4748}
temp	float	$tmp2672	%read{4762,4762} %write{4758,4760}
temp	float	$tmp2673	%read{4756,4760} %write{4754,4754}
temp	int	$tmp2674	%read{4757,4757} %write{4756,4756}
temp	float	$tmp2675	%read{4766,4766} %write{4763,4763}
temp	float	$tmp2677	%read{4766,4766} %write{4764,4764}
temp	float	$tmp2679	%read{4766,4766} %write{4765,4765}
temp	int	$tmp2681	%read{4768,4768} %write{4767,4767}
temp	float	$tmp2682	%read{4794,4794} %write{4774,4776}
temp	float	$tmp2683	%read{4772,4776} %write{4770,4770}
temp	int	$tmp2684	%read{4773,4773} %write{4772,4772}
temp	float	$tmp2685	%read{4794,4794} %write{4782,4784}
temp	float	$tmp2686	%read{4780,4784} %write{4778,4778}
temp	int	$tmp2687	%read{4781,4781} %write{4780,4780}
temp	float	$tmp2688	%read{4794,4794} %write{4790,4792}
temp	float	$tmp2689	%read{4788,4792} %write{4786,4786}
temp	int	$tmp2690	%read{4789,4789} %write{4788,4788}
temp	float	$tmp2691	%read{4798,4798} %write{4795,4795}
temp	float	$tmp2693	%read{4798,4798} %write{4796,4796}
temp	float	$tmp2695	%read{4798,4798} %write{4797,4797}
temp	int	$tmp2697	%read{4800,4800} %write{4799,4799}
temp	int	$tmp2698	%read{4801,4805} %write{4800,4804}
temp	int	$tmp2699	%read{4803,4803} %write{4802,4802}
temp	int	$tmp2700	%read{4804,4804} %write{4803,4803}
temp	float	$tmp2701	%read{4809,4809} %write{4806,4806}
temp	float	$tmp2703	%read{4809,4809} %write{4807,4807}
temp	float	$tmp2705	%read{4809,4809} %write{4808,4808}
temp	int	$tmp2707	%read{4811,4811} %write{4810,4810}
temp	float	$tmp2708	%read{4815,4815} %write{4812,4812}
temp	float	$tmp2710	%read{4815,4815} %write{4813,4813}
temp	float	$tmp2712	%read{4815,4815} %write{4814,4814}
temp	int	$tmp2714	%read{4819,4819} %write{4818,4818}
temp	int	$tmp2715	%read{4820,4824} %write{4819,4823}
temp	int	$tmp2716	%read{4822,4822} %write{4821,4821}
temp	int	$tmp2717	%read{4823,4823} %write{4822,4822}
temp	int	$tmp2718	%read{4828,4828} %write{4827,4827}
temp	float	$tmp2719	%read{4866,4866} %write{4841,4841}
temp	float	$tmp2720	%read{4832,4839} %write{4830,4830}
temp	int	$tmp2721	%read{4833,4833} %write{4832,4832}
temp	float	$tmp2722	%read{4835,4835} %write{4834,4834}
temp	float	$tmp2723	%read{4836,4836} %write{4835,4835}
temp	int	$tmp2724	%read{4838,4838} %write{4837,4837}
temp	float	$tmp2725	%read{4866,4866} %write{4853,4853}
temp	float	$tmp2726	%read{4844,4851} %write{4842,4842}
temp	int	$tmp2727	%read{4845,4845} %write{4844,4844}
temp	float	$tmp2728	%read{4847,4847} %write{4846,4846}
temp	float	$tmp2729	%read{4848,4848} %write{4847,4847}
temp	int	$tmp2730	%read{4850,4850} %write{4849,4849}
temp	float	$tmp2731	%read{4866,4866} %write{4865,4865}
temp	float	$tmp2732	%read{4856,4863} %write{4854,4854}
temp	int	$tmp2733	%read{4857,4857} %write{4856,4856}
temp	float	$tmp2734	%read{4859,4859} %write{4858,4858}
temp	float	$tmp2735	%read{4860,4860} %write{4859,4859}
temp	int	$tmp2736	%read{4862,4862} %write{4861,4861}
temp	float	$tmp2737	%read{4870,4870} %write{4867,4867}
temp	float	$tmp2739	%read{4870,4870} %write{4868,4868}
temp	float	$tmp2741	%read{4870,4870} %write{4869,4869}
temp	int	$tmp2743	%read{4872,4872} %write{4871,4871}
temp	int	$tmp2744	%read{4873,4877} %write{4872,4876}
temp	int	$tmp2745	%read{4875,4875} %write{4874,4874}
temp	int	$tmp2746	%read{4876,4876} %write{4875,4875}
temp	float	$tmp2747	%read{4881,4881} %write{4878,4878}
temp	float	$tmp2749	%read{4881,4881} %write{4879,4879}
temp	float	$tmp2751	%read{4881,4881} %write{4880,4880}
temp	int	$tmp2753	%read{4883,4883} %write{4882,4882}
temp	int	$tmp2754	%read{4884,4888} %write{4883,4887}
temp	int	$tmp2755	%read{4886,4886} %write{4885,4885}
temp	int	$tmp2756	%read{4887,4887} %write{4886,4886}
temp	float	$tmp2757	%read{4892,4892} %write{4889,4889}
temp	float	$tmp2759	%read{4892,4892} %write{4890,4890}
temp	float	$tmp2761	%read{4892,4892} %write{4891,4891}
temp	int	$tmp2763	%read{4894,4894} %write{4893,4893}
temp	int	$tmp2764	%read{4895,4899} %write{4894,4898}
temp	int	$tmp2765	%read{4897,4897} %write{4896,4896}
temp	int	$tmp2766	%read{4898,4898} %write{4897,4897}
temp	float	$tmp2767	%read{4903,4903} %write{4900,4900}
temp	float	$tmp2769	%read{4903,4903} %write{4901,4901}
temp	float	$tmp2771	%read{4903,4903} %write{4902,4902}
temp	int	$tmp2773	%read{4905,4905} %write{4904,4904}
temp	float	$tmp2774	%read{4928,4928} %write{4911,4912}
temp	float	$tmp2775	%read{4909,4911} %write{4907,4907}
temp	int	$tmp2776	%read{4910,4910} %write{4909,4909}
temp	float	$tmp2777	%read{4928,4928} %write{4918,4919}
temp	float	$tmp2778	%read{4916,4918} %write{4914,4914}
temp	int	$tmp2779	%read{4917,4917} %write{4916,4916}
temp	float	$tmp2780	%read{4928,4928} %write{4925,4926}
temp	float	$tmp2781	%read{4923,4925} %write{4921,4921}
temp	int	$tmp2782	%read{4924,4924} %write{4923,4923}
temp	float	$tmp2783	%read{4932,4932} %write{4929,4929}
temp	float	$tmp2785	%read{4932,4932} %write{4930,4930}
temp	float	$tmp2787	%read{4932,4932} %write{4931,4931}
temp	int	$tmp2789	%read{4934,4934} %write{4933,4933}
temp	float	$tmp2790	%read{4960,4960} %write{4940,4942}
temp	float	$tmp2791	%read{4938,4942} %write{4936,4936}
temp	int	$tmp2792	%read{4939,4939} %write{4938,4938}
temp	float	$tmp2793	%read{4960,4960} %write{4948,4950}
temp	float	$tmp2794	%read{4946,4950} %write{4944,4944}
temp	int	$tmp2795	%read{4947,4947} %write{4946,4946}
temp	float	$tmp2796	%read{4960,4960} %write{4956,4958}
temp	float	$tmp2797	%read{4954,4958} %write{4952,4952}
temp	int	$tmp2798	%read{4955,4955} %write{4954,4954}
temp	float	$tmp2799	%read{4964,4964} %write{4961,4961}
temp	float	$tmp2801	%read{4964,4964} %write{4962,4962}
temp	float	$tmp2803	%read{4964,4964} %write{4963,4963}
temp	int	$tmp2805	%read{4966,4966} %write{4965,4965}
temp	float	$tmp2806	%read{4992,4992} %write{4972,4974}
temp	float	$tmp2807	%read{4970,4974} %write{4968,4968}
temp	int	$tmp2808	%read{4971,4971} %write{4970,4970}
temp	float	$tmp2809	%read{4992,4992} %write{4980,4982}
temp	float	$tmp2810	%read{4978,4982} %write{4976,4976}
temp	int	$tmp2811	%read{4979,4979} %write{4978,4978}
temp	float	$tmp2812	%read{4992,4992} %write{4988,4990}
temp	float	$tmp2813	%read{4986,4990} %write{4984,4984}
temp	int	$tmp2814	%read{4987,4987} %write{4986,4986}
temp	float	$tmp2815	%read{4996,4996} %write{4993,4993}
temp	float	$tmp2817	%read{4996,4996} %write{4994,4994}
temp	float	$tmp2819	%read{4996,4996} %write{4995,4995}
temp	int	$tmp2821	%read{4998,4998} %write{4997,4997}
temp	float	$tmp2822	%read{5024,5024} %write{5004,5006}
temp	float	$tmp2823	%read{5002,5006} %write{5000,5000}
temp	int	$tmp2824	%read{5003,5003} %write{5002,5002}
temp	float	$tmp2825	%read{5024,5024} %write{5012,5014}
temp	float	$tmp2826	%read{5010,5014} %write{5008,5008}
temp	int	$tmp2827	%read{5011,5011} %write{5010,5010}
temp	float	$tmp2828	%read{5024,5024} %write{5020,5022}
temp	float	$tmp2829	%read{5018,5022} %write{5016,5016}
temp	int	$tmp2830	%read{5019,5019} %write{5018,5018}
temp	float	$tmp2831	%read{5028,5028} %write{5025,5025}
temp	float	$tmp2833	%read{5028,5028} %write{5026,5026}
temp	float	$tmp2835	%read{5028,5028} %write{5027,5027}
temp	int	$tmp2837	%read{5030,5030} %write{5029,5029}
temp	int	$tmp2838	%read{5031,5035} %write{5030,5034}
temp	int	$tmp2839	%read{5033,5033} %write{5032,5032}
temp	int	$tmp2840	%read{5034,5034} %write{5033,5033}
temp	int	$tmp2841	%read{5038,5038} %write{5037,5037}
temp	float	$tmp2842	%read{5042,5042} %write{5039,5039}
temp	float	$tmp2844	%read{5042,5042} %write{5040,5040}
temp	float	$tmp2846	%read{5042,5042} %write{5041,5041}
temp	int	$tmp2848	%read{5046,5046} %write{5045,5045}
temp	int	$tmp2849	%read{5050,5050} %write{5049,5049}
temp	float	$tmp2850	%read{5088,5088} %write{5063,5063}
temp	float	$tmp2851	%read{5054,5061} %write{5052,5052}
temp	int	$tmp2852	%read{5055,5055} %write{5054,5054}
temp	float	$tmp2853	%read{5057,5057} %write{5056,5056}
temp	float	$tmp2854	%read{5058,5058} %write{5057,5057}
temp	int	$tmp2855	%read{5060,5060} %write{5059,5059}
temp	float	$tmp2856	%read{5088,5088} %write{5075,5075}
temp	float	$tmp2857	%read{5066,5073} %write{5064,5064}
temp	int	$tmp2858	%read{5067,5067} %write{5066,5066}
temp	float	$tmp2859	%read{5069,5069} %write{5068,5068}
temp	float	$tmp2860	%read{5070,5070} %write{5069,5069}
temp	int	$tmp2861	%read{5072,5072} %write{5071,5071}
temp	float	$tmp2862	%read{5088,5088} %write{5087,5087}
temp	float	$tmp2863	%read{5078,5085} %write{5076,5076}
temp	int	$tmp2864	%read{5079,5079} %write{5078,5078}
temp	float	$tmp2865	%read{5081,5081} %write{5080,5080}
temp	float	$tmp2866	%read{5082,5082} %write{5081,5081}
temp	int	$tmp2867	%read{5084,5084} %write{5083,5083}
temp	float	$tmp2868	%read{5092,5092} %write{5089,5089}
temp	float	$tmp2870	%read{5092,5092} %write{5090,5090}
temp	float	$tmp2872	%read{5092,5092} %write{5091,5091}
temp	int	$tmp2874	%read{5094,5094} %write{5093,5093}
temp	int	$tmp2875	%read{5095,5099} %write{5094,5098}
temp	int	$tmp2876	%read{5097,5097} %write{5096,5096}
temp	int	$tmp2877	%read{5098,5098} %write{5097,5097}
temp	float	$tmp2878	%read{5103,5103} %write{5100,5100}
temp	float	$tmp2880	%read{5103,5103} %write{5101,5101}
temp	float	$tmp2882	%read{5103,5103} %write{5102,5102}
temp	int	$tmp2884	%read{5105,5105} %write{5104,5104}
temp	int	$tmp2885	%read{5106,5110} %write{5105,5109}
temp	int	$tmp2886	%read{5108,5108} %write{5107,5107}
temp	int	$tmp2887	%read{5109,5109} %write{5108,5108}
temp	float	$tmp2888	%read{5114,5114} %write{5111,5111}
temp	float	$tmp2890	%read{5114,5114} %write{5112,5112}
temp	float	$tmp2892	%read{5114,5114} %write{5113,5113}
temp	int	$tmp2894	%read{5116,5116} %write{5115,5115}
temp	int	$tmp2895	%read{5117,5121} %write{5116,5120}
temp	int	$tmp2896	%read{5119,5119} %write{5118,5118}
temp	int	$tmp2897	%read{5120,5120} %write{5119,5119}
temp	float	$tmp2898	%read{5125,5125} %write{5122,5122}
temp	float	$tmp2900	%read{5125,5125} %write{5123,5123}
temp	float	$tmp2902	%read{5125,5125} %write{5124,5124}
temp	int	$tmp2904	%read{5127,5127} %write{5126,5126}
temp	float	$tmp2905	%read{5150,5150} %write{5133,5134}
temp	float	$tmp2906	%read{5131,5133} %write{5129,5129}
temp	int	$tmp2907	%read{5132,5132} %write{5131,5131}
temp	float	$tmp2908	%read{5150,5150} %write{5140,5141}
temp	float	$tmp2909	%read{5138,5140} %write{5136,5136}
temp	int	$tmp2910	%read{5139,5139} %write{5138,5138}
temp	float	$tmp2911	%read{5150,5150} %write{5147,5148}
temp	float	$tmp2912	%read{5145,5147} %write{5143,5143}
temp	int	$tmp2913	%read{5146,5146} %write{5145,5145}
temp	float	$tmp2914	%read{5154,5154} %write{5151,5151}
temp	float	$tmp2916	%read{5154,5154} %write{5152,5152}
temp	float	$tmp2918	%read{5154,5154} %write{5153,5153}
temp	int	$tmp2920	%read{5156,5156} %write{5155,5155}
temp	float	$tmp2921	%read{5182,5182} %write{5162,5164}
temp	float	$tmp2922	%read{5160,5164} %write{5158,5158}
temp	int	$tmp2923	%read{5161,5161} %write{5160,5160}
temp	float	$tmp2924	%read{5182,5182} %write{5170,5172}
temp	float	$tmp2925	%read{5168,5172} %write{5166,5166}
temp	int	$tmp2926	%read{5169,5169} %write{5168,5168}
temp	float	$tmp2927	%read{5182,5182} %write{5178,5180}
temp	float	$tmp2928	%read{5176,5180} %write{5174,5174}
temp	int	$tmp2929	%read{5177,5177} %write{5176,5176}
temp	float	$tmp2930	%read{5186,5186} %write{5183,5183}
temp	float	$tmp2932	%read{5186,5186} %write{5184,5184}
temp	float	$tmp2934	%read{5186,5186} %write{5185,5185}
temp	int	$tmp2936	%read{5188,5188} %write{5187,5187}
temp	float	$tmp2937	%read{5214,5214} %write{5194,5196}
temp	float	$tmp2938	%read{5192,5196} %write{5190,5190}
temp	int	$tmp2939	%read{5193,5193} %write{5192,5192}
temp	float	$tmp2940	%read{5214,5214} %write{5202,5204}
temp	float	$tmp2941	%read{5200,5204} %write{5198,5198}
temp	int	$tmp2942	%read{5201,5201} %write{5200,5200}
temp	float	$tmp2943	%read{5214,5214} %write{5210,5212}
temp	float	$tmp2944	%read{5208,5212} %write{5206,5206}
temp	int	$tmp2945	%read{5209,5209} %write{5208,5208}
temp	float	$tmp2946	%read{5218,5218} %write{5215,5215}
temp	float	$tmp2948	%read{5218,5218} %write{5216,5216}
temp	float	$tmp2950	%read{5218,5218} %write{5217,5217}
temp	int	$tmp2952	%read{5220,5220} %write{5219,5219}
temp	float	$tmp2953	%read{5246,5246} %write{5226,5228}
temp	float	$tmp2954	%read{5224,5228} %write{5222,5222}
temp	int	$tmp2955	%read{5225,5225} %write{5224,5224}
temp	float	$tmp2956	%read{5246,5246} %write{5234,5236}
temp	float	$tmp2957	%read{5232,5236} %write{5230,5230}
temp	int	$tmp2958	%read{5233,5233} %write{5232,5232}
temp	float	$tmp2959	%read{5246,5246} %write{5242,5244}
temp	float	$tmp2960	%read{5240,5244} %write{5238,5238}
temp	int	$tmp2961	%read{5241,5241} %write{5240,5240}
temp	float	$tmp2962	%read{5250,5250} %write{5247,5247}
temp	float	$tmp2964	%read{5250,5250} %write{5248,5248}
temp	float	$tmp2966	%read{5250,5250} %write{5249,5249}
temp	int	$tmp2968	%read{5252,5252} %write{5251,5251}
temp	int	$tmp2969	%read{5253,5257} %write{5252,5256}
temp	int	$tmp2970	%read{5255,5255} %write{5254,5254}
temp	int	$tmp2971	%read{5256,5256} %write{5255,5255}
temp	float	$tmp2972	%read{5261,5261} %write{5258,5258}
temp	float	$tmp2974	%read{5261,5261} %write{5259,5259}
temp	float	$tmp2976	%read{5261,5261} %write{5260,5260}
temp	int	$tmp2978	%read{5263,5263} %write{5262,5262}
temp	float	$tmp2979	%read{5271,5271} %write{5270,5270}
temp	color	$tmp2980	%read{5272,5272} %write{5271,5271}
temp	color	$tmp2981	%read{5273,5273} %write{5272,5272}
temp	float	$tmp2982	%read{5275,5275} %write{5274,5274}
temp	float	$tmp2983	%read{5276,5276} %write{5275,5275}
temp	float	$tmp2984	%read{5278,5278} %write{5277,5277}
temp	color	$tmp2985	%read{5279,5279} %write{5278,5278}
temp	float	$tmp2986	%read{5281,5281} %write{5280,5280}
temp	float	$tmp2987	%read{5284,5284} %write{5283,5283}
temp	int	$tmp2988	%read{5285,5285} %write{5284,5284}
const	normal	$const157	-1 -1 -1		%read{5286,5286} %write{2147483647,-1}
code in_surface_point
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:77
#     point in_surface_point = P
	assign		in_surface_point P 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{77} %argrw{"wr"}
code in_normal
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:101
#     normal in_normal = N
	assign		in_normal N 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{101} %argrw{"wr"}
code ___main___
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:943
#     normal Nn = normalize(in_normal);
	normalize	Nn in_normal 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{943} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:944
#     point Pp = in_surface_point;
	assign		Pp in_surface_point 	%line{944} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:946
#     if (in_space == "Object Space")
	eq		$tmp1 in_space $const1 	%line{946} %argrw{"wrr"}
	if		$tmp1 17 26 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:948
#         if (in_placement_matrix != matrix(1))
	assign		$tmp2 $const3 	%line{948} %argrw{"wr"}
	neq		$tmp3 in_placement_matrix $tmp2 	%argrw{"wrr"}
	if		$tmp3 15 17 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:950
#             matrix xform = matrix("common", "object") *
	matrix		$tmp4 $const4 $const5 	%line{950} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:951
#                 inverse(in_placement_matrix);
	functioncall	$const6 12 	%line{951} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:45
# matrix inverse(matrix m) { return 1 / m; }
	div		$tmp5 $const3 in_placement_matrix 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{45} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:950
#             matrix xform = matrix("common", "object") *
	mul		___742_xform $tmp4 $tmp5 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{950} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:952
#             Nn = transform(xform, Nn);
	transformn	Nn ___742_xform Nn 	%line{952} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:953
#             Pp = transform(xform, Pp);
	transform	Pp ___742_xform Pp 	%line{953} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:957
#             Nn = transform("common", "object", Nn);
	transformn	Nn $const4 $const5 Nn 	%line{957} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:958
#             Pp = transform("common", "object", Pp);
	transform	Pp $const4 $const5 Pp 	%line{958} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:961
#     else if (in_placement_matrix != matrix(1))
	assign		$tmp6 $const3 	%line{961} %argrw{"wr"}
	neq		$tmp7 in_placement_matrix $tmp6 	%argrw{"wrr"}
	if		$tmp7 26 26 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:963
#         Nn = transform(inverse(in_placement_matrix), Nn);
	functioncall	$const6 22 	%line{963} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:45
# matrix inverse(matrix m) { return 1 / m; }
	div		$tmp8 $const3 in_placement_matrix 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{45} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:963
#         Nn = transform(inverse(in_placement_matrix), Nn);
	transformn	Nn $tmp8 Nn 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{963} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:964
#         Pp = transform(inverse(in_placement_matrix), Pp);
	functioncall	$const6 25 	%line{964} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:45
# matrix inverse(matrix m) { return 1 / m; }
	div		$tmp9 $const3 in_placement_matrix 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{45} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:964
#         Pp = transform(inverse(in_placement_matrix), Pp);
	transform	Pp $tmp9 Pp 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{964} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:967
#     if (in_randomization > 0.0)
	gt		$tmp10 in_randomization $const7 	%line{967} %argrw{"wrr"}
	if		$tmp10 373 373 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:971
#         if (isconnected(in_manifold))
	isconnected	$tmp11 in_manifold 	%line{971} %argrw{"wr"}
	if		$tmp11 32 37 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:973
#             variation = (vector) cellnoise(in_manifold);
	assign		$tmp12 in_manifold 	%line{973} %argrw{"wr"}
	cellnoise	___745_variation $tmp12 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:977
#             string manifold = "";
	assign		___747_manifold $const8 	%line{977} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:978
#             getattribute("object:assembly_instance_name", manifold);
	getattribute	$tmp13 $const9 ___747_manifold 	%line{978} %argrw{"wrw"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:980
#             variation = (vector) cellnoise((vector) hash(manifold));
	hash		$tmp14 ___747_manifold 	%line{980} %argrw{"wr"}
	assign		$tmp15 $tmp14 	%argrw{"wr"}
	cellnoise	___745_variation $tmp15 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:982
#         variation = variation * 2.0 - 1.0;
	mul		$tmp16 ___745_variation $const10 	%line{982} %argrw{"wrr"}
	sub		___745_variation $tmp16 $const3 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:983
#         variation *= 360.0;
	mul		___745_variation ___745_variation $const11 	%line{983} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:986
#             in_randomization * radians(variation[0]),
	compref		$tmp18 ___745_variation $const12 	%line{986} %argrw{"wrr"}
	functioncall	$const13 44 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp19 $const14 $const15 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{88} %argrw{"wrr"}
	mul		$tmp17 $tmp18 $tmp19 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:986
#             in_randomization * radians(variation[0]),
	mul		$tmp20 in_randomization $tmp17 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{986} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:987
#             in_randomization * radians(variation[1]),
	compref		$tmp22 ___745_variation $const2 	%line{987} %argrw{"wrr"}
	functioncall	$const13 49 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp23 $const14 $const15 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{88} %argrw{"wrr"}
	mul		$tmp21 $tmp22 $tmp23 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:987
#             in_randomization * radians(variation[1]),
	mul		$tmp24 in_randomization $tmp21 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{987} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:988
#             in_randomization * radians(variation[2]));
	compref		$tmp26 ___745_variation $const16 	%line{988} %argrw{"wrr"}
	functioncall	$const13 54 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp27 $const14 $const15 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{88} %argrw{"wrr"}
	mul		$tmp25 $tmp26 $tmp27 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:988
#             in_randomization * radians(variation[2]));
	mul		$tmp28 in_randomization $tmp25 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{988} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:985
#         vector angle = vector(
	vector		___745_angle $tmp20 $tmp24 $tmp28 	%line{985} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:990
#         vector O = vector("object", 0.0, 0.0, 0.0);
	vector		___745_O $const5 $const7 $const7 $const7 	%line{990} %argrw{"wrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:991
#         vector X = vector("object", 1.0, 0.0, 0.0);
	vector		___745_X $const5 $const3 $const7 $const7 	%line{991} %argrw{"wrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:992
#         vector Y = vector("object", 0.0, 1.0, 0.0);
	vector		___745_Y $const5 $const7 $const3 $const7 	%line{992} %argrw{"wrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:993
#         vector Z = vector("object", 0.0, 0.0, 1.0);
	vector		___745_Z $const5 $const7 $const7 $const3 	%line{993} %argrw{"wrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:995
#         Pp = rotate(Pp, angle[0], O, X);
	compref		$tmp29 ___745_angle $const12 	%line{995} %argrw{"wrr"}
	functioncall	$const17 112 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp30 ___745_X ___745_O 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp30 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp29 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const3 ___254_cosang 	%line{277} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const12 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const2 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const16 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp31 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp32 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp33 $const3 $tmp32 	%argrw{"wrr"}
	mul		$tmp34 $tmp33 ___254_cosang 	%argrw{"wrr"}
	add		$tmp35 $tmp31 $tmp34 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp36 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp37 $tmp36 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp38 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp40 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp41 $tmp40 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp42 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp43 $tmp41 $tmp42 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp44 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp45 $tmp44 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp46 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp47 $tmp45 $tmp46 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp48 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp49 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp50 $const3 $tmp49 	%argrw{"wrr"}
	mul		$tmp51 $tmp50 ___254_cosang 	%argrw{"wrr"}
	add		$tmp52 $tmp48 $tmp51 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp53 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp54 $tmp53 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp55 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp56 $tmp54 $tmp55 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp57 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp58 $tmp57 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp59 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp60 $tmp58 $tmp59 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp61 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp62 $tmp61 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp63 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp65 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp66 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp67 $const3 $tmp66 	%argrw{"wrr"}
	mul		$tmp68 $tmp67 ___254_cosang 	%argrw{"wrr"}
	add		$tmp69 $tmp65 $tmp68 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___254_M $tmp35 $tmp39 $tmp43 $const7 $tmp47 $tmp52 $tmp56 $const7 $tmp60 $tmp64 $tmp69 $const7 $const7 $const7 $const7 $const3 	%line{279} %argrw{"wrrrrrrrrrrrrrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp71 Pp ___745_O 	%line{292} %argrw{"wrr"}
	transformv	$tmp70 ___254_M $tmp71 	%argrw{"wrr"}
	add		Pp $tmp70 ___745_O 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:996
#         Pp = rotate(Pp, angle[1], O, Y);
	compref		$tmp72 ___745_angle $const2 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{996} %argrw{"wrr"}
	functioncall	$const17 164 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp73 ___745_Y ___745_O 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp73 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp72 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const3 ___254_cosang 	%line{277} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const12 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const2 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const16 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp74 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp75 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp76 $const3 $tmp75 	%argrw{"wrr"}
	mul		$tmp77 $tmp76 ___254_cosang 	%argrw{"wrr"}
	add		$tmp78 $tmp74 $tmp77 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp79 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp80 $tmp79 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp81 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp82 $tmp80 $tmp81 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp83 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp84 $tmp83 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp85 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp86 $tmp84 $tmp85 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp87 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp88 $tmp87 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp89 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp90 $tmp88 $tmp89 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp91 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp92 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp93 $const3 $tmp92 	%argrw{"wrr"}
	mul		$tmp94 $tmp93 ___254_cosang 	%argrw{"wrr"}
	add		$tmp95 $tmp91 $tmp94 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp96 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp97 $tmp96 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp98 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp99 $tmp97 $tmp98 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp100 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp101 $tmp100 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp102 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp103 $tmp101 $tmp102 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp104 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp105 $tmp104 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp106 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp107 $tmp105 $tmp106 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp108 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp109 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp110 $const3 $tmp109 	%argrw{"wrr"}
	mul		$tmp111 $tmp110 ___254_cosang 	%argrw{"wrr"}
	add		$tmp112 $tmp108 $tmp111 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___254_M $tmp78 $tmp82 $tmp86 $const7 $tmp90 $tmp95 $tmp99 $const7 $tmp103 $tmp107 $tmp112 $const7 $const7 $const7 $const7 $const3 	%line{279} %argrw{"wrrrrrrrrrrrrrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp114 Pp ___745_O 	%line{292} %argrw{"wrr"}
	transformv	$tmp113 ___254_M $tmp114 	%argrw{"wrr"}
	add		Pp $tmp113 ___745_O 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:997
#         Pp = rotate(Pp, angle[2], O, Z);
	compref		$tmp115 ___745_angle $const16 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{997} %argrw{"wrr"}
	functioncall	$const17 216 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp116 ___745_Z ___745_O 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp116 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp115 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const3 ___254_cosang 	%line{277} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const12 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const2 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const16 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp117 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp118 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp119 $const3 $tmp118 	%argrw{"wrr"}
	mul		$tmp120 $tmp119 ___254_cosang 	%argrw{"wrr"}
	add		$tmp121 $tmp117 $tmp120 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp122 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp123 $tmp122 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp124 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp125 $tmp123 $tmp124 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp126 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp127 $tmp126 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp128 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp129 $tmp127 $tmp128 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp130 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp131 $tmp130 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp132 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp133 $tmp131 $tmp132 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp134 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp135 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp136 $const3 $tmp135 	%argrw{"wrr"}
	mul		$tmp137 $tmp136 ___254_cosang 	%argrw{"wrr"}
	add		$tmp138 $tmp134 $tmp137 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp139 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp140 $tmp139 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp141 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp142 $tmp140 $tmp141 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp143 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp144 $tmp143 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp145 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp146 $tmp144 $tmp145 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp147 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp148 $tmp147 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp149 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp150 $tmp148 $tmp149 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp151 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp152 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp153 $const3 $tmp152 	%argrw{"wrr"}
	mul		$tmp154 $tmp153 ___254_cosang 	%argrw{"wrr"}
	add		$tmp155 $tmp151 $tmp154 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___254_M $tmp121 $tmp125 $tmp129 $const7 $tmp133 $tmp138 $tmp142 $const7 $tmp146 $tmp150 $tmp155 $const7 $const7 $const7 $const7 $const3 	%line{279} %argrw{"wrrrrrrrrrrrrrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp157 Pp ___745_O 	%line{292} %argrw{"wrr"}
	transformv	$tmp156 ___254_M $tmp157 	%argrw{"wrr"}
	add		Pp $tmp156 ___745_O 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:999
#         Nn = rotate(Nn, angle[0], O, X);
	compref		$tmp158 ___745_angle $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{999} %argrw{"wrr"}
	functioncall	$const17 268 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp159 ___745_X ___745_O 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp159 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp158 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const3 ___254_cosang 	%line{277} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const12 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const2 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const16 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp160 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp161 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp162 $const3 $tmp161 	%argrw{"wrr"}
	mul		$tmp163 $tmp162 ___254_cosang 	%argrw{"wrr"}
	add		$tmp164 $tmp160 $tmp163 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp165 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp166 $tmp165 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp167 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp168 $tmp166 $tmp167 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp169 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp170 $tmp169 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp171 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp172 $tmp170 $tmp171 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp173 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp174 $tmp173 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp175 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp176 $tmp174 $tmp175 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp177 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp178 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp179 $const3 $tmp178 	%argrw{"wrr"}
	mul		$tmp180 $tmp179 ___254_cosang 	%argrw{"wrr"}
	add		$tmp181 $tmp177 $tmp180 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp182 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp183 $tmp182 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp184 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp185 $tmp183 $tmp184 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp186 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp187 $tmp186 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp188 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp189 $tmp187 $tmp188 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp190 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp191 $tmp190 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp192 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp193 $tmp191 $tmp192 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp194 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp195 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp196 $const3 $tmp195 	%argrw{"wrr"}
	mul		$tmp197 $tmp196 ___254_cosang 	%argrw{"wrr"}
	add		$tmp198 $tmp194 $tmp197 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___254_M $tmp164 $tmp168 $tmp172 $const7 $tmp176 $tmp181 $tmp185 $const7 $tmp189 $tmp193 $tmp198 $const7 $const7 $const7 $const7 $const3 	%line{279} %argrw{"wrrrrrrrrrrrrrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp200 Nn ___745_O 	%line{292} %argrw{"wrr"}
	transformv	$tmp199 ___254_M $tmp200 	%argrw{"wrr"}
	add		Nn $tmp199 ___745_O 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1000
#         Nn = rotate(Nn, angle[1], O, Y);
	compref		$tmp201 ___745_angle $const2 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1000} %argrw{"wrr"}
	functioncall	$const17 320 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp202 ___745_Y ___745_O 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp202 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp201 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const3 ___254_cosang 	%line{277} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const12 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const2 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const16 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp203 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp204 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp205 $const3 $tmp204 	%argrw{"wrr"}
	mul		$tmp206 $tmp205 ___254_cosang 	%argrw{"wrr"}
	add		$tmp207 $tmp203 $tmp206 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp208 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp209 $tmp208 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp210 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp211 $tmp209 $tmp210 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp212 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp213 $tmp212 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp214 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp215 $tmp213 $tmp214 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp216 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp217 $tmp216 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp218 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp219 $tmp217 $tmp218 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp220 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp221 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp222 $const3 $tmp221 	%argrw{"wrr"}
	mul		$tmp223 $tmp222 ___254_cosang 	%argrw{"wrr"}
	add		$tmp224 $tmp220 $tmp223 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp225 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp226 $tmp225 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp227 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp228 $tmp226 $tmp227 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp229 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp230 $tmp229 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp231 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp232 $tmp230 $tmp231 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp233 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp234 $tmp233 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp235 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp236 $tmp234 $tmp235 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp237 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp238 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp239 $const3 $tmp238 	%argrw{"wrr"}
	mul		$tmp240 $tmp239 ___254_cosang 	%argrw{"wrr"}
	add		$tmp241 $tmp237 $tmp240 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___254_M $tmp207 $tmp211 $tmp215 $const7 $tmp219 $tmp224 $tmp228 $const7 $tmp232 $tmp236 $tmp241 $const7 $const7 $const7 $const7 $const3 	%line{279} %argrw{"wrrrrrrrrrrrrrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp243 Nn ___745_O 	%line{292} %argrw{"wrr"}
	transformv	$tmp242 ___254_M $tmp243 	%argrw{"wrr"}
	add		Nn $tmp242 ___745_O 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1001
#         Nn = rotate(Nn, angle[2], O, Z);
	compref		$tmp244 ___745_angle $const16 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1001} %argrw{"wrr"}
	functioncall	$const17 372 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp245 ___745_Z ___745_O 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp245 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp244 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const3 ___254_cosang 	%line{277} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const12 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const2 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const16 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp246 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp247 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp248 $const3 $tmp247 	%argrw{"wrr"}
	mul		$tmp249 $tmp248 ___254_cosang 	%argrw{"wrr"}
	add		$tmp250 $tmp246 $tmp249 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp251 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp252 $tmp251 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp253 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp254 $tmp252 $tmp253 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp255 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp256 $tmp255 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp257 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp258 $tmp256 $tmp257 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp259 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp260 $tmp259 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp261 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp262 $tmp260 $tmp261 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp263 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp264 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp265 $const3 $tmp264 	%argrw{"wrr"}
	mul		$tmp266 $tmp265 ___254_cosang 	%argrw{"wrr"}
	add		$tmp267 $tmp263 $tmp266 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp268 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp269 $tmp268 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp270 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp271 $tmp269 $tmp270 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp272 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp273 $tmp272 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp274 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp275 $tmp273 $tmp274 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp276 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp277 $tmp276 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp278 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp279 $tmp277 $tmp278 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp280 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp281 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp282 $const3 $tmp281 	%argrw{"wrr"}
	mul		$tmp283 $tmp282 ___254_cosang 	%argrw{"wrr"}
	add		$tmp284 $tmp280 $tmp283 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___254_M $tmp250 $tmp254 $tmp258 $const7 $tmp262 $tmp267 $tmp271 $const7 $tmp275 $tmp279 $tmp284 $const7 $const7 $const7 $const7 $const3 	%line{279} %argrw{"wrrrrrrrrrrrrrrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp286 Nn ___745_O 	%line{292} %argrw{"wrr"}
	transformv	$tmp285 ___254_M $tmp286 	%argrw{"wrr"}
	add		Nn $tmp285 ___745_O 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1002
#         Nn = normalize(Nn);
	normalize	Nn Nn 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1002} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1006
#         Nn[0] < 0 ? -1 : 1,
	compref		$tmp288 Nn $const12 	%line{1006} %argrw{"wrr"}
	lt		$tmp289 $tmp288 $const12 	%argrw{"wrr"}
	if		$tmp289 377 378 	%argrw{"r"}
	assign		$tmp287 $const18 	%argrw{"wr"}
	assign		$tmp287 $const2 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1005
#     normal normal_sign = normal(
	assign		$tmp290 $tmp287 	%line{1005} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1007
#         Nn[1] < 0 ? -1 : 1,
	compref		$tmp292 Nn $const2 	%line{1007} %argrw{"wrr"}
	lt		$tmp293 $tmp292 $const12 	%argrw{"wrr"}
	if		$tmp293 383 384 	%argrw{"r"}
	assign		$tmp291 $const18 	%argrw{"wr"}
	assign		$tmp291 $const2 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1005
#     normal normal_sign = normal(
	assign		$tmp294 $tmp291 	%line{1005} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1008
#         Nn[2] < 0 ? -1 : 1); // sign(x)=0 when x==0
	compref		$tmp296 Nn $const16 	%line{1008} %argrw{"wrr"}
	lt		$tmp297 $tmp296 $const12 	%argrw{"wrr"}
	if		$tmp297 389 390 	%argrw{"r"}
	assign		$tmp295 $const18 	%argrw{"wr"}
	assign		$tmp295 $const2 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1005
#     normal normal_sign = normal(
	assign		$tmp298 $tmp295 	%line{1005} %argrw{"wr"}
	normal		normal_sign $tmp290 $tmp294 $tmp298 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1010
#     normal abs_normal = abs(Nn);
	abs		abs_normal Nn 	%line{1010} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1012
#     vector blending = pow(abs_normal, (1.0 - in_blend_softness) * 16);
	sub		$tmp299 $const3 in_blend_softness 	%line{1012} %argrw{"wrr"}
	mul		$tmp300 $tmp299 $const20 	%argrw{"wrr"}
	pow		blending abs_normal $tmp300 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1013
#     blending = blending / (blending[0] + blending[1] + blending[2]);
	compref		$tmp301 blending $const12 	%line{1013} %argrw{"wrr"}
	compref		$tmp302 blending $const2 	%argrw{"wrr"}
	add		$tmp303 $tmp301 $tmp302 	%argrw{"wrr"}
	compref		$tmp304 blending $const16 	%argrw{"wrr"}
	add		$tmp305 $tmp303 $tmp304 	%argrw{"wrr"}
	div		blending blending $tmp305 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1016
#     int exists = 0, numchannels = 0;
	assign		exists $const12 	%line{1016} %argrw{"wr"}
	assign		numchannels $const12 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1019
#     if (gettextureinfo(in_x_axis_filename, "exists", exists) && exists)
	gettextureinfo	$tmp306 in_x_axis_filename $const21 exists 	%line{1019} %argrw{"wrrw"}
	neq		$tmp307 $tmp306 $const12 	%argrw{"wrr"}
	if		$tmp307 409 409 	%argrw{"r"}
	neq		$tmp308 exists $const12 	%argrw{"wrr"}
	assign		$tmp307 $tmp308 	%argrw{"wr"}
	if		$tmp307 2023 2028 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1021
#         gettextureinfo(in_x_axis_filename, "channels", numchannels);
	gettextureinfo	$tmp309 in_x_axis_filename $const22 numchannels 	%line{1021} %argrw{"wrrw"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1023
#         if (blending[0] > 0.0 &&
	compref		$tmp310 blending $const12 	%line{1023} %argrw{"wrr"}
	gt		$tmp311 $tmp310 $const7 	%argrw{"wrr"}
	neq		$tmp312 $tmp311 $const12 	%argrw{"wrr"}
	if		$tmp312 429 429 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1024
#            (numchannels > 3 || max(in_x_axis_color) > 0.0))
	gt		$tmp313 numchannels $const23 	%line{1024} %argrw{"wrr"}
	neq		$tmp314 $tmp313 $const12 	%argrw{"wrr"}
	if		$tmp314 418 427 	%argrw{"r"}
	functioncall	$const24 424 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp316 in_x_axis_color $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp318 in_x_axis_color $const2 	%argrw{"wrr"}
	compref		$tmp319 in_x_axis_color $const16 	%argrw{"wrr"}
	max		$tmp317 $tmp318 $tmp319 	%argrw{"wrr"}
	max		$tmp315 $tmp316 $tmp317 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1024
#            (numchannels > 3 || max(in_x_axis_color) > 0.0))
	gt		$tmp320 $tmp315 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1024} %argrw{"wrr"}
	neq		$tmp321 $tmp320 $const12 	%argrw{"wrr"}
	assign		$tmp314 $tmp321 	%argrw{"wr"}
	neq		$tmp322 $tmp314 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1023
#         if (blending[0] > 0.0 &&
	assign		$tmp312 $tmp322 	%line{1023} %argrw{"wr"}
	if		$tmp312 2023 2023 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1026
#             set_wrap_mode(in_x_axis_swrap, in_x_axis_twrap, wrap_mode);
	functioncall	$const25 471 	%line{1026} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	functioncall	$const26 450 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{69} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp324 in_x_axis_swrap $const12 	%line{34} %argrw{"wrr"}
	if		$tmp324 436 450 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp323 $const27 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp325 in_x_axis_swrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp325 440 450 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp323 $const28 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp326 in_x_axis_swrap $const16 	%line{42} %argrw{"wrr"}
	if		$tmp326 444 450 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp323 $const29 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp327 in_x_axis_swrap $const23 	%line{46} %argrw{"wrr"}
	if		$tmp327 448 450 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp323 $const30 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp323 $const31 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	aassign		wrap_mode $const12 $tmp323 	%line{69} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	functioncall	$const26 470 	%line{70} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp329 in_x_axis_twrap $const12 	%line{34} %argrw{"wrr"}
	if		$tmp329 456 470 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp328 $const27 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp330 in_x_axis_twrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp330 460 470 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp328 $const28 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp331 in_x_axis_twrap $const16 	%line{42} %argrw{"wrr"}
	if		$tmp331 464 470 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp328 $const29 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp332 in_x_axis_twrap $const23 	%line{46} %argrw{"wrr"}
	if		$tmp332 468 470 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp328 $const30 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp328 $const31 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	aassign		wrap_mode $const2 $tmp328 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1030
#                 Pp[2],
	compref		$tmp333 Pp $const16 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1030} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1031
#                 Pp[1],
	compref		$tmp334 Pp $const2 	%line{1031} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1037
#                 wrap_mode[0],
	aref		$tmp335 wrap_mode $const12 	%line{1037} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1038
#                 wrap_mode[1],
	aref		$tmp336 wrap_mode $const2 	%line{1038} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1041
#                 (int) normal_sign[0],
	compref		$tmp337 normal_sign $const12 	%line{1041} %argrw{"wrr"}
	assign		$tmp338 $tmp337 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1028
#             color x_axis = get_projection_color(
	functioncall	$const32 549 	%line{1028} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:129
#     float st[2] = {s_coord, t_coord};
	aassign		___737_st $const12 $tmp333 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{129} %argrw{"wrr"}
	aassign		___737_st $const2 $tmp334 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:131
#     if (angle != 0.0)
	neq		$tmp339 in_x_axis_rotation_angle $const7 	%line{131} %argrw{"wrr"}
	if		$tmp339 499 499 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:133
#         rotate2d(st[0], st[1], angle, st[0], st[1]);
	aref		$tmp340 ___737_st $const12 	%line{133} %argrw{"wrr"}
	aref		$tmp341 ___737_st $const2 	%argrw{"wrr"}
	aref		$tmp342 ___737_st $const12 	%argrw{"wrr"}
	aref		$tmp343 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const33 497 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:119
#     float angle_rad = radians(angle_in_degrees);
	functioncall	$const13 490 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h"} %line{119} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp344 $const14 $const15 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{88} %argrw{"wrr"}
	mul		___721_angle_rad in_x_axis_rotation_angle $tmp344 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:121
#     sincos(angle_rad, s, c);
	sincos		___721_angle_rad ___721_s ___721_c 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h"} %line{121} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:122
#     rx = x * c - s * y;
	mul		$tmp345 $tmp340 ___721_c 	%line{122} %argrw{"wrr"}
	mul		$tmp346 ___721_s $tmp341 	%argrw{"wrr"}
	sub		$tmp342 $tmp345 $tmp346 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:123
#     ry = x * s + c * y;
	mul		$tmp347 $tmp340 ___721_s 	%line{123} %argrw{"wrr"}
	mul		$tmp348 ___721_c $tmp341 	%argrw{"wrr"}
	add		$tmp343 $tmp347 $tmp348 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:133
#         rotate2d(st[0], st[1], angle, st[0], st[1]);
	aassign		___737_st $const12 $tmp342 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{133} %argrw{"wrr"}
	aassign		___737_st $const2 $tmp343 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	if		in_x_axis_sflip 507 513 	%line{136} %argrw{"r"}
	aref		$tmp351 ___737_st $const12 	%argrw{"wrr"}
	functioncall	$const35 506 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp353 $tmp351 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %argrw{"wrr"}
	floor		$tmp352 $tmp353 	%argrw{"wr"}
	mul		$tmp354 $const34 $tmp352 	%argrw{"wrr"}
	sub		$tmp350 $tmp351 $tmp354 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	sub		$tmp349 $const3 $tmp350 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %argrw{"wrr"}
	aref		$tmp355 ___737_st $const12 	%argrw{"wrr"}
	functioncall	$const35 513 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp357 $tmp355 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %argrw{"wrr"}
	floor		$tmp356 $tmp357 	%argrw{"wr"}
	mul		$tmp358 $const34 $tmp356 	%argrw{"wrr"}
	sub		$tmp349 $tmp355 $tmp358 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	aassign		___737_st $const12 $tmp349 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	if		in_x_axis_tflip 522 528 	%line{137} %argrw{"r"}
	aref		$tmp361 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const35 521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp363 $tmp361 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp362 $tmp363 	%argrw{"wr"}
	mul		$tmp364 $const34 $tmp362 	%argrw{"wrr"}
	sub		$tmp360 $tmp361 $tmp364 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	sub		$tmp359 $const3 $tmp360 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{137} %argrw{"wrr"}
	aref		$tmp365 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const35 528 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp367 $tmp365 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp366 $tmp367 	%argrw{"wr"}
	mul		$tmp368 $const34 $tmp366 	%argrw{"wrr"}
	sub		$tmp359 $tmp365 $tmp368 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	aassign		___737_st $const2 $tmp359 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{137} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:139
#     st[0] *= width;
	aref		$tmp369 ___737_st $const12 	%line{139} %argrw{"wrr"}
	mul		$tmp370 $tmp369 in_x_axis_width 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp370 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:140
#     st[1] *= height;
	aref		$tmp371 ___737_st $const2 	%line{140} %argrw{"wrr"}
	mul		$tmp372 $tmp371 in_x_axis_height 	%argrw{"wrr"}
	aassign		___737_st $const2 $tmp372 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:142
#     st[0] += x_offset;
	aref		$tmp373 ___737_st $const12 	%line{142} %argrw{"wrr"}
	add		$tmp374 $tmp373 in_x_axis_horizontal_offset 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp374 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:143
#     st[1] += y_offset;
	aref		$tmp375 ___737_st $const2 	%line{143} %argrw{"wrr"}
	add		$tmp376 $tmp375 in_x_axis_vertical_offset 	%argrw{"wrr"}
	aassign		___737_st $const2 $tmp376 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:145
#     st[0] *= backside;
	aref		$tmp377 ___737_st $const12 	%line{145} %argrw{"wrr"}
	assign		$tmp379 $tmp338 	%argrw{"wr"}
	mul		$tmp378 $tmp377 $tmp379 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp378 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:149
#         st[0],
	aref		$tmp380 ___737_st $const12 	%line{149} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:150
#         st[1],
	aref		$tmp381 ___737_st $const2 	%line{150} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:147
#     return (color) texture(
	texture		___749_x_axis in_x_axis_filename $tmp380 $tmp381 $const36 $tmp335 $const37 $tmp336 $const38 $const39 $const40 $const3 $const41 x_alpha 	%line{147} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:155
#         "alpha", alpha);
	return	%line{155}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1044
#             if (in_blend_mode == "Tangent Normal")
	eq		$tmp383 in_blend_mode $const42 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1044} %argrw{"wrr"}
	if		$tmp383 606 2023 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1046
#                 normal tmp = clamp(x_axis * 2.0 - 1.0, -1.0, 1.0);
	mul		$tmp384 ___749_x_axis $const10 	%line{1046} %argrw{"wrr"}
	sub		$tmp385 $tmp384 $const3 	%argrw{"wrr"}
	assign		$tmp386 $const43 	%argrw{"wr"}
	assign		$tmp387 $const3 	%argrw{"wr"}
	functioncall	$const30 558 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:144
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp388 $tmp385 $tmp387 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{144} %argrw{"wrr"}
	max		___750_tmp $tmp388 $tmp386 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1048
#                 if (in_x_axis_flip_r) tmp[0] *= -1;
	if		in_x_axis_flip_r 562 562 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1048} %argrw{"r"}
	compref		$tmp389 ___750_tmp $const12 	%argrw{"wrr"}
	mul		$tmp390 $tmp389 $const43 	%argrw{"wrr"}
	compassign	___750_tmp $const12 $tmp390 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1049
#                 if (in_x_axis_flip_g) tmp[1] *= -1;
	if		in_x_axis_flip_g 566 566 	%line{1049} %argrw{"r"}
	compref		$tmp391 ___750_tmp $const2 	%argrw{"wrr"}
	mul		$tmp392 $tmp391 $const43 	%argrw{"wrr"}
	compassign	___750_tmp $const2 $tmp392 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1051
#                 if (in_x_axis_swap_rg)
	if		in_x_axis_swap_rg 571 571 	%line{1051} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1053
#                     float x = tmp[0];
	compref		___751_x ___750_tmp $const12 	%line{1053} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1054
#                     tmp[0] = tmp[1];
	compref		$tmp393 ___750_tmp $const2 	%line{1054} %argrw{"wrr"}
	compassign	___750_tmp $const12 $tmp393 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1055
#                     tmp[1] = x;
	compassign	___750_tmp $const2 ___751_x 	%line{1055} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1058
#                 tmp[0] *= normal_sign[0]; // account for flipped UVs
	compref		$tmp394 ___750_tmp $const12 	%line{1058} %argrw{"wrr"}
	compref		$tmp395 normal_sign $const12 	%argrw{"wrr"}
	mul		$tmp396 $tmp394 $tmp395 	%argrw{"wrr"}
	compassign	___750_tmp $const12 $tmp396 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1061
#                     normal(Nn[2], Nn[1], abs_normal[0]),
	compref		$tmp398 Nn $const16 	%line{1061} %argrw{"wrr"}
	compref		$tmp399 Nn $const2 	%argrw{"wrr"}
	compref		$tmp400 abs_normal $const12 	%argrw{"wrr"}
	normal		$tmp397 $tmp398 $tmp399 $tmp400 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1060
#                 normal X = rnm_blend(
	functioncall	$const44 595 	%line{1060} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:932
#         normal a = A + normal(0.0, 0.0, 1.0);
	add		___739_a $tmp397 $const45 	%line{932} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:933
#         normal b = B * normal(-1.0, -1.0, 1.0);
	mul		___739_b ___750_tmp $const46 	%line{933} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:934
#         normal n = a * dot(a, b) / a[2] - b;
	dot		$tmp403 ___739_a ___739_b 	%line{934} %argrw{"wrr"}
	mul		$tmp404 ___739_a $tmp403 	%argrw{"wrr"}
	compref		$tmp405 ___739_a $const16 	%argrw{"wrr"}
	div		$tmp406 $tmp404 $tmp405 	%argrw{"wrr"}
	sub		___739_n $tmp406 ___739_b 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:936
#         if (n[2] < 0)
	compref		$tmp407 ___739_n $const16 	%line{936} %argrw{"wrr"}
	lt		$tmp408 $tmp407 $const12 	%argrw{"wrr"}
	if		$tmp408 594 594 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:938
#             n = normalize(normal(n[0], n[1], 0.0));
	compref		$tmp410 ___739_n $const12 	%line{938} %argrw{"wrr"}
	compref		$tmp411 ___739_n $const2 	%argrw{"wrr"}
	normal		$tmp409 $tmp410 $tmp411 $const7 	%argrw{"wrrr"}
	normalize	___739_n $tmp409 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:940
#         return n;
	assign		___750_X ___739_n 	%line{940} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1064
#                 X[2] *= normal_sign[0];
	compref		$tmp412 ___750_X $const16 	%line{1064} %argrw{"wrr"}
	compref		$tmp413 normal_sign $const12 	%argrw{"wrr"}
	mul		$tmp414 $tmp412 $tmp413 	%argrw{"wrr"}
	compassign	___750_X $const16 $tmp414 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1066
#                 out_normal += blending[0] * normal(X[2], X[1], X[0]);
	compref		$tmp415 blending $const12 	%line{1066} %argrw{"wrr"}
	compref		$tmp417 ___750_X $const16 	%argrw{"wrr"}
	compref		$tmp418 ___750_X $const2 	%argrw{"wrr"}
	compref		$tmp419 ___750_X $const12 	%argrw{"wrr"}
	normal		$tmp416 $tmp417 $tmp418 $tmp419 	%argrw{"wrrr"}
	mul		$tmp420 $tmp415 $tmp416 	%argrw{"wrr"}
	add		out_normal out_normal $tmp420 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1070
#                 if (in_enable_cms && max(in_x_axis_color) > 0.0 &&
	neq		$tmp421 in_enable_cms $const12 	%line{1070} %argrw{"wrr"}
	if		$tmp421 617 617 	%argrw{"r"}
	functioncall	$const24 614 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp423 in_x_axis_color $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp425 in_x_axis_color $const2 	%argrw{"wrr"}
	compref		$tmp426 in_x_axis_color $const16 	%argrw{"wrr"}
	max		$tmp424 $tmp425 $tmp426 	%argrw{"wrr"}
	max		$tmp422 $tmp423 $tmp424 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1070
#                 if (in_enable_cms && max(in_x_axis_color) > 0.0 &&
	gt		$tmp427 $tmp422 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1070} %argrw{"wrr"}
	neq		$tmp428 $tmp427 $const12 	%argrw{"wrr"}
	assign		$tmp421 $tmp428 	%argrw{"wr"}
	neq		$tmp429 $tmp421 $const12 	%argrw{"wrr"}
	if		$tmp429 628 628 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1071
#                         max(x_axis) > 0.0)
	functioncall	$const24 625 	%line{1071} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp431 ___749_x_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp433 ___749_x_axis $const2 	%argrw{"wrr"}
	compref		$tmp434 ___749_x_axis $const16 	%argrw{"wrr"}
	max		$tmp432 $tmp433 $tmp434 	%argrw{"wrr"}
	max		$tmp430 $tmp431 $tmp432 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1071
#                         max(x_axis) > 0.0)
	gt		$tmp435 $tmp430 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1071} %argrw{"wrr"}
	neq		$tmp436 $tmp435 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1070
#                 if (in_enable_cms && max(in_x_axis_color) > 0.0 &&
	assign		$tmp429 $tmp436 	%line{1070} %argrw{"wr"}
	if		$tmp429 2016 2016 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1073
#                     x_axis = apply_color_management(
	functioncall	$const47 2016 	%line{1073} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:376
#     if (eotf == "Raw")
	eq		$tmp437 in_x_tex_eotf $const48 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{376} %argrw{"wrr"}
	if		$tmp437 633 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:378
#         scene_linear_cms = input;
	assign		___687_scene_linear_cms ___749_x_axis 	%line{378} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:380
#     else if (eotf == "sRGB")
	eq		$tmp438 in_x_tex_eotf $const49 	%line{380} %argrw{"wrr"}
	if		$tmp438 673 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:382
#         scene_linear_cms = sRGB_EOTF(input);
	functioncall	$const50 673 	%line{382} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp440 ___749_x_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 648 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp441 $tmp440 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp441 643 647 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp442 $tmp440 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp443 $tmp442 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp443 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp444 $tmp440 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp444 646 647 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp440 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp439 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp446 ___749_x_axis $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 660 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp447 $tmp446 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp447 655 659 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp448 $tmp446 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp449 $tmp448 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp449 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp450 $tmp446 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp450 658 659 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp446 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp445 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp452 ___749_x_axis $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 672 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp453 $tmp452 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp453 667 671 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp454 $tmp452 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp455 $tmp454 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp455 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp456 $tmp452 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp456 670 671 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp452 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp451 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___687_scene_linear_cms $tmp439 $tmp445 $tmp451 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:384
#     else if (eotf == "Rec.709")
	eq		$tmp457 in_x_tex_eotf $const56 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{384} %argrw{"wrr"}
	if		$tmp457 719 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:386
#         scene_linear_cms = Rec709_EOTF(input);
	functioncall	$const57 719 	%line{386} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:154
#         Rec709_EOTF(value[0]),
	compref		$tmp459 ___749_x_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{154} %argrw{"wrr"}
	functioncall	$const57 690 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp460 $tmp459 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp460 684 689 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp461 $tmp459 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp462 $tmp461 $const60 	%argrw{"wrr"}
	div		$tmp463 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp462 $tmp463 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp464 $tmp459 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp464 688 689 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp465 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp465 $tmp459 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp458 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:155
#         Rec709_EOTF(value[1]),
	compref		$tmp467 ___749_x_axis $const2 	%line{155} %argrw{"wrr"}
	functioncall	$const57 704 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp468 $tmp467 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp468 698 703 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp469 $tmp467 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp470 $tmp469 $const60 	%argrw{"wrr"}
	div		$tmp471 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp470 $tmp471 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp472 $tmp467 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp472 702 703 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp473 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp473 $tmp467 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp466 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:156
#         Rec709_EOTF(value[2]));
	compref		$tmp475 ___749_x_axis $const16 	%line{156} %argrw{"wrr"}
	functioncall	$const57 718 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp476 $tmp475 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp476 712 717 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp477 $tmp475 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp478 $tmp477 $const60 	%argrw{"wrr"}
	div		$tmp479 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp478 $tmp479 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp480 $tmp475 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp480 716 717 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp481 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp481 $tmp475 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp474 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:153
#     return color(
	color		___687_scene_linear_cms $tmp458 $tmp466 $tmp474 	%line{153} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:388
#     else if (eotf == "Gamma 2.2")
	eq		$tmp482 in_x_tex_eotf $const63 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{388} %argrw{"wrr"}
	if		$tmp482 747 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:390
#         scene_linear_cms = gamma_CCTF(input, 2.2);
	functioncall	$const65 747 	%line{390} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp484 ___749_x_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 730 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp485 $tmp484 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp485 728 730 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp483 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp483 $tmp484 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp487 ___749_x_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 738 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp488 $tmp487 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp488 736 738 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp486 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp486 $tmp487 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp490 ___749_x_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 746 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp491 $tmp490 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp491 744 746 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp489 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp489 $tmp490 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp483 $tmp486 $tmp489 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:392
#     else if (eotf == "Gamma 2.4")
	eq		$tmp492 in_x_tex_eotf $const66 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{392} %argrw{"wrr"}
	if		$tmp492 775 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:394
#         scene_linear_cms = gamma_CCTF(input, 2.4);
	functioncall	$const65 775 	%line{394} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp494 ___749_x_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 758 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp495 $tmp494 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp495 756 758 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp493 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp493 $tmp494 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp497 ___749_x_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 766 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp498 $tmp497 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp498 764 766 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp496 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp496 $tmp497 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp500 ___749_x_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 774 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp501 $tmp500 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp501 772 774 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp499 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp499 $tmp500 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp493 $tmp496 $tmp499 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:396
#     else if (eotf == "Gamma 2.6 (DCI)")
	eq		$tmp502 in_x_tex_eotf $const67 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{396} %argrw{"wrr"}
	if		$tmp502 803 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:398
#         scene_linear_cms = gamma_CCTF(input, DCIP3_GAMMA);
	functioncall	$const65 803 	%line{398} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp504 ___749_x_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 786 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp505 $tmp504 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp505 784 786 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp503 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp503 $tmp504 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp507 ___749_x_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 794 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp508 $tmp507 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp508 792 794 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp506 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp506 $tmp507 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp510 ___749_x_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 802 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp511 $tmp510 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp511 800 802 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp509 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp509 $tmp510 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp503 $tmp506 $tmp509 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:400
#     else if (eotf == "Rec.1886")
	eq		$tmp512 in_x_tex_eotf $const69 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{400} %argrw{"wrr"}
	if		$tmp512 828 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:402
#         scene_linear_cms = Rec1886_EOTF(input);
	functioncall	$const70 828 	%line{402} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp514 ___749_x_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 813 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp515 $tmp514 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp515 811 812 	%argrw{"r"}
	pow		$tmp513 $tmp514 $const54 	%argrw{"wrr"}
	assign		$tmp513 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp517 ___749_x_axis $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 820 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp518 $tmp517 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp518 818 819 	%argrw{"r"}
	pow		$tmp516 $tmp517 $const54 	%argrw{"wrr"}
	assign		$tmp516 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp520 ___749_x_axis $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 827 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp521 $tmp520 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp521 825 826 	%argrw{"r"}
	pow		$tmp519 $tmp520 $const54 	%argrw{"wrr"}
	assign		$tmp519 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___687_scene_linear_cms $tmp513 $tmp516 $tmp519 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:404
#     else if (eotf == "Rec.2020")
	eq		$tmp522 in_x_tex_eotf $const71 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{404} %argrw{"wrr"}
	if		$tmp522 893 895 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:406
#         scene_linear_cms = Rec2020_EOTF(input);
	functioncall	$const72 893 	%line{406} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:266
#     return Rec2020_EOTF(value, 12);
	functioncall	$const72 893 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{266} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:251
#         Rec2020_EOTF(value[0], bitdepth),
	compref		$tmp524 ___749_x_axis $const12 	%line{251} %argrw{"wrr"}
	functioncall	$const72 852 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp525 $tmp524 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp525 850 851 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp526 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp526 840 842 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp527 $tmp524 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp527 845 850 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp524 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp528 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp529 $tmp524 $tmp528 	%argrw{"wrr"}
	div		$tmp530 $tmp529 ___529_alpha 	%argrw{"wrr"}
	div		$tmp531 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp530 $tmp531 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp523 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:252
#         Rec2020_EOTF(value[1], bitdepth),
	compref		$tmp533 ___749_x_axis $const2 	%line{252} %argrw{"wrr"}
	functioncall	$const72 872 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp534 $tmp533 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp534 870 871 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp535 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp535 860 862 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp536 $tmp533 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp536 865 870 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp533 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp537 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp538 $tmp533 $tmp537 	%argrw{"wrr"}
	div		$tmp539 $tmp538 ___529_alpha 	%argrw{"wrr"}
	div		$tmp540 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp539 $tmp540 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp532 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:253
#         Rec2020_EOTF(value[2], bitdepth));
	compref		$tmp542 ___749_x_axis $const16 	%line{253} %argrw{"wrr"}
	functioncall	$const72 892 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp543 $tmp542 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp543 890 891 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp544 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp544 880 882 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp545 $tmp542 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp545 885 890 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp542 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp546 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp547 $tmp542 $tmp546 	%argrw{"wrr"}
	div		$tmp548 $tmp547 ___529_alpha 	%argrw{"wrr"}
	div		$tmp549 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp548 $tmp549 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp541 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:250
#     return color(
	color		___687_scene_linear_cms $tmp523 $tmp532 $tmp541 	%line{250} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:416
#         return color(0);
	assign		___749_x_axis $const39 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{416} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:424
#     if (rgb_primaries != "Raw" &&
	neq		$tmp550 in_x_tex_rgb_primaries $const48 	%line{424} %argrw{"wrr"}
	neq		$tmp551 $tmp550 $const12 	%argrw{"wrr"}
	if		$tmp551 901 901 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:425
#         rgb_primaries != workingspace_rgb_primaries)
	neq		$tmp552 in_x_tex_rgb_primaries in_workingspace_rgb_primaries 	%line{425} %argrw{"wrr"}
	neq		$tmp553 $tmp552 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:424
#     if (rgb_primaries != "Raw" &&
	assign		$tmp551 $tmp553 	%line{424} %argrw{"wr"}
	if		$tmp551 2015 2015 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:427
#         scene_linear_cms = transform_colorspace_to_workingspace(
	functioncall	$const78 2015 	%line{427} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp554 in_workingspace_rgb_primaries $const79 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{510} %argrw{"wrr"}
	neq		$tmp555 $tmp554 $const12 	%argrw{"wrr"}
	if		$tmp555 906 909 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:511
#         working_space == "sRGB/Rec.709")
	eq		$tmp556 in_workingspace_rgb_primaries $const80 	%line{511} %argrw{"wrr"}
	neq		$tmp557 $tmp556 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp555 $tmp557 	%line{510} %argrw{"wr"}
	if		$tmp555 1110 2014 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:513
#         C = transform_color_space_to_Rec709(input_color, color_space);
	functioncall	$const81 1110 	%line{513} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:47
#     vector v_color = vector(input_color);
	assign		___560_v_color ___687_scene_linear_cms 	%line{47} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:49
#     if (color_space == "sRGB")
	eq		$tmp558 in_x_tex_rgb_primaries $const49 	%line{49} %argrw{"wrr"}
	if		$tmp558 952 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:51
#         transformed_color = sRGB_EOTF(input_color);
	functioncall	$const50 952 	%line{51} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp560 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 927 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp561 $tmp560 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp561 922 926 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp562 $tmp560 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp563 $tmp562 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp563 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp564 $tmp560 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp564 925 926 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp560 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp559 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp566 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 939 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp567 $tmp566 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp567 934 938 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp568 $tmp566 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp569 $tmp568 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp569 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp570 $tmp566 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp570 937 938 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp566 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp565 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp572 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 951 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp573 $tmp572 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp573 946 950 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp574 $tmp572 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp575 $tmp574 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp575 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp576 $tmp572 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp576 949 950 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp572 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp571 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___560_transformed_color $tmp559 $tmp565 $tmp571 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp577 in_x_tex_rgb_primaries $const79 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{53} %argrw{"wrr"}
	neq		$tmp578 $tmp577 $const12 	%argrw{"wrr"}
	if		$tmp578 955 958 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:54
#              color_space == "sRGB/Rec.709")
	eq		$tmp579 in_x_tex_rgb_primaries $const80 	%line{54} %argrw{"wrr"}
	neq		$tmp580 $tmp579 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp578 $tmp580 	%line{53} %argrw{"wr"}
	if		$tmp578 960 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:56
#         transformed_color = input_color;
	assign		___560_transformed_color ___687_scene_linear_cms 	%line{56} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp581 in_x_tex_rgb_primaries $const82 	%line{58} %argrw{"wrr"}
	neq		$tmp582 $tmp581 $const12 	%argrw{"wrr"}
	if		$tmp582 963 966 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:59
#              color_space == "Rec.2020")
	eq		$tmp583 in_x_tex_rgb_primaries $const71 	%line{59} %argrw{"wrr"}
	neq		$tmp584 $tmp583 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp582 $tmp584 	%line{58} %argrw{"wr"}
	if		$tmp582 971 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:62
#             dot(vector(REC2020_TO_REC709_X), v_color),
	dot		$tmp585 $const83 ___560_v_color 	%line{62} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:63
#             dot(vector(REC2020_TO_REC709_Y), v_color),
	dot		$tmp587 $const84 ___560_v_color 	%line{63} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:64
#             dot(vector(REC2020_TO_REC709_Z), v_color));
	dot		$tmp589 $const85 ___560_v_color 	%line{64} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:61
#         transformed_color = color(
	color		___560_transformed_color $tmp585 $tmp587 $tmp589 	%line{61} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp591 in_x_tex_rgb_primaries $const86 	%line{66} %argrw{"wrr"}
	neq		$tmp592 $tmp591 $const12 	%argrw{"wrr"}
	if		$tmp592 974 977 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:67
#              color_space == "DCI-P3")
	eq		$tmp593 in_x_tex_rgb_primaries $const87 	%line{67} %argrw{"wrr"}
	neq		$tmp594 $tmp593 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp592 $tmp594 	%line{66} %argrw{"wr"}
	if		$tmp592 982 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:70
#             dot(vector(DCIP3_TO_REC709_X), v_color),
	dot		$tmp595 $const88 ___560_v_color 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:71
#             dot(vector(DCIP3_TO_REC709_Y), v_color),
	dot		$tmp597 $const89 ___560_v_color 	%line{71} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:72
#             dot(vector(DCIP3_TO_REC709_Z), v_color));
	dot		$tmp599 $const90 ___560_v_color 	%line{72} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:69
#         transformed_color = color(
	color		___560_transformed_color $tmp595 $tmp597 $tmp599 	%line{69} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:74
#     else if (color_space == "camera Rec 709")
	eq		$tmp601 in_x_tex_rgb_primaries $const91 	%line{74} %argrw{"wrr"}
	if		$tmp601 1007 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:76
#         transformed_color = Rec1886_EOTF(input_color);
	functioncall	$const70 1007 	%line{76} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp603 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 992 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp604 $tmp603 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp604 990 991 	%argrw{"r"}
	pow		$tmp602 $tmp603 $const54 	%argrw{"wrr"}
	assign		$tmp602 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp606 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 999 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp607 $tmp606 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp607 997 998 	%argrw{"r"}
	pow		$tmp605 $tmp606 $const54 	%argrw{"wrr"}
	assign		$tmp605 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp609 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 1006 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp610 $tmp609 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp610 1004 1005 	%argrw{"r"}
	pow		$tmp608 $tmp609 $const54 	%argrw{"wrr"}
	assign		$tmp608 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___560_transformed_color $tmp602 $tmp605 $tmp608 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:78
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp611 in_x_tex_rgb_primaries $const92 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{78} %argrw{"wrr"}
	if		$tmp611 1035 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:80
#         transformed_color = gamma_CCTF(input_color, 1.8);
	functioncall	$const65 1035 	%line{80} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp613 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1018 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp614 $tmp613 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp614 1016 1018 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp612 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp612 $tmp613 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp616 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1026 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp617 $tmp616 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp617 1024 1026 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp615 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp615 $tmp616 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp619 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1034 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp620 $tmp619 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp620 1032 1034 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp618 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp618 $tmp619 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp612 $tmp615 $tmp618 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:82
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp621 in_x_tex_rgb_primaries $const94 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{82} %argrw{"wrr"}
	if		$tmp621 1063 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:84
#         transformed_color = gamma_CCTF(input_color, 2.2);
	functioncall	$const65 1063 	%line{84} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp623 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1046 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp624 $tmp623 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp624 1044 1046 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp622 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp622 $tmp623 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp626 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1054 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp627 $tmp626 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp627 1052 1054 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp625 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp625 $tmp626 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp629 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1062 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp630 $tmp629 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp630 1060 1062 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp628 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp628 $tmp629 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp622 $tmp625 $tmp628 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:86
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp631 in_x_tex_rgb_primaries $const95 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{86} %argrw{"wrr"}
	if		$tmp631 1091 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:88
#         transformed_color = gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 1091 	%line{88} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp633 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1074 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp634 $tmp633 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp634 1072 1074 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp632 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp632 $tmp633 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp636 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1082 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp637 $tmp636 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp637 1080 1082 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp635 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp635 $tmp636 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp639 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1090 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp640 $tmp639 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp640 1088 1090 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp638 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp638 $tmp639 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp632 $tmp635 $tmp638 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:90
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp641 in_x_tex_rgb_primaries $const96 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{90} %argrw{"wrr"}
	neq		$tmp642 $tmp641 $const12 	%argrw{"wrr"}
	if		$tmp642 1094 1097 	%argrw{"r"}
	eq		$tmp643 in_x_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp644 $tmp643 $const12 	%argrw{"wrr"}
	assign		$tmp642 $tmp644 	%argrw{"wr"}
	if		$tmp642 1102 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:93
#             dot(vector(ACES_TO_REC709_X), v_color),
	dot		$tmp645 $const98 ___560_v_color 	%line{93} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:94
#             dot(vector(ACES_TO_REC709_Y), v_color),
	dot		$tmp647 $const99 ___560_v_color 	%line{94} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:95
#             dot(vector(ACES_TO_REC709_Z), v_color));
	dot		$tmp649 $const100 ___560_v_color 	%line{95} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:92
#         transformed_color = color(
	color		___560_transformed_color $tmp645 $tmp647 $tmp649 	%line{92} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:97
#     else if (color_space == "ACEScg")
	eq		$tmp651 in_x_tex_rgb_primaries $const101 	%line{97} %argrw{"wrr"}
	if		$tmp651 1108 1109 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:100
#             dot(vector(ACESCG_TO_REC709_X), v_color),
	dot		$tmp652 $const102 ___560_v_color 	%line{100} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:101
#             dot(vector(ACESCG_TO_REC709_Y), v_color),
	dot		$tmp654 $const103 ___560_v_color 	%line{101} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:102
#             dot(vector(ACESCG_TO_REC709_Z), v_color));
	dot		$tmp656 $const104 ___560_v_color 	%line{102} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:99
#         transformed_color = color(
	color		___560_transformed_color $tmp652 $tmp654 $tmp656 	%line{99} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:106
#         transformed_color = color(0);
	assign		___560_transformed_color $const39 	%line{106} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:108
#     return transformed_color;
	assign		___620_C ___560_transformed_color 	%line{108} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	eq		$tmp658 in_workingspace_rgb_primaries $const82 	%line{515} %argrw{"wrr"}
	neq		$tmp659 $tmp658 $const12 	%argrw{"wrr"}
	if		$tmp659 1113 1116 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:516
#              working_space == "Rec.2020")
	eq		$tmp660 in_workingspace_rgb_primaries $const71 	%line{516} %argrw{"wrr"}
	neq		$tmp661 $tmp660 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	assign		$tmp659 $tmp661 	%line{515} %argrw{"wr"}
	if		$tmp659 1337 2014 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:518
#         C = transform_color_space_to_Rec2020(input_color, color_space);
	functioncall	$const105 1337 	%line{518} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:120
#     vector v_color = vector(input_color);
	assign		___572_v_color ___687_scene_linear_cms 	%line{120} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:122
#     if (color_space == "sRGB")
	eq		$tmp662 in_x_tex_rgb_primaries $const49 	%line{122} %argrw{"wrr"}
	if		$tmp662 1163 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:124
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 1159 	%line{124} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp664 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 1134 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp665 $tmp664 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp665 1129 1133 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp666 $tmp664 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp667 $tmp666 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp667 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp668 $tmp664 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp668 1132 1133 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp664 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp663 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp670 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 1146 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp671 $tmp670 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp671 1141 1145 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp672 $tmp670 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp673 $tmp672 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp673 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp674 $tmp670 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp674 1144 1145 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp670 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp669 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp676 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 1158 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp677 $tmp676 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp677 1153 1157 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp678 $tmp676 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp679 $tmp678 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp679 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp680 $tmp676 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp680 1156 1157 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp676 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp675 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___572_v_color $tmp663 $tmp669 $tmp675 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:127
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp681 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{127} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:128
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp683 $const107 ___572_v_color 	%line{128} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:129
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp685 $const108 ___572_v_color 	%line{129} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:126
#         transformed_color = color(
	color		___572_transformed_color $tmp681 $tmp683 $tmp685 	%line{126} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp687 in_x_tex_rgb_primaries $const79 	%line{131} %argrw{"wrr"}
	neq		$tmp688 $tmp687 $const12 	%argrw{"wrr"}
	if		$tmp688 1166 1169 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:132
#              color_space == "sRGB/Rec.709")
	eq		$tmp689 in_x_tex_rgb_primaries $const80 	%line{132} %argrw{"wrr"}
	neq		$tmp690 $tmp689 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp688 $tmp690 	%line{131} %argrw{"wr"}
	if		$tmp688 1174 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:135
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp691 $const106 ___572_v_color 	%line{135} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:136
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp693 $const107 ___572_v_color 	%line{136} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:137
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp695 $const108 ___572_v_color 	%line{137} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:134
#         transformed_color = color(
	color		___572_transformed_color $tmp691 $tmp693 $tmp695 	%line{134} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp697 in_x_tex_rgb_primaries $const82 	%line{139} %argrw{"wrr"}
	neq		$tmp698 $tmp697 $const12 	%argrw{"wrr"}
	if		$tmp698 1177 1180 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:140
#              color_space == "Rec.2020")
	eq		$tmp699 in_x_tex_rgb_primaries $const71 	%line{140} %argrw{"wrr"}
	neq		$tmp700 $tmp699 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp698 $tmp700 	%line{139} %argrw{"wr"}
	if		$tmp698 1182 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:142
#         transformed_color = input_color;
	assign		___572_transformed_color ___687_scene_linear_cms 	%line{142} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp701 in_x_tex_rgb_primaries $const86 	%line{144} %argrw{"wrr"}
	neq		$tmp702 $tmp701 $const12 	%argrw{"wrr"}
	if		$tmp702 1185 1188 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:145
#              color_space == "DCI-P3")
	eq		$tmp703 in_x_tex_rgb_primaries $const87 	%line{145} %argrw{"wrr"}
	neq		$tmp704 $tmp703 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp702 $tmp704 	%line{144} %argrw{"wr"}
	if		$tmp702 1193 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:148
#             dot(vector(DCIP3_TO_REC2020_X), v_color),
	dot		$tmp705 $const109 ___572_v_color 	%line{148} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:149
#             dot(vector(DCIP3_TO_REC2020_Y), v_color),
	dot		$tmp707 $const110 ___572_v_color 	%line{149} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:150
#             dot(vector(DCIP3_TO_REC2020_Z), v_color));
	dot		$tmp709 $const111 ___572_v_color 	%line{150} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:147
#         transformed_color = color(
	color		___572_transformed_color $tmp705 $tmp707 $tmp709 	%line{147} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:152
#     else if (color_space == "camera Rec 709")
	eq		$tmp711 in_x_tex_rgb_primaries $const91 	%line{152} %argrw{"wrr"}
	if		$tmp711 1222 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:154
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 1218 	%line{154} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp713 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 1203 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp714 $tmp713 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp714 1201 1202 	%argrw{"r"}
	pow		$tmp712 $tmp713 $const54 	%argrw{"wrr"}
	assign		$tmp712 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp716 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 1210 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp717 $tmp716 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp717 1208 1209 	%argrw{"r"}
	pow		$tmp715 $tmp716 $const54 	%argrw{"wrr"}
	assign		$tmp715 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp719 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 1217 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp720 $tmp719 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp720 1215 1216 	%argrw{"r"}
	pow		$tmp718 $tmp719 $const54 	%argrw{"wrr"}
	assign		$tmp718 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___572_v_color $tmp712 $tmp715 $tmp718 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:157
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp721 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{157} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:158
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp723 $const107 ___572_v_color 	%line{158} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:159
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp725 $const108 ___572_v_color 	%line{159} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:156
#         transformed_color = color(
	color		___572_transformed_color $tmp721 $tmp723 $tmp725 	%line{156} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:161
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp727 in_x_tex_rgb_primaries $const92 	%line{161} %argrw{"wrr"}
	if		$tmp727 1254 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:163
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 1250 	%line{163} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp729 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1233 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp730 $tmp729 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp730 1231 1233 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp728 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp728 $tmp729 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp732 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1241 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp733 $tmp732 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp733 1239 1241 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp731 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp731 $tmp732 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp735 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1249 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp736 $tmp735 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp736 1247 1249 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp734 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp734 $tmp735 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp728 $tmp731 $tmp734 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:166
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp737 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{166} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:167
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp739 $const107 ___572_v_color 	%line{167} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:168
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp741 $const108 ___572_v_color 	%line{168} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:165
#         transformed_color = color(
	color		___572_transformed_color $tmp737 $tmp739 $tmp741 	%line{165} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:170
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp743 in_x_tex_rgb_primaries $const94 	%line{170} %argrw{"wrr"}
	if		$tmp743 1286 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:172
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 1282 	%line{172} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp745 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1265 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp746 $tmp745 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp746 1263 1265 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp744 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp744 $tmp745 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp748 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1273 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp749 $tmp748 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp749 1271 1273 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp747 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp747 $tmp748 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp751 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1281 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp752 $tmp751 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp752 1279 1281 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp750 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp750 $tmp751 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp744 $tmp747 $tmp750 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:175
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp753 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{175} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:176
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp755 $const107 ___572_v_color 	%line{176} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:177
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp757 $const108 ___572_v_color 	%line{177} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:174
#         transformed_color = color(
	color		___572_transformed_color $tmp753 $tmp755 $tmp757 	%line{174} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:179
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp759 in_x_tex_rgb_primaries $const95 	%line{179} %argrw{"wrr"}
	if		$tmp759 1318 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:181
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 1314 	%line{181} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp761 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1297 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp762 $tmp761 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp762 1295 1297 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp760 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp760 $tmp761 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp764 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1305 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp765 $tmp764 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp765 1303 1305 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp763 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp763 $tmp764 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp767 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1313 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp768 $tmp767 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp768 1311 1313 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp766 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp766 $tmp767 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp760 $tmp763 $tmp766 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:184
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp769 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{184} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:185
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp771 $const107 ___572_v_color 	%line{185} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:186
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp773 $const108 ___572_v_color 	%line{186} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:183
#         transformed_color = color(
	color		___572_transformed_color $tmp769 $tmp771 $tmp773 	%line{183} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:188
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp775 in_x_tex_rgb_primaries $const96 	%line{188} %argrw{"wrr"}
	neq		$tmp776 $tmp775 $const12 	%argrw{"wrr"}
	if		$tmp776 1321 1324 	%argrw{"r"}
	eq		$tmp777 in_x_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp778 $tmp777 $const12 	%argrw{"wrr"}
	assign		$tmp776 $tmp778 	%argrw{"wr"}
	if		$tmp776 1329 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:191
#             dot(vector(ACES_TO_REC2020_X), v_color),
	dot		$tmp779 $const112 ___572_v_color 	%line{191} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:192
#             dot(vector(ACES_TO_REC2020_Y), v_color),
	dot		$tmp781 $const113 ___572_v_color 	%line{192} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:193
#             dot(vector(ACES_TO_REC2020_Z), v_color));
	dot		$tmp783 $const114 ___572_v_color 	%line{193} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:190
#         transformed_color = color(
	color		___572_transformed_color $tmp779 $tmp781 $tmp783 	%line{190} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:195
#     else if (color_space == "ACEScg")
	eq		$tmp785 in_x_tex_rgb_primaries $const101 	%line{195} %argrw{"wrr"}
	if		$tmp785 1335 1336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:198
#             dot(vector(ACESCG_TO_REC2020_X), v_color),
	dot		$tmp786 $const115 ___572_v_color 	%line{198} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:199
#             dot(vector(ACESCG_TO_REC2020_Y), v_color),
	dot		$tmp788 $const116 ___572_v_color 	%line{199} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:200
#             dot(vector(ACESCG_TO_REC2020_Z), v_color));
	dot		$tmp790 $const117 ___572_v_color 	%line{200} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:197
#         transformed_color = color(
	color		___572_transformed_color $tmp786 $tmp788 $tmp790 	%line{197} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:204
#         transformed_color = color(0);
	assign		___572_transformed_color $const39 	%line{204} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:206
#     return transformed_color;
	assign		___620_C ___572_transformed_color 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	eq		$tmp792 in_workingspace_rgb_primaries $const86 	%line{520} %argrw{"wrr"}
	neq		$tmp793 $tmp792 $const12 	%argrw{"wrr"}
	if		$tmp793 1340 1343 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:521
#              working_space == "DCI-P3")
	eq		$tmp794 in_workingspace_rgb_primaries $const87 	%line{521} %argrw{"wrr"}
	neq		$tmp795 $tmp794 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	assign		$tmp793 $tmp795 	%line{520} %argrw{"wr"}
	if		$tmp793 1564 2014 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:523
#         C = transform_color_space_to_DCIP3(input_color, color_space);
	functioncall	$const118 1564 	%line{523} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:218
#     vector v_color = vector(input_color);
	assign		___584_v_color ___687_scene_linear_cms 	%line{218} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:220
#     if (color_space == "sRGB")
	eq		$tmp796 in_x_tex_rgb_primaries $const49 	%line{220} %argrw{"wrr"}
	if		$tmp796 1390 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:222
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 1386 	%line{222} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp798 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 1361 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp799 $tmp798 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp799 1356 1360 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp800 $tmp798 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp801 $tmp800 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp801 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp802 $tmp798 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp802 1359 1360 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp798 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp797 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp804 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 1373 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp805 $tmp804 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp805 1368 1372 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp806 $tmp804 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp807 $tmp806 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp807 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp808 $tmp804 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp808 1371 1372 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp804 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp803 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp810 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 1385 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp811 $tmp810 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp811 1380 1384 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp812 $tmp810 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp813 $tmp812 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp813 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp814 $tmp810 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp814 1383 1384 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp810 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp809 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___584_v_color $tmp797 $tmp803 $tmp809 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:225
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp815 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{225} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:226
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp817 $const120 ___584_v_color 	%line{226} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:227
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp819 $const121 ___584_v_color 	%line{227} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:224
#         transformed_color = color(
	color		___584_transformed_color $tmp815 $tmp817 $tmp819 	%line{224} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp821 in_x_tex_rgb_primaries $const79 	%line{229} %argrw{"wrr"}
	neq		$tmp822 $tmp821 $const12 	%argrw{"wrr"}
	if		$tmp822 1393 1396 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:230
#              color_space == "sRGB/Rec.709")
	eq		$tmp823 in_x_tex_rgb_primaries $const80 	%line{230} %argrw{"wrr"}
	neq		$tmp824 $tmp823 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp822 $tmp824 	%line{229} %argrw{"wr"}
	if		$tmp822 1401 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:233
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp825 $const119 ___584_v_color 	%line{233} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:234
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp827 $const120 ___584_v_color 	%line{234} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:235
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp829 $const121 ___584_v_color 	%line{235} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:232
#         transformed_color = color(
	color		___584_transformed_color $tmp825 $tmp827 $tmp829 	%line{232} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp831 in_x_tex_rgb_primaries $const82 	%line{237} %argrw{"wrr"}
	neq		$tmp832 $tmp831 $const12 	%argrw{"wrr"}
	if		$tmp832 1404 1407 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:238
#              color_space == "Rec.2020")
	eq		$tmp833 in_x_tex_rgb_primaries $const71 	%line{238} %argrw{"wrr"}
	neq		$tmp834 $tmp833 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp832 $tmp834 	%line{237} %argrw{"wr"}
	if		$tmp832 1412 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:241
#             dot(vector(REC2020_TO_DCIP3_X), v_color),
	dot		$tmp835 $const122 ___584_v_color 	%line{241} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:242
#             dot(vector(REC2020_TO_DCIP3_Y), v_color),
	dot		$tmp837 $const123 ___584_v_color 	%line{242} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:243
#             dot(vector(REC2020_TO_DCIP3_Z), v_color));
	dot		$tmp839 $const124 ___584_v_color 	%line{243} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:240
#         transformed_color = color(
	color		___584_transformed_color $tmp835 $tmp837 $tmp839 	%line{240} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp841 in_x_tex_rgb_primaries $const86 	%line{245} %argrw{"wrr"}
	neq		$tmp842 $tmp841 $const12 	%argrw{"wrr"}
	if		$tmp842 1415 1418 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:246
#              color_space == "DCI-P3")
	eq		$tmp843 in_x_tex_rgb_primaries $const87 	%line{246} %argrw{"wrr"}
	neq		$tmp844 $tmp843 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp842 $tmp844 	%line{245} %argrw{"wr"}
	if		$tmp842 1420 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:248
#         transformed_color = input_color;
	assign		___584_transformed_color ___687_scene_linear_cms 	%line{248} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:250
#     else if (color_space == "camera Rec 709")
	eq		$tmp845 in_x_tex_rgb_primaries $const91 	%line{250} %argrw{"wrr"}
	if		$tmp845 1449 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:252
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 1445 	%line{252} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp847 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 1430 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp848 $tmp847 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp848 1428 1429 	%argrw{"r"}
	pow		$tmp846 $tmp847 $const54 	%argrw{"wrr"}
	assign		$tmp846 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp850 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 1437 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp851 $tmp850 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp851 1435 1436 	%argrw{"r"}
	pow		$tmp849 $tmp850 $const54 	%argrw{"wrr"}
	assign		$tmp849 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp853 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 1444 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp854 $tmp853 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp854 1442 1443 	%argrw{"r"}
	pow		$tmp852 $tmp853 $const54 	%argrw{"wrr"}
	assign		$tmp852 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___584_v_color $tmp846 $tmp849 $tmp852 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:255
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp855 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{255} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:256
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp857 $const120 ___584_v_color 	%line{256} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:257
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp859 $const121 ___584_v_color 	%line{257} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:254
#         transformed_color = color(
	color		___584_transformed_color $tmp855 $tmp857 $tmp859 	%line{254} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:259
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp861 in_x_tex_rgb_primaries $const92 	%line{259} %argrw{"wrr"}
	if		$tmp861 1481 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:261
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 1477 	%line{261} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp863 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1460 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp864 $tmp863 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp864 1458 1460 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp862 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp862 $tmp863 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp866 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1468 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp867 $tmp866 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp867 1466 1468 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp865 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp865 $tmp866 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp869 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1476 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp870 $tmp869 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp870 1474 1476 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp868 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp868 $tmp869 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp862 $tmp865 $tmp868 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:264
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp871 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{264} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:265
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp873 $const120 ___584_v_color 	%line{265} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:266
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp875 $const121 ___584_v_color 	%line{266} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:263
#         transformed_color = color(
	color		___584_transformed_color $tmp871 $tmp873 $tmp875 	%line{263} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:268
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp877 in_x_tex_rgb_primaries $const94 	%line{268} %argrw{"wrr"}
	if		$tmp877 1513 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:270
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 1509 	%line{270} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp879 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1492 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp880 $tmp879 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp880 1490 1492 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp878 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp878 $tmp879 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp882 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1500 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp883 $tmp882 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp883 1498 1500 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp881 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp881 $tmp882 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp885 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1508 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp886 $tmp885 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp886 1506 1508 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp884 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp884 $tmp885 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp878 $tmp881 $tmp884 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:273
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp887 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{273} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:274
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp889 $const120 ___584_v_color 	%line{274} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:275
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp891 $const121 ___584_v_color 	%line{275} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:272
#         transformed_color = color(
	color		___584_transformed_color $tmp887 $tmp889 $tmp891 	%line{272} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:277
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp893 in_x_tex_rgb_primaries $const95 	%line{277} %argrw{"wrr"}
	if		$tmp893 1545 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:279
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 1541 	%line{279} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp895 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1524 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp896 $tmp895 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp896 1522 1524 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp894 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp894 $tmp895 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp898 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1532 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp899 $tmp898 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp899 1530 1532 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp897 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp897 $tmp898 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp901 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1540 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp902 $tmp901 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp902 1538 1540 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp900 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp900 $tmp901 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp894 $tmp897 $tmp900 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:282
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp903 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{282} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:283
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp905 $const120 ___584_v_color 	%line{283} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:284
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp907 $const121 ___584_v_color 	%line{284} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:281
#         transformed_color = color(
	color		___584_transformed_color $tmp903 $tmp905 $tmp907 	%line{281} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:286
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp909 in_x_tex_rgb_primaries $const96 	%line{286} %argrw{"wrr"}
	neq		$tmp910 $tmp909 $const12 	%argrw{"wrr"}
	if		$tmp910 1548 1551 	%argrw{"r"}
	eq		$tmp911 in_x_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp912 $tmp911 $const12 	%argrw{"wrr"}
	assign		$tmp910 $tmp912 	%argrw{"wr"}
	if		$tmp910 1556 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:289
#             dot(vector(ACES_TO_DCIP3_X), v_color),
	dot		$tmp913 $const125 ___584_v_color 	%line{289} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:290
#             dot(vector(ACES_TO_DCIP3_Y), v_color),
	dot		$tmp915 $const126 ___584_v_color 	%line{290} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:291
#             dot(vector(ACES_TO_DCIP3_Z), v_color));
	dot		$tmp917 $const127 ___584_v_color 	%line{291} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:288
#         transformed_color = color(
	color		___584_transformed_color $tmp913 $tmp915 $tmp917 	%line{288} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:293
#     else if (color_space == "ACEScg")
	eq		$tmp919 in_x_tex_rgb_primaries $const101 	%line{293} %argrw{"wrr"}
	if		$tmp919 1562 1563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:296
#             dot(vector(ACESCG_TO_DCIP3_X), v_color),
	dot		$tmp920 $const128 ___584_v_color 	%line{296} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:297
#             dot(vector(ACESCG_TO_DCIP3_Y), v_color),
	dot		$tmp922 $const129 ___584_v_color 	%line{297} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:298
#             dot(vector(ACESCG_TO_DCIP3_Z), v_color));
	dot		$tmp924 $const130 ___584_v_color 	%line{298} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:295
#         transformed_color = color(
	color		___584_transformed_color $tmp920 $tmp922 $tmp924 	%line{295} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:302
#         transformed_color = color(0);
	assign		___584_transformed_color $const39 	%line{302} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:304
#     return transformed_color;
	assign		___620_C ___584_transformed_color 	%line{304} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:525
#     else if (working_space == "ACES2065-1" || working_space == "ACES")
	eq		$tmp926 in_workingspace_rgb_primaries $const96 	%line{525} %argrw{"wrr"}
	neq		$tmp927 $tmp926 $const12 	%argrw{"wrr"}
	if		$tmp927 1567 1570 	%argrw{"r"}
	eq		$tmp928 in_workingspace_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp929 $tmp928 $const12 	%argrw{"wrr"}
	assign		$tmp927 $tmp929 	%argrw{"wr"}
	if		$tmp927 1791 2014 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:527
#         C = transform_color_space_to_ACES(input_color, color_space);
	functioncall	$const131 1791 	%line{527} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:316
#     vector v_color = vector(input_color);
	assign		___596_v_color ___687_scene_linear_cms 	%line{316} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:318
#     if (color_space == "sRGB")
	eq		$tmp930 in_x_tex_rgb_primaries $const49 	%line{318} %argrw{"wrr"}
	if		$tmp930 1617 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:320
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 1613 	%line{320} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp932 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 1588 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp933 $tmp932 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp933 1583 1587 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp934 $tmp932 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp935 $tmp934 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp935 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp936 $tmp932 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp936 1586 1587 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp932 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp931 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp938 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 1600 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp939 $tmp938 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp939 1595 1599 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp940 $tmp938 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp941 $tmp940 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp941 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp942 $tmp938 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp942 1598 1599 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp938 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp937 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp944 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 1612 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp945 $tmp944 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp945 1607 1611 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp946 $tmp944 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp947 $tmp946 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp947 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp948 $tmp944 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp948 1610 1611 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp944 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp943 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___596_v_color $tmp931 $tmp937 $tmp943 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:323
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp949 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{323} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:324
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp951 $const133 ___596_v_color 	%line{324} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:325
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp953 $const134 ___596_v_color 	%line{325} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:322
#         transformed_color = color(
	color		___596_transformed_color $tmp949 $tmp951 $tmp953 	%line{322} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp955 in_x_tex_rgb_primaries $const79 	%line{327} %argrw{"wrr"}
	neq		$tmp956 $tmp955 $const12 	%argrw{"wrr"}
	if		$tmp956 1620 1623 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:328
#              color_space == "sRGB/Rec.709")
	eq		$tmp957 in_x_tex_rgb_primaries $const80 	%line{328} %argrw{"wrr"}
	neq		$tmp958 $tmp957 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp956 $tmp958 	%line{327} %argrw{"wr"}
	if		$tmp956 1628 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:331
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp959 $const132 ___596_v_color 	%line{331} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:332
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp961 $const133 ___596_v_color 	%line{332} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:333
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp963 $const134 ___596_v_color 	%line{333} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:330
#         transformed_color = color(
	color		___596_transformed_color $tmp959 $tmp961 $tmp963 	%line{330} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp965 in_x_tex_rgb_primaries $const82 	%line{335} %argrw{"wrr"}
	neq		$tmp966 $tmp965 $const12 	%argrw{"wrr"}
	if		$tmp966 1631 1634 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:336
#              color_space == "Rec.2020")
	eq		$tmp967 in_x_tex_rgb_primaries $const71 	%line{336} %argrw{"wrr"}
	neq		$tmp968 $tmp967 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp966 $tmp968 	%line{335} %argrw{"wr"}
	if		$tmp966 1639 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:339
#             dot(vector(REC2020_TO_ACES_X), v_color),
	dot		$tmp969 $const135 ___596_v_color 	%line{339} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:340
#             dot(vector(REC2020_TO_ACES_Y), v_color),
	dot		$tmp971 $const136 ___596_v_color 	%line{340} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:341
#             dot(vector(REC2020_TO_ACES_Z), v_color));
	dot		$tmp973 $const137 ___596_v_color 	%line{341} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:338
#         transformed_color = color(
	color		___596_transformed_color $tmp969 $tmp971 $tmp973 	%line{338} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp975 in_x_tex_rgb_primaries $const86 	%line{343} %argrw{"wrr"}
	neq		$tmp976 $tmp975 $const12 	%argrw{"wrr"}
	if		$tmp976 1642 1645 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:344
#              color_space == "DCI-P3")
	eq		$tmp977 in_x_tex_rgb_primaries $const87 	%line{344} %argrw{"wrr"}
	neq		$tmp978 $tmp977 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp976 $tmp978 	%line{343} %argrw{"wr"}
	if		$tmp976 1650 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:347
#             dot(vector(DCIP3_TO_ACES_X), v_color),
	dot		$tmp979 $const138 ___596_v_color 	%line{347} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:348
#             dot(vector(DCIP3_TO_ACES_Y), v_color),
	dot		$tmp981 $const139 ___596_v_color 	%line{348} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:349
#             dot(vector(DCIP3_TO_ACES_Z), v_color));
	dot		$tmp983 $const140 ___596_v_color 	%line{349} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:346
#         transformed_color = color(
	color		___596_transformed_color $tmp979 $tmp981 $tmp983 	%line{346} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:351
#     else if (color_space == "camera Rec 709")
	eq		$tmp985 in_x_tex_rgb_primaries $const91 	%line{351} %argrw{"wrr"}
	if		$tmp985 1679 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:353
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 1675 	%line{353} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp987 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 1660 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp988 $tmp987 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp988 1658 1659 	%argrw{"r"}
	pow		$tmp986 $tmp987 $const54 	%argrw{"wrr"}
	assign		$tmp986 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp990 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 1667 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp991 $tmp990 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp991 1665 1666 	%argrw{"r"}
	pow		$tmp989 $tmp990 $const54 	%argrw{"wrr"}
	assign		$tmp989 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp993 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 1674 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp994 $tmp993 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp994 1672 1673 	%argrw{"r"}
	pow		$tmp992 $tmp993 $const54 	%argrw{"wrr"}
	assign		$tmp992 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___596_v_color $tmp986 $tmp989 $tmp992 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:356
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp995 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{356} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:357
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp997 $const133 ___596_v_color 	%line{357} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:358
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp999 $const134 ___596_v_color 	%line{358} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:355
#         transformed_color = color(
	color		___596_transformed_color $tmp995 $tmp997 $tmp999 	%line{355} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:360
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp1001 in_x_tex_rgb_primaries $const92 	%line{360} %argrw{"wrr"}
	if		$tmp1001 1711 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:362
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 1707 	%line{362} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1003 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1690 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1004 $tmp1003 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1004 1688 1690 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1002 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1002 $tmp1003 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1006 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1698 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1007 $tmp1006 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1007 1696 1698 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1005 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1005 $tmp1006 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1009 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1706 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1010 $tmp1009 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1010 1704 1706 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1008 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1008 $tmp1009 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp1002 $tmp1005 $tmp1008 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:365
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1011 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{365} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:366
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1013 $const133 ___596_v_color 	%line{366} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:367
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1015 $const134 ___596_v_color 	%line{367} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:364
#         transformed_color = color(
	color		___596_transformed_color $tmp1011 $tmp1013 $tmp1015 	%line{364} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:369
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp1017 in_x_tex_rgb_primaries $const94 	%line{369} %argrw{"wrr"}
	if		$tmp1017 1743 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:371
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 1739 	%line{371} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1019 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1020 $tmp1019 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1020 1720 1722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1018 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1018 $tmp1019 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1022 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1730 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1023 $tmp1022 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1023 1728 1730 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1021 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1021 $tmp1022 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1025 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1738 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1026 $tmp1025 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1026 1736 1738 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1024 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1024 $tmp1025 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp1018 $tmp1021 $tmp1024 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:374
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1027 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{374} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:375
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1029 $const133 ___596_v_color 	%line{375} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:376
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1031 $const134 ___596_v_color 	%line{376} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:373
#         transformed_color = color(
	color		___596_transformed_color $tmp1027 $tmp1029 $tmp1031 	%line{373} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:378
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp1033 in_x_tex_rgb_primaries $const95 	%line{378} %argrw{"wrr"}
	if		$tmp1033 1775 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:380
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 1771 	%line{380} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1035 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1754 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1036 $tmp1035 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1036 1752 1754 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1034 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1034 $tmp1035 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1038 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1762 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1039 $tmp1038 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1039 1760 1762 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1037 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1037 $tmp1038 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1041 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1770 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1042 $tmp1041 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1042 1768 1770 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1040 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1040 $tmp1041 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp1034 $tmp1037 $tmp1040 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:383
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1043 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{383} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:384
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1045 $const133 ___596_v_color 	%line{384} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:385
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1047 $const134 ___596_v_color 	%line{385} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:382
#         transformed_color = color(
	color		___596_transformed_color $tmp1043 $tmp1045 $tmp1047 	%line{382} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:387
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp1049 in_x_tex_rgb_primaries $const96 	%line{387} %argrw{"wrr"}
	neq		$tmp1050 $tmp1049 $const12 	%argrw{"wrr"}
	if		$tmp1050 1778 1781 	%argrw{"r"}
	eq		$tmp1051 in_x_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp1052 $tmp1051 $const12 	%argrw{"wrr"}
	assign		$tmp1050 $tmp1052 	%argrw{"wr"}
	if		$tmp1050 1783 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:389
#         transformed_color = input_color;
	assign		___596_transformed_color ___687_scene_linear_cms 	%line{389} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:391
#     else if (color_space == "ACEScg")
	eq		$tmp1053 in_x_tex_rgb_primaries $const101 	%line{391} %argrw{"wrr"}
	if		$tmp1053 1789 1790 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:394
#             dot(vector(ACESCG_TO_ACES_X), v_color),
	dot		$tmp1054 $const141 ___596_v_color 	%line{394} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:395
#             dot(vector(ACESCG_TO_ACES_Y), v_color),
	dot		$tmp1056 $const142 ___596_v_color 	%line{395} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:396
#             dot(vector(ACESCG_TO_ACES_Z), v_color));
	dot		$tmp1058 $const143 ___596_v_color 	%line{396} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:393
#         transformed_color = color(
	color		___596_transformed_color $tmp1054 $tmp1056 $tmp1058 	%line{393} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:400
#         transformed_color = color(0);
	assign		___596_transformed_color $const39 	%line{400} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:402
#     return transformed_color;
	assign		___620_C ___596_transformed_color 	%line{402} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:529
#     else if (working_space == "ACEScg")
	eq		$tmp1060 in_workingspace_rgb_primaries $const101 	%line{529} %argrw{"wrr"}
	if		$tmp1060 2013 2014 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:531
#         C = transform_color_space_to_ACEScg(input_color, color_space);
	functioncall	$const144 2013 	%line{531} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:414
#     vector v_color = vector(input_color);
	assign		___608_v_color ___687_scene_linear_cms 	%line{414} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:416
#     if (color_space == "sRGB")
	eq		$tmp1061 in_x_tex_rgb_primaries $const49 	%line{416} %argrw{"wrr"}
	if		$tmp1061 1839 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:418
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 1835 	%line{418} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp1063 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 1810 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1064 $tmp1063 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1064 1805 1809 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1065 $tmp1063 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1066 $tmp1065 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1066 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1067 $tmp1063 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1067 1808 1809 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1063 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1062 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp1069 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 1822 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1070 $tmp1069 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1070 1817 1821 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1071 $tmp1069 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1072 $tmp1071 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1072 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1073 $tmp1069 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1073 1820 1821 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1069 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1068 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp1075 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 1834 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1076 $tmp1075 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1076 1829 1833 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1077 $tmp1075 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1078 $tmp1077 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1078 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1079 $tmp1075 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1079 1832 1833 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1075 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1074 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___608_v_color $tmp1062 $tmp1068 $tmp1074 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:421
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1080 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{421} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:422
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1082 $const146 ___608_v_color 	%line{422} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:423
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1084 $const147 ___608_v_color 	%line{423} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:420
#         transformed_color = color(
	color		___608_transformed_color $tmp1080 $tmp1082 $tmp1084 	%line{420} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp1086 in_x_tex_rgb_primaries $const79 	%line{425} %argrw{"wrr"}
	neq		$tmp1087 $tmp1086 $const12 	%argrw{"wrr"}
	if		$tmp1087 1842 1845 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:426
#              color_space == "sRGB/Rec.709")
	eq		$tmp1088 in_x_tex_rgb_primaries $const80 	%line{426} %argrw{"wrr"}
	neq		$tmp1089 $tmp1088 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp1087 $tmp1089 	%line{425} %argrw{"wr"}
	if		$tmp1087 1850 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:429
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1090 $const145 ___608_v_color 	%line{429} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:430
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1092 $const146 ___608_v_color 	%line{430} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:431
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1094 $const147 ___608_v_color 	%line{431} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:428
#         transformed_color = color(
	color		___608_transformed_color $tmp1090 $tmp1092 $tmp1094 	%line{428} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp1096 in_x_tex_rgb_primaries $const82 	%line{433} %argrw{"wrr"}
	neq		$tmp1097 $tmp1096 $const12 	%argrw{"wrr"}
	if		$tmp1097 1853 1856 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:434
#              color_space == "Rec.2020")
	eq		$tmp1098 in_x_tex_rgb_primaries $const71 	%line{434} %argrw{"wrr"}
	neq		$tmp1099 $tmp1098 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp1097 $tmp1099 	%line{433} %argrw{"wr"}
	if		$tmp1097 1861 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:437
#             dot(vector(REC2020_TO_ACESCG_X), v_color),
	dot		$tmp1100 $const148 ___608_v_color 	%line{437} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:438
#             dot(vector(REC2020_TO_ACESCG_Y), v_color),
	dot		$tmp1102 $const149 ___608_v_color 	%line{438} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:439
#             dot(vector(REC2020_TO_ACESCG_Z), v_color));
	dot		$tmp1104 $const150 ___608_v_color 	%line{439} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:436
#         transformed_color = color(
	color		___608_transformed_color $tmp1100 $tmp1102 $tmp1104 	%line{436} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp1106 in_x_tex_rgb_primaries $const86 	%line{441} %argrw{"wrr"}
	neq		$tmp1107 $tmp1106 $const12 	%argrw{"wrr"}
	if		$tmp1107 1864 1867 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:442
#              color_space == "DCI-P3")
	eq		$tmp1108 in_x_tex_rgb_primaries $const87 	%line{442} %argrw{"wrr"}
	neq		$tmp1109 $tmp1108 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp1107 $tmp1109 	%line{441} %argrw{"wr"}
	if		$tmp1107 1872 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:445
#             dot(vector(DCIP3_TO_ACESCG_X), v_color),
	dot		$tmp1110 $const151 ___608_v_color 	%line{445} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:446
#             dot(vector(DCIP3_TO_ACESCG_Y), v_color),
	dot		$tmp1112 $const152 ___608_v_color 	%line{446} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:447
#             dot(vector(DCIP3_TO_ACESCG_Z), v_color));
	dot		$tmp1114 $const153 ___608_v_color 	%line{447} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:444
#         transformed_color = color(
	color		___608_transformed_color $tmp1110 $tmp1112 $tmp1114 	%line{444} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:449
#     else if (color_space == "camera Rec 709")
	eq		$tmp1116 in_x_tex_rgb_primaries $const91 	%line{449} %argrw{"wrr"}
	if		$tmp1116 1901 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:451
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 1897 	%line{451} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp1118 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 1882 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1119 $tmp1118 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1119 1880 1881 	%argrw{"r"}
	pow		$tmp1117 $tmp1118 $const54 	%argrw{"wrr"}
	assign		$tmp1117 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp1121 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 1889 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1122 $tmp1121 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1122 1887 1888 	%argrw{"r"}
	pow		$tmp1120 $tmp1121 $const54 	%argrw{"wrr"}
	assign		$tmp1120 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp1124 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 1896 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1125 $tmp1124 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1125 1894 1895 	%argrw{"r"}
	pow		$tmp1123 $tmp1124 $const54 	%argrw{"wrr"}
	assign		$tmp1123 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___608_v_color $tmp1117 $tmp1120 $tmp1123 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:454
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1126 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{454} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:455
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1128 $const146 ___608_v_color 	%line{455} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:456
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1130 $const147 ___608_v_color 	%line{456} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:453
#         transformed_color = color(
	color		___608_transformed_color $tmp1126 $tmp1128 $tmp1130 	%line{453} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:458
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp1132 in_x_tex_rgb_primaries $const92 	%line{458} %argrw{"wrr"}
	if		$tmp1132 1933 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:460
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 1929 	%line{460} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1134 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1912 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1135 $tmp1134 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1135 1910 1912 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1133 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1133 $tmp1134 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1137 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1920 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1138 $tmp1137 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1138 1918 1920 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1136 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1136 $tmp1137 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1140 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1928 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1141 $tmp1140 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1141 1926 1928 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1139 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1139 $tmp1140 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp1133 $tmp1136 $tmp1139 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:463
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1142 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{463} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:464
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1144 $const146 ___608_v_color 	%line{464} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:465
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1146 $const147 ___608_v_color 	%line{465} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:462
#         transformed_color = color(
	color		___608_transformed_color $tmp1142 $tmp1144 $tmp1146 	%line{462} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:467
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp1148 in_x_tex_rgb_primaries $const94 	%line{467} %argrw{"wrr"}
	if		$tmp1148 1965 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:469
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 1961 	%line{469} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1150 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1944 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1151 $tmp1150 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1151 1942 1944 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1149 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1149 $tmp1150 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1153 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1952 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1154 $tmp1153 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1154 1950 1952 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1152 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1152 $tmp1153 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1156 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1960 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1157 $tmp1156 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1157 1958 1960 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1155 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1155 $tmp1156 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp1149 $tmp1152 $tmp1155 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:472
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1158 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{472} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:473
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1160 $const146 ___608_v_color 	%line{473} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:474
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1162 $const147 ___608_v_color 	%line{474} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:471
#         transformed_color = color(
	color		___608_transformed_color $tmp1158 $tmp1160 $tmp1162 	%line{471} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:476
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp1164 in_x_tex_rgb_primaries $const95 	%line{476} %argrw{"wrr"}
	if		$tmp1164 1997 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:478
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 1993 	%line{478} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1166 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 1976 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1167 $tmp1166 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1167 1974 1976 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1165 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1165 $tmp1166 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1169 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 1984 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1170 $tmp1169 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1170 1982 1984 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1168 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1168 $tmp1169 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1172 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 1992 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1173 $tmp1172 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1173 1990 1992 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1171 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1171 $tmp1172 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp1165 $tmp1168 $tmp1171 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:481
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1174 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{481} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:482
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1176 $const146 ___608_v_color 	%line{482} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:483
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1178 $const147 ___608_v_color 	%line{483} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:480
#         transformed_color = color(
	color		___608_transformed_color $tmp1174 $tmp1176 $tmp1178 	%line{480} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:485
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp1180 in_x_tex_rgb_primaries $const96 	%line{485} %argrw{"wrr"}
	neq		$tmp1181 $tmp1180 $const12 	%argrw{"wrr"}
	if		$tmp1181 2000 2003 	%argrw{"r"}
	eq		$tmp1182 in_x_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp1183 $tmp1182 $const12 	%argrw{"wrr"}
	assign		$tmp1181 $tmp1183 	%argrw{"wr"}
	if		$tmp1181 2008 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:488
#             dot(vector(ACES_TO_ACESCG_X), v_color),
	dot		$tmp1184 $const154 ___608_v_color 	%line{488} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:489
#             dot(vector(ACES_TO_ACESCG_Y), v_color),
	dot		$tmp1186 $const155 ___608_v_color 	%line{489} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:490
#             dot(vector(ACES_TO_ACESCG_Z), v_color));
	dot		$tmp1188 $const156 ___608_v_color 	%line{490} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:487
#         transformed_color = color(
	color		___608_transformed_color $tmp1184 $tmp1186 $tmp1188 	%line{487} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:492
#     else if (color_space == "ACEScg")
	eq		$tmp1190 in_x_tex_rgb_primaries $const101 	%line{492} %argrw{"wrr"}
	if		$tmp1190 2011 2012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:494
#         transformed_color = input_color;
	assign		___608_transformed_color ___687_scene_linear_cms 	%line{494} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:498
#         transformed_color = color(0);
	assign		___608_transformed_color $const39 	%line{498} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:500
#     return transformed_color;
	assign		___620_C ___608_transformed_color 	%line{500} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:535
#         C = color(0);
	assign		___620_C $const39 	%line{535} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:537
#     return C;
	assign		___687_scene_linear_cms ___620_C 	%line{537} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:432
#     return scene_linear_cms;
	assign		___749_x_axis ___687_scene_linear_cms 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{432} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1083
#                 out_color += blending[0] * in_x_axis_color * x_axis;
	compref		$tmp1191 blending $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1083} %argrw{"wrr"}
	mul		$tmp1192 $tmp1191 in_x_axis_color 	%argrw{"wrr"}
	mul		$tmp1193 $tmp1192 ___749_x_axis 	%argrw{"wrr"}
	add		out_color out_color $tmp1193 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1084
#                 out_alpha += blending[0] * x_alpha;
	compref		$tmp1194 blending $const12 	%line{1084} %argrw{"wrr"}
	mul		$tmp1195 $tmp1194 x_alpha 	%argrw{"wrr"}
	add		out_alpha out_alpha $tmp1195 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1090
#         out_color += blending[0] * in_x_axis_color;
	compref		$tmp1196 blending $const12 	%line{1090} %argrw{"wrr"}
	mul		$tmp1197 $tmp1196 in_x_axis_color 	%argrw{"wrr"}
	add		out_color out_color $tmp1197 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1091
#         out_alpha += blending[0];
	compref		$tmp1198 blending $const12 	%line{1091} %argrw{"wrr"}
	add		out_alpha out_alpha $tmp1198 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1094
#     exists = numchannels = 0;
	assign		numchannels $const12 	%line{1094} %argrw{"wr"}
	assign		exists numchannels 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1096
#     if (gettextureinfo(in_y_axis_filename, "exists", exists) && exists)
	gettextureinfo	$tmp1199 in_y_axis_filename $const21 exists 	%line{1096} %argrw{"wrrw"}
	neq		$tmp1200 $tmp1199 $const12 	%argrw{"wrr"}
	if		$tmp1200 2035 2035 	%argrw{"r"}
	neq		$tmp1201 exists $const12 	%argrw{"wrr"}
	assign		$tmp1200 $tmp1201 	%argrw{"wr"}
	if		$tmp1200 3649 3654 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1098
#         gettextureinfo(in_y_axis_filename, "channels", numchannels);
	gettextureinfo	$tmp1202 in_y_axis_filename $const22 numchannels 	%line{1098} %argrw{"wrrw"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1100
#         if (blending[1] > 0.0 &&
	compref		$tmp1203 blending $const2 	%line{1100} %argrw{"wrr"}
	gt		$tmp1204 $tmp1203 $const7 	%argrw{"wrr"}
	neq		$tmp1205 $tmp1204 $const12 	%argrw{"wrr"}
	if		$tmp1205 2055 2055 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1101
#            (numchannels > 3 || max(in_y_axis_color) > 0.0))
	gt		$tmp1206 numchannels $const23 	%line{1101} %argrw{"wrr"}
	neq		$tmp1207 $tmp1206 $const12 	%argrw{"wrr"}
	if		$tmp1207 2044 2053 	%argrw{"r"}
	functioncall	$const24 2050 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp1209 in_y_axis_color $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp1211 in_y_axis_color $const2 	%argrw{"wrr"}
	compref		$tmp1212 in_y_axis_color $const16 	%argrw{"wrr"}
	max		$tmp1210 $tmp1211 $tmp1212 	%argrw{"wrr"}
	max		$tmp1208 $tmp1209 $tmp1210 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1101
#            (numchannels > 3 || max(in_y_axis_color) > 0.0))
	gt		$tmp1213 $tmp1208 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1101} %argrw{"wrr"}
	neq		$tmp1214 $tmp1213 $const12 	%argrw{"wrr"}
	assign		$tmp1207 $tmp1214 	%argrw{"wr"}
	neq		$tmp1215 $tmp1207 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1100
#         if (blending[1] > 0.0 &&
	assign		$tmp1205 $tmp1215 	%line{1100} %argrw{"wr"}
	if		$tmp1205 3649 3649 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1103
#             set_wrap_mode(in_y_axis_swrap, in_y_axis_twrap, wrap_mode);
	functioncall	$const25 2097 	%line{1103} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	functioncall	$const26 2076 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{69} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp1217 in_y_axis_swrap $const12 	%line{34} %argrw{"wrr"}
	if		$tmp1217 2062 2076 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp1216 $const27 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp1218 in_y_axis_swrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp1218 2066 2076 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp1216 $const28 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp1219 in_y_axis_swrap $const16 	%line{42} %argrw{"wrr"}
	if		$tmp1219 2070 2076 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp1216 $const29 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp1220 in_y_axis_swrap $const23 	%line{46} %argrw{"wrr"}
	if		$tmp1220 2074 2076 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp1216 $const30 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp1216 $const31 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	aassign		wrap_mode $const12 $tmp1216 	%line{69} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	functioncall	$const26 2096 	%line{70} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp1222 in_y_axis_twrap $const12 	%line{34} %argrw{"wrr"}
	if		$tmp1222 2082 2096 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp1221 $const27 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp1223 in_y_axis_twrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp1223 2086 2096 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp1221 $const28 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp1224 in_y_axis_twrap $const16 	%line{42} %argrw{"wrr"}
	if		$tmp1224 2090 2096 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp1221 $const29 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp1225 in_y_axis_twrap $const23 	%line{46} %argrw{"wrr"}
	if		$tmp1225 2094 2096 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp1221 $const30 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp1221 $const31 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	aassign		wrap_mode $const2 $tmp1221 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1107
#                 Pp[0],
	compref		$tmp1226 Pp $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1107} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1108
#                 Pp[2],
	compref		$tmp1227 Pp $const16 	%line{1108} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1114
#                 wrap_mode[0],
	aref		$tmp1228 wrap_mode $const12 	%line{1114} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1115
#                 wrap_mode[1],
	aref		$tmp1229 wrap_mode $const2 	%line{1115} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1118
#                 (int) normal_sign[1],
	compref		$tmp1230 normal_sign $const2 	%line{1118} %argrw{"wrr"}
	assign		$tmp1231 $tmp1230 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1105
#             color y_axis = get_projection_color(
	functioncall	$const32 2175 	%line{1105} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:129
#     float st[2] = {s_coord, t_coord};
	aassign		___737_st $const12 $tmp1226 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{129} %argrw{"wrr"}
	aassign		___737_st $const2 $tmp1227 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:131
#     if (angle != 0.0)
	neq		$tmp1232 in_y_axis_rotation_angle $const7 	%line{131} %argrw{"wrr"}
	if		$tmp1232 2125 2125 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:133
#         rotate2d(st[0], st[1], angle, st[0], st[1]);
	aref		$tmp1233 ___737_st $const12 	%line{133} %argrw{"wrr"}
	aref		$tmp1234 ___737_st $const2 	%argrw{"wrr"}
	aref		$tmp1235 ___737_st $const12 	%argrw{"wrr"}
	aref		$tmp1236 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const33 2123 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:119
#     float angle_rad = radians(angle_in_degrees);
	functioncall	$const13 2116 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h"} %line{119} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp1237 $const14 $const15 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{88} %argrw{"wrr"}
	mul		___721_angle_rad in_y_axis_rotation_angle $tmp1237 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:121
#     sincos(angle_rad, s, c);
	sincos		___721_angle_rad ___721_s ___721_c 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h"} %line{121} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:122
#     rx = x * c - s * y;
	mul		$tmp1238 $tmp1233 ___721_c 	%line{122} %argrw{"wrr"}
	mul		$tmp1239 ___721_s $tmp1234 	%argrw{"wrr"}
	sub		$tmp1235 $tmp1238 $tmp1239 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:123
#     ry = x * s + c * y;
	mul		$tmp1240 $tmp1233 ___721_s 	%line{123} %argrw{"wrr"}
	mul		$tmp1241 ___721_c $tmp1234 	%argrw{"wrr"}
	add		$tmp1236 $tmp1240 $tmp1241 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:133
#         rotate2d(st[0], st[1], angle, st[0], st[1]);
	aassign		___737_st $const12 $tmp1235 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{133} %argrw{"wrr"}
	aassign		___737_st $const2 $tmp1236 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	if		in_y_axis_sflip 2133 2139 	%line{136} %argrw{"r"}
	aref		$tmp1244 ___737_st $const12 	%argrw{"wrr"}
	functioncall	$const35 2132 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp1246 $tmp1244 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %argrw{"wrr"}
	floor		$tmp1245 $tmp1246 	%argrw{"wr"}
	mul		$tmp1247 $const34 $tmp1245 	%argrw{"wrr"}
	sub		$tmp1243 $tmp1244 $tmp1247 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	sub		$tmp1242 $const3 $tmp1243 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %argrw{"wrr"}
	aref		$tmp1248 ___737_st $const12 	%argrw{"wrr"}
	functioncall	$const35 2139 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp1250 $tmp1248 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %argrw{"wrr"}
	floor		$tmp1249 $tmp1250 	%argrw{"wr"}
	mul		$tmp1251 $const34 $tmp1249 	%argrw{"wrr"}
	sub		$tmp1242 $tmp1248 $tmp1251 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	aassign		___737_st $const12 $tmp1242 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	if		in_y_axis_tflip 2148 2154 	%line{137} %argrw{"r"}
	aref		$tmp1254 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const35 2147 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp1256 $tmp1254 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp1255 $tmp1256 	%argrw{"wr"}
	mul		$tmp1257 $const34 $tmp1255 	%argrw{"wrr"}
	sub		$tmp1253 $tmp1254 $tmp1257 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	sub		$tmp1252 $const3 $tmp1253 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{137} %argrw{"wrr"}
	aref		$tmp1258 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const35 2154 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp1260 $tmp1258 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp1259 $tmp1260 	%argrw{"wr"}
	mul		$tmp1261 $const34 $tmp1259 	%argrw{"wrr"}
	sub		$tmp1252 $tmp1258 $tmp1261 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	aassign		___737_st $const2 $tmp1252 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{137} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:139
#     st[0] *= width;
	aref		$tmp1262 ___737_st $const12 	%line{139} %argrw{"wrr"}
	mul		$tmp1263 $tmp1262 in_y_axis_width 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp1263 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:140
#     st[1] *= height;
	aref		$tmp1264 ___737_st $const2 	%line{140} %argrw{"wrr"}
	mul		$tmp1265 $tmp1264 in_y_axis_height 	%argrw{"wrr"}
	aassign		___737_st $const2 $tmp1265 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:142
#     st[0] += x_offset;
	aref		$tmp1266 ___737_st $const12 	%line{142} %argrw{"wrr"}
	add		$tmp1267 $tmp1266 in_y_axis_horizontal_offset 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp1267 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:143
#     st[1] += y_offset;
	aref		$tmp1268 ___737_st $const2 	%line{143} %argrw{"wrr"}
	add		$tmp1269 $tmp1268 in_y_axis_vertical_offset 	%argrw{"wrr"}
	aassign		___737_st $const2 $tmp1269 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:145
#     st[0] *= backside;
	aref		$tmp1270 ___737_st $const12 	%line{145} %argrw{"wrr"}
	assign		$tmp1272 $tmp1231 	%argrw{"wr"}
	mul		$tmp1271 $tmp1270 $tmp1272 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp1271 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:149
#         st[0],
	aref		$tmp1273 ___737_st $const12 	%line{149} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:150
#         st[1],
	aref		$tmp1274 ___737_st $const2 	%line{150} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:147
#     return (color) texture(
	texture		___756_y_axis in_y_axis_filename $tmp1273 $tmp1274 $const36 $tmp1228 $const37 $tmp1229 $const38 $const39 $const40 $const3 $const41 y_alpha 	%line{147} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:155
#         "alpha", alpha);
	return	%line{155}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1121
#             if (in_blend_mode == "Tangent Normal")
	eq		$tmp1276 in_blend_mode $const42 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1121} %argrw{"wrr"}
	if		$tmp1276 2232 3649 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1123
#                 normal tmp = clamp(y_axis * 2.0 - 1.0, -1.0, 1.0);
	mul		$tmp1277 ___756_y_axis $const10 	%line{1123} %argrw{"wrr"}
	sub		$tmp1278 $tmp1277 $const3 	%argrw{"wrr"}
	assign		$tmp1279 $const43 	%argrw{"wr"}
	assign		$tmp1280 $const3 	%argrw{"wr"}
	functioncall	$const30 2184 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:144
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp1281 $tmp1278 $tmp1280 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{144} %argrw{"wrr"}
	max		___757_tmp $tmp1281 $tmp1279 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1125
#                 if (in_y_axis_flip_r) tmp[0] *= -1;
	if		in_y_axis_flip_r 2188 2188 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1125} %argrw{"r"}
	compref		$tmp1282 ___757_tmp $const12 	%argrw{"wrr"}
	mul		$tmp1283 $tmp1282 $const43 	%argrw{"wrr"}
	compassign	___757_tmp $const12 $tmp1283 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1126
#                 if (in_y_axis_flip_g) tmp[1] *= -1;
	if		in_y_axis_flip_g 2192 2192 	%line{1126} %argrw{"r"}
	compref		$tmp1284 ___757_tmp $const2 	%argrw{"wrr"}
	mul		$tmp1285 $tmp1284 $const43 	%argrw{"wrr"}
	compassign	___757_tmp $const2 $tmp1285 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1128
#                 if (in_y_axis_swap_rg)
	if		in_y_axis_swap_rg 2197 2197 	%line{1128} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1130
#                     float x = tmp[0];
	compref		___758_x ___757_tmp $const12 	%line{1130} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1131
#                     tmp[0] = tmp[1];
	compref		$tmp1286 ___757_tmp $const2 	%line{1131} %argrw{"wrr"}
	compassign	___757_tmp $const12 $tmp1286 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1132
#                     tmp[1] = x;
	compassign	___757_tmp $const2 ___758_x 	%line{1132} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1135
#                 tmp[0] *= normal_sign[1];
	compref		$tmp1287 ___757_tmp $const12 	%line{1135} %argrw{"wrr"}
	compref		$tmp1288 normal_sign $const2 	%argrw{"wrr"}
	mul		$tmp1289 $tmp1287 $tmp1288 	%argrw{"wrr"}
	compassign	___757_tmp $const12 $tmp1289 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1138
#                     normal(Nn[0], Nn[2], abs_normal[1]),
	compref		$tmp1291 Nn $const12 	%line{1138} %argrw{"wrr"}
	compref		$tmp1292 Nn $const16 	%argrw{"wrr"}
	compref		$tmp1293 abs_normal $const2 	%argrw{"wrr"}
	normal		$tmp1290 $tmp1291 $tmp1292 $tmp1293 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1137
#                 normal Y = rnm_blend(
	functioncall	$const44 2221 	%line{1137} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:932
#         normal a = A + normal(0.0, 0.0, 1.0);
	add		___739_a $tmp1290 $const45 	%line{932} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:933
#         normal b = B * normal(-1.0, -1.0, 1.0);
	mul		___739_b ___757_tmp $const46 	%line{933} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:934
#         normal n = a * dot(a, b) / a[2] - b;
	dot		$tmp1296 ___739_a ___739_b 	%line{934} %argrw{"wrr"}
	mul		$tmp1297 ___739_a $tmp1296 	%argrw{"wrr"}
	compref		$tmp1298 ___739_a $const16 	%argrw{"wrr"}
	div		$tmp1299 $tmp1297 $tmp1298 	%argrw{"wrr"}
	sub		___739_n $tmp1299 ___739_b 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:936
#         if (n[2] < 0)
	compref		$tmp1300 ___739_n $const16 	%line{936} %argrw{"wrr"}
	lt		$tmp1301 $tmp1300 $const12 	%argrw{"wrr"}
	if		$tmp1301 2220 2220 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:938
#             n = normalize(normal(n[0], n[1], 0.0));
	compref		$tmp1303 ___739_n $const12 	%line{938} %argrw{"wrr"}
	compref		$tmp1304 ___739_n $const2 	%argrw{"wrr"}
	normal		$tmp1302 $tmp1303 $tmp1304 $const7 	%argrw{"wrrr"}
	normalize	___739_n $tmp1302 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:940
#         return n;
	assign		___757_Y ___739_n 	%line{940} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1141
#                 Y[2] *= normal_sign[1];
	compref		$tmp1305 ___757_Y $const16 	%line{1141} %argrw{"wrr"}
	compref		$tmp1306 normal_sign $const2 	%argrw{"wrr"}
	mul		$tmp1307 $tmp1305 $tmp1306 	%argrw{"wrr"}
	compassign	___757_Y $const16 $tmp1307 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1143
#                 out_normal += blending[1] * normal(Y[0], Y[2], Y[1]);
	compref		$tmp1308 blending $const2 	%line{1143} %argrw{"wrr"}
	compref		$tmp1310 ___757_Y $const12 	%argrw{"wrr"}
	compref		$tmp1311 ___757_Y $const16 	%argrw{"wrr"}
	compref		$tmp1312 ___757_Y $const2 	%argrw{"wrr"}
	normal		$tmp1309 $tmp1310 $tmp1311 $tmp1312 	%argrw{"wrrr"}
	mul		$tmp1313 $tmp1308 $tmp1309 	%argrw{"wrr"}
	add		out_normal out_normal $tmp1313 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1147
#                 if (in_enable_cms && max(in_y_axis_color) > 0.0 &&
	neq		$tmp1314 in_enable_cms $const12 	%line{1147} %argrw{"wrr"}
	if		$tmp1314 2243 2243 	%argrw{"r"}
	functioncall	$const24 2240 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp1316 in_y_axis_color $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp1318 in_y_axis_color $const2 	%argrw{"wrr"}
	compref		$tmp1319 in_y_axis_color $const16 	%argrw{"wrr"}
	max		$tmp1317 $tmp1318 $tmp1319 	%argrw{"wrr"}
	max		$tmp1315 $tmp1316 $tmp1317 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1147
#                 if (in_enable_cms && max(in_y_axis_color) > 0.0 &&
	gt		$tmp1320 $tmp1315 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1147} %argrw{"wrr"}
	neq		$tmp1321 $tmp1320 $const12 	%argrw{"wrr"}
	assign		$tmp1314 $tmp1321 	%argrw{"wr"}
	neq		$tmp1322 $tmp1314 $const12 	%argrw{"wrr"}
	if		$tmp1322 2254 2254 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1148
#                     max(y_axis) > 0.0)
	functioncall	$const24 2251 	%line{1148} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp1324 ___756_y_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp1326 ___756_y_axis $const2 	%argrw{"wrr"}
	compref		$tmp1327 ___756_y_axis $const16 	%argrw{"wrr"}
	max		$tmp1325 $tmp1326 $tmp1327 	%argrw{"wrr"}
	max		$tmp1323 $tmp1324 $tmp1325 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1148
#                     max(y_axis) > 0.0)
	gt		$tmp1328 $tmp1323 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1148} %argrw{"wrr"}
	neq		$tmp1329 $tmp1328 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1147
#                 if (in_enable_cms && max(in_y_axis_color) > 0.0 &&
	assign		$tmp1322 $tmp1329 	%line{1147} %argrw{"wr"}
	if		$tmp1322 3642 3642 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1150
#                     y_axis = apply_color_management(
	functioncall	$const47 3642 	%line{1150} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:376
#     if (eotf == "Raw")
	eq		$tmp1330 in_y_tex_eotf $const48 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{376} %argrw{"wrr"}
	if		$tmp1330 2259 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:378
#         scene_linear_cms = input;
	assign		___687_scene_linear_cms ___756_y_axis 	%line{378} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:380
#     else if (eotf == "sRGB")
	eq		$tmp1331 in_y_tex_eotf $const49 	%line{380} %argrw{"wrr"}
	if		$tmp1331 2299 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:382
#         scene_linear_cms = sRGB_EOTF(input);
	functioncall	$const50 2299 	%line{382} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp1333 ___756_y_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 2274 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1334 $tmp1333 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1334 2269 2273 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1335 $tmp1333 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1336 $tmp1335 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1336 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1337 $tmp1333 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1337 2272 2273 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1333 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1332 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp1339 ___756_y_axis $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 2286 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1340 $tmp1339 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1340 2281 2285 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1341 $tmp1339 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1342 $tmp1341 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1342 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1343 $tmp1339 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1343 2284 2285 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1339 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1338 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp1345 ___756_y_axis $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 2298 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1346 $tmp1345 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1346 2293 2297 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1347 $tmp1345 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1348 $tmp1347 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1348 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1349 $tmp1345 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1349 2296 2297 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1345 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1344 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___687_scene_linear_cms $tmp1332 $tmp1338 $tmp1344 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:384
#     else if (eotf == "Rec.709")
	eq		$tmp1350 in_y_tex_eotf $const56 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{384} %argrw{"wrr"}
	if		$tmp1350 2345 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:386
#         scene_linear_cms = Rec709_EOTF(input);
	functioncall	$const57 2345 	%line{386} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:154
#         Rec709_EOTF(value[0]),
	compref		$tmp1352 ___756_y_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{154} %argrw{"wrr"}
	functioncall	$const57 2316 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp1353 $tmp1352 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp1353 2310 2315 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp1354 $tmp1352 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp1355 $tmp1354 $const60 	%argrw{"wrr"}
	div		$tmp1356 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp1355 $tmp1356 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp1357 $tmp1352 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp1357 2314 2315 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp1358 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp1358 $tmp1352 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp1351 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:155
#         Rec709_EOTF(value[1]),
	compref		$tmp1360 ___756_y_axis $const2 	%line{155} %argrw{"wrr"}
	functioncall	$const57 2330 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp1361 $tmp1360 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp1361 2324 2329 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp1362 $tmp1360 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp1363 $tmp1362 $const60 	%argrw{"wrr"}
	div		$tmp1364 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp1363 $tmp1364 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp1365 $tmp1360 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp1365 2328 2329 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp1366 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp1366 $tmp1360 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp1359 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:156
#         Rec709_EOTF(value[2]));
	compref		$tmp1368 ___756_y_axis $const16 	%line{156} %argrw{"wrr"}
	functioncall	$const57 2344 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp1369 $tmp1368 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp1369 2338 2343 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp1370 $tmp1368 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp1371 $tmp1370 $const60 	%argrw{"wrr"}
	div		$tmp1372 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp1371 $tmp1372 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp1373 $tmp1368 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp1373 2342 2343 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp1374 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp1374 $tmp1368 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp1367 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:153
#     return color(
	color		___687_scene_linear_cms $tmp1351 $tmp1359 $tmp1367 	%line{153} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:388
#     else if (eotf == "Gamma 2.2")
	eq		$tmp1375 in_y_tex_eotf $const63 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{388} %argrw{"wrr"}
	if		$tmp1375 2373 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:390
#         scene_linear_cms = gamma_CCTF(input, 2.2);
	functioncall	$const65 2373 	%line{390} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1377 ___756_y_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2356 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1378 $tmp1377 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1378 2354 2356 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1376 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1376 $tmp1377 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1380 ___756_y_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2364 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1381 $tmp1380 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1381 2362 2364 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1379 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1379 $tmp1380 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1383 ___756_y_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2372 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1384 $tmp1383 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1384 2370 2372 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1382 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1382 $tmp1383 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp1376 $tmp1379 $tmp1382 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:392
#     else if (eotf == "Gamma 2.4")
	eq		$tmp1385 in_y_tex_eotf $const66 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{392} %argrw{"wrr"}
	if		$tmp1385 2401 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:394
#         scene_linear_cms = gamma_CCTF(input, 2.4);
	functioncall	$const65 2401 	%line{394} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1387 ___756_y_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2384 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1388 $tmp1387 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1388 2382 2384 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1386 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1386 $tmp1387 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1390 ___756_y_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2392 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1391 $tmp1390 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1391 2390 2392 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1389 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1389 $tmp1390 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1393 ___756_y_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2400 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1394 $tmp1393 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1394 2398 2400 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1392 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1392 $tmp1393 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp1386 $tmp1389 $tmp1392 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:396
#     else if (eotf == "Gamma 2.6 (DCI)")
	eq		$tmp1395 in_y_tex_eotf $const67 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{396} %argrw{"wrr"}
	if		$tmp1395 2429 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:398
#         scene_linear_cms = gamma_CCTF(input, DCIP3_GAMMA);
	functioncall	$const65 2429 	%line{398} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1397 ___756_y_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2412 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1398 $tmp1397 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1398 2410 2412 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1396 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1396 $tmp1397 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1400 ___756_y_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2420 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1401 $tmp1400 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1401 2418 2420 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1399 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1399 $tmp1400 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1403 ___756_y_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2428 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1404 $tmp1403 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1404 2426 2428 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1402 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1402 $tmp1403 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp1396 $tmp1399 $tmp1402 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:400
#     else if (eotf == "Rec.1886")
	eq		$tmp1405 in_y_tex_eotf $const69 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{400} %argrw{"wrr"}
	if		$tmp1405 2454 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:402
#         scene_linear_cms = Rec1886_EOTF(input);
	functioncall	$const70 2454 	%line{402} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp1407 ___756_y_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 2439 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1408 $tmp1407 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1408 2437 2438 	%argrw{"r"}
	pow		$tmp1406 $tmp1407 $const54 	%argrw{"wrr"}
	assign		$tmp1406 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp1410 ___756_y_axis $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 2446 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1411 $tmp1410 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1411 2444 2445 	%argrw{"r"}
	pow		$tmp1409 $tmp1410 $const54 	%argrw{"wrr"}
	assign		$tmp1409 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp1413 ___756_y_axis $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 2453 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1414 $tmp1413 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1414 2451 2452 	%argrw{"r"}
	pow		$tmp1412 $tmp1413 $const54 	%argrw{"wrr"}
	assign		$tmp1412 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___687_scene_linear_cms $tmp1406 $tmp1409 $tmp1412 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:404
#     else if (eotf == "Rec.2020")
	eq		$tmp1415 in_y_tex_eotf $const71 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{404} %argrw{"wrr"}
	if		$tmp1415 2519 2521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:406
#         scene_linear_cms = Rec2020_EOTF(input);
	functioncall	$const72 2519 	%line{406} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:266
#     return Rec2020_EOTF(value, 12);
	functioncall	$const72 2519 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{266} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:251
#         Rec2020_EOTF(value[0], bitdepth),
	compref		$tmp1417 ___756_y_axis $const12 	%line{251} %argrw{"wrr"}
	functioncall	$const72 2478 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp1418 $tmp1417 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp1418 2476 2477 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp1419 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp1419 2466 2468 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp1420 $tmp1417 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp1420 2471 2476 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp1417 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp1421 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp1422 $tmp1417 $tmp1421 	%argrw{"wrr"}
	div		$tmp1423 $tmp1422 ___529_alpha 	%argrw{"wrr"}
	div		$tmp1424 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp1423 $tmp1424 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp1416 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:252
#         Rec2020_EOTF(value[1], bitdepth),
	compref		$tmp1426 ___756_y_axis $const2 	%line{252} %argrw{"wrr"}
	functioncall	$const72 2498 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp1427 $tmp1426 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp1427 2496 2497 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp1428 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp1428 2486 2488 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp1429 $tmp1426 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp1429 2491 2496 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp1426 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp1430 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp1431 $tmp1426 $tmp1430 	%argrw{"wrr"}
	div		$tmp1432 $tmp1431 ___529_alpha 	%argrw{"wrr"}
	div		$tmp1433 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp1432 $tmp1433 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp1425 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:253
#         Rec2020_EOTF(value[2], bitdepth));
	compref		$tmp1435 ___756_y_axis $const16 	%line{253} %argrw{"wrr"}
	functioncall	$const72 2518 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp1436 $tmp1435 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp1436 2516 2517 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp1437 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp1437 2506 2508 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp1438 $tmp1435 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp1438 2511 2516 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp1435 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp1439 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp1440 $tmp1435 $tmp1439 	%argrw{"wrr"}
	div		$tmp1441 $tmp1440 ___529_alpha 	%argrw{"wrr"}
	div		$tmp1442 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp1441 $tmp1442 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp1434 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:250
#     return color(
	color		___687_scene_linear_cms $tmp1416 $tmp1425 $tmp1434 	%line{250} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:416
#         return color(0);
	assign		___756_y_axis $const39 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{416} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:424
#     if (rgb_primaries != "Raw" &&
	neq		$tmp1443 in_y_tex_rgb_primaries $const48 	%line{424} %argrw{"wrr"}
	neq		$tmp1444 $tmp1443 $const12 	%argrw{"wrr"}
	if		$tmp1444 2527 2527 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:425
#         rgb_primaries != workingspace_rgb_primaries)
	neq		$tmp1445 in_y_tex_rgb_primaries in_workingspace_rgb_primaries 	%line{425} %argrw{"wrr"}
	neq		$tmp1446 $tmp1445 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:424
#     if (rgb_primaries != "Raw" &&
	assign		$tmp1444 $tmp1446 	%line{424} %argrw{"wr"}
	if		$tmp1444 3641 3641 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:427
#         scene_linear_cms = transform_colorspace_to_workingspace(
	functioncall	$const78 3641 	%line{427} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp1447 in_workingspace_rgb_primaries $const79 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{510} %argrw{"wrr"}
	neq		$tmp1448 $tmp1447 $const12 	%argrw{"wrr"}
	if		$tmp1448 2532 2535 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:511
#         working_space == "sRGB/Rec.709")
	eq		$tmp1449 in_workingspace_rgb_primaries $const80 	%line{511} %argrw{"wrr"}
	neq		$tmp1450 $tmp1449 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp1448 $tmp1450 	%line{510} %argrw{"wr"}
	if		$tmp1448 2736 3640 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:513
#         C = transform_color_space_to_Rec709(input_color, color_space);
	functioncall	$const81 2736 	%line{513} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:47
#     vector v_color = vector(input_color);
	assign		___560_v_color ___687_scene_linear_cms 	%line{47} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:49
#     if (color_space == "sRGB")
	eq		$tmp1451 in_y_tex_rgb_primaries $const49 	%line{49} %argrw{"wrr"}
	if		$tmp1451 2578 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:51
#         transformed_color = sRGB_EOTF(input_color);
	functioncall	$const50 2578 	%line{51} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp1453 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 2553 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1454 $tmp1453 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1454 2548 2552 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1455 $tmp1453 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1456 $tmp1455 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1456 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1457 $tmp1453 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1457 2551 2552 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1453 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1452 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp1459 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 2565 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1460 $tmp1459 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1460 2560 2564 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1461 $tmp1459 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1462 $tmp1461 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1462 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1463 $tmp1459 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1463 2563 2564 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1459 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1458 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp1465 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 2577 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1466 $tmp1465 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1466 2572 2576 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1467 $tmp1465 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1468 $tmp1467 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1468 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1469 $tmp1465 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1469 2575 2576 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1465 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1464 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___560_transformed_color $tmp1452 $tmp1458 $tmp1464 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp1470 in_y_tex_rgb_primaries $const79 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{53} %argrw{"wrr"}
	neq		$tmp1471 $tmp1470 $const12 	%argrw{"wrr"}
	if		$tmp1471 2581 2584 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:54
#              color_space == "sRGB/Rec.709")
	eq		$tmp1472 in_y_tex_rgb_primaries $const80 	%line{54} %argrw{"wrr"}
	neq		$tmp1473 $tmp1472 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp1471 $tmp1473 	%line{53} %argrw{"wr"}
	if		$tmp1471 2586 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:56
#         transformed_color = input_color;
	assign		___560_transformed_color ___687_scene_linear_cms 	%line{56} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp1474 in_y_tex_rgb_primaries $const82 	%line{58} %argrw{"wrr"}
	neq		$tmp1475 $tmp1474 $const12 	%argrw{"wrr"}
	if		$tmp1475 2589 2592 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:59
#              color_space == "Rec.2020")
	eq		$tmp1476 in_y_tex_rgb_primaries $const71 	%line{59} %argrw{"wrr"}
	neq		$tmp1477 $tmp1476 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp1475 $tmp1477 	%line{58} %argrw{"wr"}
	if		$tmp1475 2597 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:62
#             dot(vector(REC2020_TO_REC709_X), v_color),
	dot		$tmp1478 $const83 ___560_v_color 	%line{62} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:63
#             dot(vector(REC2020_TO_REC709_Y), v_color),
	dot		$tmp1480 $const84 ___560_v_color 	%line{63} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:64
#             dot(vector(REC2020_TO_REC709_Z), v_color));
	dot		$tmp1482 $const85 ___560_v_color 	%line{64} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:61
#         transformed_color = color(
	color		___560_transformed_color $tmp1478 $tmp1480 $tmp1482 	%line{61} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp1484 in_y_tex_rgb_primaries $const86 	%line{66} %argrw{"wrr"}
	neq		$tmp1485 $tmp1484 $const12 	%argrw{"wrr"}
	if		$tmp1485 2600 2603 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:67
#              color_space == "DCI-P3")
	eq		$tmp1486 in_y_tex_rgb_primaries $const87 	%line{67} %argrw{"wrr"}
	neq		$tmp1487 $tmp1486 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp1485 $tmp1487 	%line{66} %argrw{"wr"}
	if		$tmp1485 2608 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:70
#             dot(vector(DCIP3_TO_REC709_X), v_color),
	dot		$tmp1488 $const88 ___560_v_color 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:71
#             dot(vector(DCIP3_TO_REC709_Y), v_color),
	dot		$tmp1490 $const89 ___560_v_color 	%line{71} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:72
#             dot(vector(DCIP3_TO_REC709_Z), v_color));
	dot		$tmp1492 $const90 ___560_v_color 	%line{72} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:69
#         transformed_color = color(
	color		___560_transformed_color $tmp1488 $tmp1490 $tmp1492 	%line{69} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:74
#     else if (color_space == "camera Rec 709")
	eq		$tmp1494 in_y_tex_rgb_primaries $const91 	%line{74} %argrw{"wrr"}
	if		$tmp1494 2633 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:76
#         transformed_color = Rec1886_EOTF(input_color);
	functioncall	$const70 2633 	%line{76} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp1496 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 2618 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1497 $tmp1496 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1497 2616 2617 	%argrw{"r"}
	pow		$tmp1495 $tmp1496 $const54 	%argrw{"wrr"}
	assign		$tmp1495 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp1499 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 2625 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1500 $tmp1499 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1500 2623 2624 	%argrw{"r"}
	pow		$tmp1498 $tmp1499 $const54 	%argrw{"wrr"}
	assign		$tmp1498 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp1502 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 2632 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1503 $tmp1502 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1503 2630 2631 	%argrw{"r"}
	pow		$tmp1501 $tmp1502 $const54 	%argrw{"wrr"}
	assign		$tmp1501 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___560_transformed_color $tmp1495 $tmp1498 $tmp1501 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:78
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp1504 in_y_tex_rgb_primaries $const92 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{78} %argrw{"wrr"}
	if		$tmp1504 2661 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:80
#         transformed_color = gamma_CCTF(input_color, 1.8);
	functioncall	$const65 2661 	%line{80} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1506 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2644 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1507 $tmp1506 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1507 2642 2644 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1505 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1505 $tmp1506 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1509 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2652 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1510 $tmp1509 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1510 2650 2652 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1508 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1508 $tmp1509 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1512 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2660 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1513 $tmp1512 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1513 2658 2660 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1511 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1511 $tmp1512 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp1505 $tmp1508 $tmp1511 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:82
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp1514 in_y_tex_rgb_primaries $const94 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{82} %argrw{"wrr"}
	if		$tmp1514 2689 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:84
#         transformed_color = gamma_CCTF(input_color, 2.2);
	functioncall	$const65 2689 	%line{84} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1516 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2672 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1517 $tmp1516 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1517 2670 2672 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1515 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1515 $tmp1516 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1519 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2680 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1520 $tmp1519 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1520 2678 2680 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1518 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1518 $tmp1519 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1522 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2688 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1523 $tmp1522 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1523 2686 2688 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1521 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1521 $tmp1522 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp1515 $tmp1518 $tmp1521 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:86
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp1524 in_y_tex_rgb_primaries $const95 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{86} %argrw{"wrr"}
	if		$tmp1524 2717 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:88
#         transformed_color = gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 2717 	%line{88} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1526 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2700 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1527 $tmp1526 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1527 2698 2700 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1525 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1525 $tmp1526 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1529 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2708 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1530 $tmp1529 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1530 2706 2708 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1528 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1528 $tmp1529 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1532 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2716 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1533 $tmp1532 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1533 2714 2716 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1531 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1531 $tmp1532 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp1525 $tmp1528 $tmp1531 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:90
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp1534 in_y_tex_rgb_primaries $const96 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{90} %argrw{"wrr"}
	neq		$tmp1535 $tmp1534 $const12 	%argrw{"wrr"}
	if		$tmp1535 2720 2723 	%argrw{"r"}
	eq		$tmp1536 in_y_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp1537 $tmp1536 $const12 	%argrw{"wrr"}
	assign		$tmp1535 $tmp1537 	%argrw{"wr"}
	if		$tmp1535 2728 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:93
#             dot(vector(ACES_TO_REC709_X), v_color),
	dot		$tmp1538 $const98 ___560_v_color 	%line{93} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:94
#             dot(vector(ACES_TO_REC709_Y), v_color),
	dot		$tmp1540 $const99 ___560_v_color 	%line{94} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:95
#             dot(vector(ACES_TO_REC709_Z), v_color));
	dot		$tmp1542 $const100 ___560_v_color 	%line{95} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:92
#         transformed_color = color(
	color		___560_transformed_color $tmp1538 $tmp1540 $tmp1542 	%line{92} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:97
#     else if (color_space == "ACEScg")
	eq		$tmp1544 in_y_tex_rgb_primaries $const101 	%line{97} %argrw{"wrr"}
	if		$tmp1544 2734 2735 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:100
#             dot(vector(ACESCG_TO_REC709_X), v_color),
	dot		$tmp1545 $const102 ___560_v_color 	%line{100} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:101
#             dot(vector(ACESCG_TO_REC709_Y), v_color),
	dot		$tmp1547 $const103 ___560_v_color 	%line{101} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:102
#             dot(vector(ACESCG_TO_REC709_Z), v_color));
	dot		$tmp1549 $const104 ___560_v_color 	%line{102} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:99
#         transformed_color = color(
	color		___560_transformed_color $tmp1545 $tmp1547 $tmp1549 	%line{99} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:106
#         transformed_color = color(0);
	assign		___560_transformed_color $const39 	%line{106} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:108
#     return transformed_color;
	assign		___620_C ___560_transformed_color 	%line{108} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	eq		$tmp1551 in_workingspace_rgb_primaries $const82 	%line{515} %argrw{"wrr"}
	neq		$tmp1552 $tmp1551 $const12 	%argrw{"wrr"}
	if		$tmp1552 2739 2742 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:516
#              working_space == "Rec.2020")
	eq		$tmp1553 in_workingspace_rgb_primaries $const71 	%line{516} %argrw{"wrr"}
	neq		$tmp1554 $tmp1553 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	assign		$tmp1552 $tmp1554 	%line{515} %argrw{"wr"}
	if		$tmp1552 2963 3640 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:518
#         C = transform_color_space_to_Rec2020(input_color, color_space);
	functioncall	$const105 2963 	%line{518} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:120
#     vector v_color = vector(input_color);
	assign		___572_v_color ___687_scene_linear_cms 	%line{120} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:122
#     if (color_space == "sRGB")
	eq		$tmp1555 in_y_tex_rgb_primaries $const49 	%line{122} %argrw{"wrr"}
	if		$tmp1555 2789 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:124
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 2785 	%line{124} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp1557 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 2760 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1558 $tmp1557 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1558 2755 2759 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1559 $tmp1557 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1560 $tmp1559 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1560 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1561 $tmp1557 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1561 2758 2759 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1557 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1556 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp1563 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 2772 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1564 $tmp1563 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1564 2767 2771 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1565 $tmp1563 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1566 $tmp1565 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1566 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1567 $tmp1563 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1567 2770 2771 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1563 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1562 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp1569 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 2784 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1570 $tmp1569 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1570 2779 2783 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1571 $tmp1569 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1572 $tmp1571 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1572 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1573 $tmp1569 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1573 2782 2783 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1569 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1568 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___572_v_color $tmp1556 $tmp1562 $tmp1568 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:127
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp1574 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{127} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:128
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp1576 $const107 ___572_v_color 	%line{128} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:129
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp1578 $const108 ___572_v_color 	%line{129} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:126
#         transformed_color = color(
	color		___572_transformed_color $tmp1574 $tmp1576 $tmp1578 	%line{126} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp1580 in_y_tex_rgb_primaries $const79 	%line{131} %argrw{"wrr"}
	neq		$tmp1581 $tmp1580 $const12 	%argrw{"wrr"}
	if		$tmp1581 2792 2795 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:132
#              color_space == "sRGB/Rec.709")
	eq		$tmp1582 in_y_tex_rgb_primaries $const80 	%line{132} %argrw{"wrr"}
	neq		$tmp1583 $tmp1582 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp1581 $tmp1583 	%line{131} %argrw{"wr"}
	if		$tmp1581 2800 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:135
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp1584 $const106 ___572_v_color 	%line{135} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:136
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp1586 $const107 ___572_v_color 	%line{136} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:137
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp1588 $const108 ___572_v_color 	%line{137} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:134
#         transformed_color = color(
	color		___572_transformed_color $tmp1584 $tmp1586 $tmp1588 	%line{134} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp1590 in_y_tex_rgb_primaries $const82 	%line{139} %argrw{"wrr"}
	neq		$tmp1591 $tmp1590 $const12 	%argrw{"wrr"}
	if		$tmp1591 2803 2806 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:140
#              color_space == "Rec.2020")
	eq		$tmp1592 in_y_tex_rgb_primaries $const71 	%line{140} %argrw{"wrr"}
	neq		$tmp1593 $tmp1592 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp1591 $tmp1593 	%line{139} %argrw{"wr"}
	if		$tmp1591 2808 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:142
#         transformed_color = input_color;
	assign		___572_transformed_color ___687_scene_linear_cms 	%line{142} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp1594 in_y_tex_rgb_primaries $const86 	%line{144} %argrw{"wrr"}
	neq		$tmp1595 $tmp1594 $const12 	%argrw{"wrr"}
	if		$tmp1595 2811 2814 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:145
#              color_space == "DCI-P3")
	eq		$tmp1596 in_y_tex_rgb_primaries $const87 	%line{145} %argrw{"wrr"}
	neq		$tmp1597 $tmp1596 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp1595 $tmp1597 	%line{144} %argrw{"wr"}
	if		$tmp1595 2819 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:148
#             dot(vector(DCIP3_TO_REC2020_X), v_color),
	dot		$tmp1598 $const109 ___572_v_color 	%line{148} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:149
#             dot(vector(DCIP3_TO_REC2020_Y), v_color),
	dot		$tmp1600 $const110 ___572_v_color 	%line{149} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:150
#             dot(vector(DCIP3_TO_REC2020_Z), v_color));
	dot		$tmp1602 $const111 ___572_v_color 	%line{150} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:147
#         transformed_color = color(
	color		___572_transformed_color $tmp1598 $tmp1600 $tmp1602 	%line{147} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:152
#     else if (color_space == "camera Rec 709")
	eq		$tmp1604 in_y_tex_rgb_primaries $const91 	%line{152} %argrw{"wrr"}
	if		$tmp1604 2848 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:154
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 2844 	%line{154} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp1606 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 2829 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1607 $tmp1606 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1607 2827 2828 	%argrw{"r"}
	pow		$tmp1605 $tmp1606 $const54 	%argrw{"wrr"}
	assign		$tmp1605 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp1609 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 2836 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1610 $tmp1609 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1610 2834 2835 	%argrw{"r"}
	pow		$tmp1608 $tmp1609 $const54 	%argrw{"wrr"}
	assign		$tmp1608 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp1612 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 2843 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1613 $tmp1612 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1613 2841 2842 	%argrw{"r"}
	pow		$tmp1611 $tmp1612 $const54 	%argrw{"wrr"}
	assign		$tmp1611 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___572_v_color $tmp1605 $tmp1608 $tmp1611 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:157
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp1614 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{157} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:158
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp1616 $const107 ___572_v_color 	%line{158} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:159
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp1618 $const108 ___572_v_color 	%line{159} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:156
#         transformed_color = color(
	color		___572_transformed_color $tmp1614 $tmp1616 $tmp1618 	%line{156} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:161
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp1620 in_y_tex_rgb_primaries $const92 	%line{161} %argrw{"wrr"}
	if		$tmp1620 2880 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:163
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 2876 	%line{163} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1622 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2859 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1623 $tmp1622 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1623 2857 2859 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1621 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1621 $tmp1622 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1625 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2867 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1626 $tmp1625 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1626 2865 2867 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1624 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1624 $tmp1625 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1628 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2875 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1629 $tmp1628 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1629 2873 2875 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1627 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1627 $tmp1628 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp1621 $tmp1624 $tmp1627 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:166
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp1630 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{166} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:167
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp1632 $const107 ___572_v_color 	%line{167} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:168
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp1634 $const108 ___572_v_color 	%line{168} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:165
#         transformed_color = color(
	color		___572_transformed_color $tmp1630 $tmp1632 $tmp1634 	%line{165} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:170
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp1636 in_y_tex_rgb_primaries $const94 	%line{170} %argrw{"wrr"}
	if		$tmp1636 2912 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:172
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 2908 	%line{172} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1638 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2891 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1639 $tmp1638 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1639 2889 2891 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1637 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1637 $tmp1638 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1641 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2899 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1642 $tmp1641 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1642 2897 2899 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1640 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1640 $tmp1641 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1644 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2907 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1645 $tmp1644 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1645 2905 2907 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1643 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1643 $tmp1644 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp1637 $tmp1640 $tmp1643 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:175
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp1646 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{175} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:176
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp1648 $const107 ___572_v_color 	%line{176} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:177
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp1650 $const108 ___572_v_color 	%line{177} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:174
#         transformed_color = color(
	color		___572_transformed_color $tmp1646 $tmp1648 $tmp1650 	%line{174} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:179
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp1652 in_y_tex_rgb_primaries $const95 	%line{179} %argrw{"wrr"}
	if		$tmp1652 2944 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:181
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 2940 	%line{181} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1654 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 2923 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1655 $tmp1654 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1655 2921 2923 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1653 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1653 $tmp1654 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1657 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 2931 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1658 $tmp1657 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1658 2929 2931 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1656 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1656 $tmp1657 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1660 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 2939 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1661 $tmp1660 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1661 2937 2939 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1659 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1659 $tmp1660 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp1653 $tmp1656 $tmp1659 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:184
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp1662 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{184} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:185
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp1664 $const107 ___572_v_color 	%line{185} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:186
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp1666 $const108 ___572_v_color 	%line{186} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:183
#         transformed_color = color(
	color		___572_transformed_color $tmp1662 $tmp1664 $tmp1666 	%line{183} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:188
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp1668 in_y_tex_rgb_primaries $const96 	%line{188} %argrw{"wrr"}
	neq		$tmp1669 $tmp1668 $const12 	%argrw{"wrr"}
	if		$tmp1669 2947 2950 	%argrw{"r"}
	eq		$tmp1670 in_y_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp1671 $tmp1670 $const12 	%argrw{"wrr"}
	assign		$tmp1669 $tmp1671 	%argrw{"wr"}
	if		$tmp1669 2955 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:191
#             dot(vector(ACES_TO_REC2020_X), v_color),
	dot		$tmp1672 $const112 ___572_v_color 	%line{191} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:192
#             dot(vector(ACES_TO_REC2020_Y), v_color),
	dot		$tmp1674 $const113 ___572_v_color 	%line{192} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:193
#             dot(vector(ACES_TO_REC2020_Z), v_color));
	dot		$tmp1676 $const114 ___572_v_color 	%line{193} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:190
#         transformed_color = color(
	color		___572_transformed_color $tmp1672 $tmp1674 $tmp1676 	%line{190} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:195
#     else if (color_space == "ACEScg")
	eq		$tmp1678 in_y_tex_rgb_primaries $const101 	%line{195} %argrw{"wrr"}
	if		$tmp1678 2961 2962 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:198
#             dot(vector(ACESCG_TO_REC2020_X), v_color),
	dot		$tmp1679 $const115 ___572_v_color 	%line{198} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:199
#             dot(vector(ACESCG_TO_REC2020_Y), v_color),
	dot		$tmp1681 $const116 ___572_v_color 	%line{199} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:200
#             dot(vector(ACESCG_TO_REC2020_Z), v_color));
	dot		$tmp1683 $const117 ___572_v_color 	%line{200} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:197
#         transformed_color = color(
	color		___572_transformed_color $tmp1679 $tmp1681 $tmp1683 	%line{197} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:204
#         transformed_color = color(0);
	assign		___572_transformed_color $const39 	%line{204} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:206
#     return transformed_color;
	assign		___620_C ___572_transformed_color 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	eq		$tmp1685 in_workingspace_rgb_primaries $const86 	%line{520} %argrw{"wrr"}
	neq		$tmp1686 $tmp1685 $const12 	%argrw{"wrr"}
	if		$tmp1686 2966 2969 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:521
#              working_space == "DCI-P3")
	eq		$tmp1687 in_workingspace_rgb_primaries $const87 	%line{521} %argrw{"wrr"}
	neq		$tmp1688 $tmp1687 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	assign		$tmp1686 $tmp1688 	%line{520} %argrw{"wr"}
	if		$tmp1686 3190 3640 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:523
#         C = transform_color_space_to_DCIP3(input_color, color_space);
	functioncall	$const118 3190 	%line{523} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:218
#     vector v_color = vector(input_color);
	assign		___584_v_color ___687_scene_linear_cms 	%line{218} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:220
#     if (color_space == "sRGB")
	eq		$tmp1689 in_y_tex_rgb_primaries $const49 	%line{220} %argrw{"wrr"}
	if		$tmp1689 3016 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:222
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 3012 	%line{222} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp1691 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 2987 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1692 $tmp1691 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1692 2982 2986 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1693 $tmp1691 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1694 $tmp1693 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1694 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1695 $tmp1691 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1695 2985 2986 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1691 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1690 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp1697 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 2999 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1698 $tmp1697 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1698 2994 2998 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1699 $tmp1697 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1700 $tmp1699 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1700 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1701 $tmp1697 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1701 2997 2998 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1697 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1696 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp1703 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 3011 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1704 $tmp1703 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1704 3006 3010 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1705 $tmp1703 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1706 $tmp1705 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1706 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1707 $tmp1703 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1707 3009 3010 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1703 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1702 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___584_v_color $tmp1690 $tmp1696 $tmp1702 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:225
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp1708 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{225} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:226
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp1710 $const120 ___584_v_color 	%line{226} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:227
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp1712 $const121 ___584_v_color 	%line{227} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:224
#         transformed_color = color(
	color		___584_transformed_color $tmp1708 $tmp1710 $tmp1712 	%line{224} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp1714 in_y_tex_rgb_primaries $const79 	%line{229} %argrw{"wrr"}
	neq		$tmp1715 $tmp1714 $const12 	%argrw{"wrr"}
	if		$tmp1715 3019 3022 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:230
#              color_space == "sRGB/Rec.709")
	eq		$tmp1716 in_y_tex_rgb_primaries $const80 	%line{230} %argrw{"wrr"}
	neq		$tmp1717 $tmp1716 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp1715 $tmp1717 	%line{229} %argrw{"wr"}
	if		$tmp1715 3027 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:233
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp1718 $const119 ___584_v_color 	%line{233} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:234
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp1720 $const120 ___584_v_color 	%line{234} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:235
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp1722 $const121 ___584_v_color 	%line{235} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:232
#         transformed_color = color(
	color		___584_transformed_color $tmp1718 $tmp1720 $tmp1722 	%line{232} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp1724 in_y_tex_rgb_primaries $const82 	%line{237} %argrw{"wrr"}
	neq		$tmp1725 $tmp1724 $const12 	%argrw{"wrr"}
	if		$tmp1725 3030 3033 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:238
#              color_space == "Rec.2020")
	eq		$tmp1726 in_y_tex_rgb_primaries $const71 	%line{238} %argrw{"wrr"}
	neq		$tmp1727 $tmp1726 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp1725 $tmp1727 	%line{237} %argrw{"wr"}
	if		$tmp1725 3038 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:241
#             dot(vector(REC2020_TO_DCIP3_X), v_color),
	dot		$tmp1728 $const122 ___584_v_color 	%line{241} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:242
#             dot(vector(REC2020_TO_DCIP3_Y), v_color),
	dot		$tmp1730 $const123 ___584_v_color 	%line{242} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:243
#             dot(vector(REC2020_TO_DCIP3_Z), v_color));
	dot		$tmp1732 $const124 ___584_v_color 	%line{243} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:240
#         transformed_color = color(
	color		___584_transformed_color $tmp1728 $tmp1730 $tmp1732 	%line{240} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp1734 in_y_tex_rgb_primaries $const86 	%line{245} %argrw{"wrr"}
	neq		$tmp1735 $tmp1734 $const12 	%argrw{"wrr"}
	if		$tmp1735 3041 3044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:246
#              color_space == "DCI-P3")
	eq		$tmp1736 in_y_tex_rgb_primaries $const87 	%line{246} %argrw{"wrr"}
	neq		$tmp1737 $tmp1736 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp1735 $tmp1737 	%line{245} %argrw{"wr"}
	if		$tmp1735 3046 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:248
#         transformed_color = input_color;
	assign		___584_transformed_color ___687_scene_linear_cms 	%line{248} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:250
#     else if (color_space == "camera Rec 709")
	eq		$tmp1738 in_y_tex_rgb_primaries $const91 	%line{250} %argrw{"wrr"}
	if		$tmp1738 3075 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:252
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 3071 	%line{252} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp1740 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 3056 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1741 $tmp1740 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1741 3054 3055 	%argrw{"r"}
	pow		$tmp1739 $tmp1740 $const54 	%argrw{"wrr"}
	assign		$tmp1739 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp1743 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 3063 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1744 $tmp1743 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1744 3061 3062 	%argrw{"r"}
	pow		$tmp1742 $tmp1743 $const54 	%argrw{"wrr"}
	assign		$tmp1742 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp1746 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 3070 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1747 $tmp1746 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1747 3068 3069 	%argrw{"r"}
	pow		$tmp1745 $tmp1746 $const54 	%argrw{"wrr"}
	assign		$tmp1745 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___584_v_color $tmp1739 $tmp1742 $tmp1745 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:255
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp1748 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{255} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:256
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp1750 $const120 ___584_v_color 	%line{256} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:257
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp1752 $const121 ___584_v_color 	%line{257} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:254
#         transformed_color = color(
	color		___584_transformed_color $tmp1748 $tmp1750 $tmp1752 	%line{254} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:259
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp1754 in_y_tex_rgb_primaries $const92 	%line{259} %argrw{"wrr"}
	if		$tmp1754 3107 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:261
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 3103 	%line{261} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1756 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3086 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1757 $tmp1756 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1757 3084 3086 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1755 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1755 $tmp1756 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1759 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3094 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1760 $tmp1759 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1760 3092 3094 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1758 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1758 $tmp1759 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1762 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3102 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1763 $tmp1762 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1763 3100 3102 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1761 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1761 $tmp1762 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp1755 $tmp1758 $tmp1761 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:264
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp1764 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{264} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:265
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp1766 $const120 ___584_v_color 	%line{265} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:266
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp1768 $const121 ___584_v_color 	%line{266} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:263
#         transformed_color = color(
	color		___584_transformed_color $tmp1764 $tmp1766 $tmp1768 	%line{263} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:268
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp1770 in_y_tex_rgb_primaries $const94 	%line{268} %argrw{"wrr"}
	if		$tmp1770 3139 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:270
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 3135 	%line{270} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1772 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3118 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1773 $tmp1772 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1773 3116 3118 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1771 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1771 $tmp1772 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1775 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3126 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1776 $tmp1775 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1776 3124 3126 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1774 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1774 $tmp1775 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1778 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3134 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1779 $tmp1778 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1779 3132 3134 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1777 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1777 $tmp1778 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp1771 $tmp1774 $tmp1777 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:273
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp1780 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{273} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:274
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp1782 $const120 ___584_v_color 	%line{274} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:275
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp1784 $const121 ___584_v_color 	%line{275} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:272
#         transformed_color = color(
	color		___584_transformed_color $tmp1780 $tmp1782 $tmp1784 	%line{272} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:277
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp1786 in_y_tex_rgb_primaries $const95 	%line{277} %argrw{"wrr"}
	if		$tmp1786 3171 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:279
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 3167 	%line{279} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1788 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3150 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1789 $tmp1788 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1789 3148 3150 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1787 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1787 $tmp1788 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1791 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3158 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1792 $tmp1791 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1792 3156 3158 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1790 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1790 $tmp1791 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1794 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3166 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1795 $tmp1794 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1795 3164 3166 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1793 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1793 $tmp1794 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp1787 $tmp1790 $tmp1793 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:282
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp1796 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{282} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:283
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp1798 $const120 ___584_v_color 	%line{283} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:284
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp1800 $const121 ___584_v_color 	%line{284} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:281
#         transformed_color = color(
	color		___584_transformed_color $tmp1796 $tmp1798 $tmp1800 	%line{281} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:286
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp1802 in_y_tex_rgb_primaries $const96 	%line{286} %argrw{"wrr"}
	neq		$tmp1803 $tmp1802 $const12 	%argrw{"wrr"}
	if		$tmp1803 3174 3177 	%argrw{"r"}
	eq		$tmp1804 in_y_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp1805 $tmp1804 $const12 	%argrw{"wrr"}
	assign		$tmp1803 $tmp1805 	%argrw{"wr"}
	if		$tmp1803 3182 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:289
#             dot(vector(ACES_TO_DCIP3_X), v_color),
	dot		$tmp1806 $const125 ___584_v_color 	%line{289} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:290
#             dot(vector(ACES_TO_DCIP3_Y), v_color),
	dot		$tmp1808 $const126 ___584_v_color 	%line{290} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:291
#             dot(vector(ACES_TO_DCIP3_Z), v_color));
	dot		$tmp1810 $const127 ___584_v_color 	%line{291} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:288
#         transformed_color = color(
	color		___584_transformed_color $tmp1806 $tmp1808 $tmp1810 	%line{288} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:293
#     else if (color_space == "ACEScg")
	eq		$tmp1812 in_y_tex_rgb_primaries $const101 	%line{293} %argrw{"wrr"}
	if		$tmp1812 3188 3189 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:296
#             dot(vector(ACESCG_TO_DCIP3_X), v_color),
	dot		$tmp1813 $const128 ___584_v_color 	%line{296} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:297
#             dot(vector(ACESCG_TO_DCIP3_Y), v_color),
	dot		$tmp1815 $const129 ___584_v_color 	%line{297} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:298
#             dot(vector(ACESCG_TO_DCIP3_Z), v_color));
	dot		$tmp1817 $const130 ___584_v_color 	%line{298} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:295
#         transformed_color = color(
	color		___584_transformed_color $tmp1813 $tmp1815 $tmp1817 	%line{295} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:302
#         transformed_color = color(0);
	assign		___584_transformed_color $const39 	%line{302} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:304
#     return transformed_color;
	assign		___620_C ___584_transformed_color 	%line{304} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:525
#     else if (working_space == "ACES2065-1" || working_space == "ACES")
	eq		$tmp1819 in_workingspace_rgb_primaries $const96 	%line{525} %argrw{"wrr"}
	neq		$tmp1820 $tmp1819 $const12 	%argrw{"wrr"}
	if		$tmp1820 3193 3196 	%argrw{"r"}
	eq		$tmp1821 in_workingspace_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp1822 $tmp1821 $const12 	%argrw{"wrr"}
	assign		$tmp1820 $tmp1822 	%argrw{"wr"}
	if		$tmp1820 3417 3640 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:527
#         C = transform_color_space_to_ACES(input_color, color_space);
	functioncall	$const131 3417 	%line{527} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:316
#     vector v_color = vector(input_color);
	assign		___596_v_color ___687_scene_linear_cms 	%line{316} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:318
#     if (color_space == "sRGB")
	eq		$tmp1823 in_y_tex_rgb_primaries $const49 	%line{318} %argrw{"wrr"}
	if		$tmp1823 3243 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:320
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 3239 	%line{320} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp1825 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 3214 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1826 $tmp1825 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1826 3209 3213 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1827 $tmp1825 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1828 $tmp1827 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1828 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1829 $tmp1825 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1829 3212 3213 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1825 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1824 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp1831 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 3226 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1832 $tmp1831 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1832 3221 3225 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1833 $tmp1831 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1834 $tmp1833 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1834 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1835 $tmp1831 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1835 3224 3225 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1831 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1830 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp1837 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 3238 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1838 $tmp1837 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1838 3233 3237 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1839 $tmp1837 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1840 $tmp1839 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1840 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1841 $tmp1837 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1841 3236 3237 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1837 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1836 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___596_v_color $tmp1824 $tmp1830 $tmp1836 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:323
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1842 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{323} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:324
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1844 $const133 ___596_v_color 	%line{324} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:325
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1846 $const134 ___596_v_color 	%line{325} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:322
#         transformed_color = color(
	color		___596_transformed_color $tmp1842 $tmp1844 $tmp1846 	%line{322} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp1848 in_y_tex_rgb_primaries $const79 	%line{327} %argrw{"wrr"}
	neq		$tmp1849 $tmp1848 $const12 	%argrw{"wrr"}
	if		$tmp1849 3246 3249 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:328
#              color_space == "sRGB/Rec.709")
	eq		$tmp1850 in_y_tex_rgb_primaries $const80 	%line{328} %argrw{"wrr"}
	neq		$tmp1851 $tmp1850 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp1849 $tmp1851 	%line{327} %argrw{"wr"}
	if		$tmp1849 3254 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:331
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1852 $const132 ___596_v_color 	%line{331} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:332
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1854 $const133 ___596_v_color 	%line{332} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:333
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1856 $const134 ___596_v_color 	%line{333} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:330
#         transformed_color = color(
	color		___596_transformed_color $tmp1852 $tmp1854 $tmp1856 	%line{330} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp1858 in_y_tex_rgb_primaries $const82 	%line{335} %argrw{"wrr"}
	neq		$tmp1859 $tmp1858 $const12 	%argrw{"wrr"}
	if		$tmp1859 3257 3260 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:336
#              color_space == "Rec.2020")
	eq		$tmp1860 in_y_tex_rgb_primaries $const71 	%line{336} %argrw{"wrr"}
	neq		$tmp1861 $tmp1860 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp1859 $tmp1861 	%line{335} %argrw{"wr"}
	if		$tmp1859 3265 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:339
#             dot(vector(REC2020_TO_ACES_X), v_color),
	dot		$tmp1862 $const135 ___596_v_color 	%line{339} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:340
#             dot(vector(REC2020_TO_ACES_Y), v_color),
	dot		$tmp1864 $const136 ___596_v_color 	%line{340} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:341
#             dot(vector(REC2020_TO_ACES_Z), v_color));
	dot		$tmp1866 $const137 ___596_v_color 	%line{341} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:338
#         transformed_color = color(
	color		___596_transformed_color $tmp1862 $tmp1864 $tmp1866 	%line{338} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp1868 in_y_tex_rgb_primaries $const86 	%line{343} %argrw{"wrr"}
	neq		$tmp1869 $tmp1868 $const12 	%argrw{"wrr"}
	if		$tmp1869 3268 3271 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:344
#              color_space == "DCI-P3")
	eq		$tmp1870 in_y_tex_rgb_primaries $const87 	%line{344} %argrw{"wrr"}
	neq		$tmp1871 $tmp1870 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp1869 $tmp1871 	%line{343} %argrw{"wr"}
	if		$tmp1869 3276 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:347
#             dot(vector(DCIP3_TO_ACES_X), v_color),
	dot		$tmp1872 $const138 ___596_v_color 	%line{347} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:348
#             dot(vector(DCIP3_TO_ACES_Y), v_color),
	dot		$tmp1874 $const139 ___596_v_color 	%line{348} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:349
#             dot(vector(DCIP3_TO_ACES_Z), v_color));
	dot		$tmp1876 $const140 ___596_v_color 	%line{349} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:346
#         transformed_color = color(
	color		___596_transformed_color $tmp1872 $tmp1874 $tmp1876 	%line{346} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:351
#     else if (color_space == "camera Rec 709")
	eq		$tmp1878 in_y_tex_rgb_primaries $const91 	%line{351} %argrw{"wrr"}
	if		$tmp1878 3305 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:353
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 3301 	%line{353} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp1880 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 3286 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1881 $tmp1880 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1881 3284 3285 	%argrw{"r"}
	pow		$tmp1879 $tmp1880 $const54 	%argrw{"wrr"}
	assign		$tmp1879 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp1883 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 3293 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1884 $tmp1883 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1884 3291 3292 	%argrw{"r"}
	pow		$tmp1882 $tmp1883 $const54 	%argrw{"wrr"}
	assign		$tmp1882 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp1886 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 3300 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp1887 $tmp1886 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp1887 3298 3299 	%argrw{"r"}
	pow		$tmp1885 $tmp1886 $const54 	%argrw{"wrr"}
	assign		$tmp1885 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___596_v_color $tmp1879 $tmp1882 $tmp1885 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:356
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1888 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{356} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:357
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1890 $const133 ___596_v_color 	%line{357} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:358
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1892 $const134 ___596_v_color 	%line{358} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:355
#         transformed_color = color(
	color		___596_transformed_color $tmp1888 $tmp1890 $tmp1892 	%line{355} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:360
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp1894 in_y_tex_rgb_primaries $const92 	%line{360} %argrw{"wrr"}
	if		$tmp1894 3337 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:362
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 3333 	%line{362} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1896 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3316 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1897 $tmp1896 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1897 3314 3316 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1895 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1895 $tmp1896 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1899 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3324 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1900 $tmp1899 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1900 3322 3324 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1898 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1898 $tmp1899 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1902 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3332 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1903 $tmp1902 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1903 3330 3332 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1901 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1901 $tmp1902 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp1895 $tmp1898 $tmp1901 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:365
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1904 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{365} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:366
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1906 $const133 ___596_v_color 	%line{366} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:367
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1908 $const134 ___596_v_color 	%line{367} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:364
#         transformed_color = color(
	color		___596_transformed_color $tmp1904 $tmp1906 $tmp1908 	%line{364} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:369
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp1910 in_y_tex_rgb_primaries $const94 	%line{369} %argrw{"wrr"}
	if		$tmp1910 3369 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:371
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 3365 	%line{371} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1912 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3348 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1913 $tmp1912 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1913 3346 3348 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1911 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1911 $tmp1912 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1915 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3356 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1916 $tmp1915 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1916 3354 3356 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1914 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1914 $tmp1915 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1918 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3364 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1919 $tmp1918 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1919 3362 3364 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1917 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1917 $tmp1918 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp1911 $tmp1914 $tmp1917 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:374
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1920 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{374} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:375
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1922 $const133 ___596_v_color 	%line{375} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:376
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1924 $const134 ___596_v_color 	%line{376} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:373
#         transformed_color = color(
	color		___596_transformed_color $tmp1920 $tmp1922 $tmp1924 	%line{373} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:378
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp1926 in_y_tex_rgb_primaries $const95 	%line{378} %argrw{"wrr"}
	if		$tmp1926 3401 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:380
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 3397 	%line{380} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp1928 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3380 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1929 $tmp1928 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1929 3378 3380 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1927 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1927 $tmp1928 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp1931 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3388 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1932 $tmp1931 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1932 3386 3388 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1930 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1930 $tmp1931 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp1934 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3396 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp1935 $tmp1934 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp1935 3394 3396 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp1933 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp1933 $tmp1934 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp1927 $tmp1930 $tmp1933 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:383
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp1936 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{383} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:384
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp1938 $const133 ___596_v_color 	%line{384} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:385
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp1940 $const134 ___596_v_color 	%line{385} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:382
#         transformed_color = color(
	color		___596_transformed_color $tmp1936 $tmp1938 $tmp1940 	%line{382} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:387
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp1942 in_y_tex_rgb_primaries $const96 	%line{387} %argrw{"wrr"}
	neq		$tmp1943 $tmp1942 $const12 	%argrw{"wrr"}
	if		$tmp1943 3404 3407 	%argrw{"r"}
	eq		$tmp1944 in_y_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp1945 $tmp1944 $const12 	%argrw{"wrr"}
	assign		$tmp1943 $tmp1945 	%argrw{"wr"}
	if		$tmp1943 3409 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:389
#         transformed_color = input_color;
	assign		___596_transformed_color ___687_scene_linear_cms 	%line{389} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:391
#     else if (color_space == "ACEScg")
	eq		$tmp1946 in_y_tex_rgb_primaries $const101 	%line{391} %argrw{"wrr"}
	if		$tmp1946 3415 3416 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:394
#             dot(vector(ACESCG_TO_ACES_X), v_color),
	dot		$tmp1947 $const141 ___596_v_color 	%line{394} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:395
#             dot(vector(ACESCG_TO_ACES_Y), v_color),
	dot		$tmp1949 $const142 ___596_v_color 	%line{395} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:396
#             dot(vector(ACESCG_TO_ACES_Z), v_color));
	dot		$tmp1951 $const143 ___596_v_color 	%line{396} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:393
#         transformed_color = color(
	color		___596_transformed_color $tmp1947 $tmp1949 $tmp1951 	%line{393} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:400
#         transformed_color = color(0);
	assign		___596_transformed_color $const39 	%line{400} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:402
#     return transformed_color;
	assign		___620_C ___596_transformed_color 	%line{402} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:529
#     else if (working_space == "ACEScg")
	eq		$tmp1953 in_workingspace_rgb_primaries $const101 	%line{529} %argrw{"wrr"}
	if		$tmp1953 3639 3640 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:531
#         C = transform_color_space_to_ACEScg(input_color, color_space);
	functioncall	$const144 3639 	%line{531} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:414
#     vector v_color = vector(input_color);
	assign		___608_v_color ___687_scene_linear_cms 	%line{414} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:416
#     if (color_space == "sRGB")
	eq		$tmp1954 in_y_tex_rgb_primaries $const49 	%line{416} %argrw{"wrr"}
	if		$tmp1954 3465 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:418
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 3461 	%line{418} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp1956 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 3436 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1957 $tmp1956 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1957 3431 3435 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1958 $tmp1956 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1959 $tmp1958 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1959 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1960 $tmp1956 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1960 3434 3435 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1956 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1955 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp1962 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 3448 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1963 $tmp1962 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1963 3443 3447 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1964 $tmp1962 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1965 $tmp1964 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1965 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1966 $tmp1962 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1966 3446 3447 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1962 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1961 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp1968 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 3460 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp1969 $tmp1968 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp1969 3455 3459 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp1970 $tmp1968 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp1971 $tmp1970 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp1971 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp1972 $tmp1968 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp1972 3458 3459 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp1968 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp1967 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___608_v_color $tmp1955 $tmp1961 $tmp1967 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:421
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1973 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{421} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:422
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1975 $const146 ___608_v_color 	%line{422} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:423
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1977 $const147 ___608_v_color 	%line{423} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:420
#         transformed_color = color(
	color		___608_transformed_color $tmp1973 $tmp1975 $tmp1977 	%line{420} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp1979 in_y_tex_rgb_primaries $const79 	%line{425} %argrw{"wrr"}
	neq		$tmp1980 $tmp1979 $const12 	%argrw{"wrr"}
	if		$tmp1980 3468 3471 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:426
#              color_space == "sRGB/Rec.709")
	eq		$tmp1981 in_y_tex_rgb_primaries $const80 	%line{426} %argrw{"wrr"}
	neq		$tmp1982 $tmp1981 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp1980 $tmp1982 	%line{425} %argrw{"wr"}
	if		$tmp1980 3476 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:429
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp1983 $const145 ___608_v_color 	%line{429} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:430
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp1985 $const146 ___608_v_color 	%line{430} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:431
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp1987 $const147 ___608_v_color 	%line{431} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:428
#         transformed_color = color(
	color		___608_transformed_color $tmp1983 $tmp1985 $tmp1987 	%line{428} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp1989 in_y_tex_rgb_primaries $const82 	%line{433} %argrw{"wrr"}
	neq		$tmp1990 $tmp1989 $const12 	%argrw{"wrr"}
	if		$tmp1990 3479 3482 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:434
#              color_space == "Rec.2020")
	eq		$tmp1991 in_y_tex_rgb_primaries $const71 	%line{434} %argrw{"wrr"}
	neq		$tmp1992 $tmp1991 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp1990 $tmp1992 	%line{433} %argrw{"wr"}
	if		$tmp1990 3487 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:437
#             dot(vector(REC2020_TO_ACESCG_X), v_color),
	dot		$tmp1993 $const148 ___608_v_color 	%line{437} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:438
#             dot(vector(REC2020_TO_ACESCG_Y), v_color),
	dot		$tmp1995 $const149 ___608_v_color 	%line{438} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:439
#             dot(vector(REC2020_TO_ACESCG_Z), v_color));
	dot		$tmp1997 $const150 ___608_v_color 	%line{439} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:436
#         transformed_color = color(
	color		___608_transformed_color $tmp1993 $tmp1995 $tmp1997 	%line{436} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp1999 in_y_tex_rgb_primaries $const86 	%line{441} %argrw{"wrr"}
	neq		$tmp2000 $tmp1999 $const12 	%argrw{"wrr"}
	if		$tmp2000 3490 3493 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:442
#              color_space == "DCI-P3")
	eq		$tmp2001 in_y_tex_rgb_primaries $const87 	%line{442} %argrw{"wrr"}
	neq		$tmp2002 $tmp2001 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp2000 $tmp2002 	%line{441} %argrw{"wr"}
	if		$tmp2000 3498 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:445
#             dot(vector(DCIP3_TO_ACESCG_X), v_color),
	dot		$tmp2003 $const151 ___608_v_color 	%line{445} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:446
#             dot(vector(DCIP3_TO_ACESCG_Y), v_color),
	dot		$tmp2005 $const152 ___608_v_color 	%line{446} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:447
#             dot(vector(DCIP3_TO_ACESCG_Z), v_color));
	dot		$tmp2007 $const153 ___608_v_color 	%line{447} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:444
#         transformed_color = color(
	color		___608_transformed_color $tmp2003 $tmp2005 $tmp2007 	%line{444} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:449
#     else if (color_space == "camera Rec 709")
	eq		$tmp2009 in_y_tex_rgb_primaries $const91 	%line{449} %argrw{"wrr"}
	if		$tmp2009 3527 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:451
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 3523 	%line{451} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp2011 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 3508 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2012 $tmp2011 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2012 3506 3507 	%argrw{"r"}
	pow		$tmp2010 $tmp2011 $const54 	%argrw{"wrr"}
	assign		$tmp2010 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp2014 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 3515 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2015 $tmp2014 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2015 3513 3514 	%argrw{"r"}
	pow		$tmp2013 $tmp2014 $const54 	%argrw{"wrr"}
	assign		$tmp2013 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp2017 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 3522 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2018 $tmp2017 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2018 3520 3521 	%argrw{"r"}
	pow		$tmp2016 $tmp2017 $const54 	%argrw{"wrr"}
	assign		$tmp2016 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___608_v_color $tmp2010 $tmp2013 $tmp2016 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:454
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2019 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{454} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:455
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2021 $const146 ___608_v_color 	%line{455} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:456
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2023 $const147 ___608_v_color 	%line{456} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:453
#         transformed_color = color(
	color		___608_transformed_color $tmp2019 $tmp2021 $tmp2023 	%line{453} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:458
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp2025 in_y_tex_rgb_primaries $const92 	%line{458} %argrw{"wrr"}
	if		$tmp2025 3559 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:460
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 3555 	%line{460} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2027 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3538 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2028 $tmp2027 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2028 3536 3538 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2026 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2026 $tmp2027 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2030 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3546 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2031 $tmp2030 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2031 3544 3546 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2029 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2029 $tmp2030 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2033 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3554 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2034 $tmp2033 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2034 3552 3554 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2032 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2032 $tmp2033 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp2026 $tmp2029 $tmp2032 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:463
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2035 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{463} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:464
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2037 $const146 ___608_v_color 	%line{464} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:465
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2039 $const147 ___608_v_color 	%line{465} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:462
#         transformed_color = color(
	color		___608_transformed_color $tmp2035 $tmp2037 $tmp2039 	%line{462} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:467
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp2041 in_y_tex_rgb_primaries $const94 	%line{467} %argrw{"wrr"}
	if		$tmp2041 3591 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:469
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 3587 	%line{469} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2043 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3570 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2044 $tmp2043 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2044 3568 3570 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2042 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2042 $tmp2043 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2046 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3578 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2047 $tmp2046 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2047 3576 3578 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2045 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2045 $tmp2046 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2049 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2050 $tmp2049 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2050 3584 3586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2048 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2048 $tmp2049 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp2042 $tmp2045 $tmp2048 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:472
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2051 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{472} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:473
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2053 $const146 ___608_v_color 	%line{473} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:474
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2055 $const147 ___608_v_color 	%line{474} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:471
#         transformed_color = color(
	color		___608_transformed_color $tmp2051 $tmp2053 $tmp2055 	%line{471} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:476
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp2057 in_y_tex_rgb_primaries $const95 	%line{476} %argrw{"wrr"}
	if		$tmp2057 3623 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:478
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 3619 	%line{478} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2059 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3602 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2060 $tmp2059 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2060 3600 3602 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2058 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2058 $tmp2059 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2062 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3610 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2063 $tmp2062 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2063 3608 3610 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2061 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2061 $tmp2062 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2065 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 3618 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2066 $tmp2065 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2066 3616 3618 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2064 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2064 $tmp2065 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp2058 $tmp2061 $tmp2064 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:481
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2067 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{481} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:482
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2069 $const146 ___608_v_color 	%line{482} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:483
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2071 $const147 ___608_v_color 	%line{483} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:480
#         transformed_color = color(
	color		___608_transformed_color $tmp2067 $tmp2069 $tmp2071 	%line{480} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:485
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp2073 in_y_tex_rgb_primaries $const96 	%line{485} %argrw{"wrr"}
	neq		$tmp2074 $tmp2073 $const12 	%argrw{"wrr"}
	if		$tmp2074 3626 3629 	%argrw{"r"}
	eq		$tmp2075 in_y_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp2076 $tmp2075 $const12 	%argrw{"wrr"}
	assign		$tmp2074 $tmp2076 	%argrw{"wr"}
	if		$tmp2074 3634 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:488
#             dot(vector(ACES_TO_ACESCG_X), v_color),
	dot		$tmp2077 $const154 ___608_v_color 	%line{488} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:489
#             dot(vector(ACES_TO_ACESCG_Y), v_color),
	dot		$tmp2079 $const155 ___608_v_color 	%line{489} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:490
#             dot(vector(ACES_TO_ACESCG_Z), v_color));
	dot		$tmp2081 $const156 ___608_v_color 	%line{490} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:487
#         transformed_color = color(
	color		___608_transformed_color $tmp2077 $tmp2079 $tmp2081 	%line{487} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:492
#     else if (color_space == "ACEScg")
	eq		$tmp2083 in_y_tex_rgb_primaries $const101 	%line{492} %argrw{"wrr"}
	if		$tmp2083 3637 3638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:494
#         transformed_color = input_color;
	assign		___608_transformed_color ___687_scene_linear_cms 	%line{494} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:498
#         transformed_color = color(0);
	assign		___608_transformed_color $const39 	%line{498} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:500
#     return transformed_color;
	assign		___620_C ___608_transformed_color 	%line{500} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:535
#         C = color(0);
	assign		___620_C $const39 	%line{535} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:537
#     return C;
	assign		___687_scene_linear_cms ___620_C 	%line{537} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:432
#     return scene_linear_cms;
	assign		___756_y_axis ___687_scene_linear_cms 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{432} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1156
#                 out_color += blending[1] * in_y_axis_color * y_axis;
	compref		$tmp2084 blending $const2 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1156} %argrw{"wrr"}
	mul		$tmp2085 $tmp2084 in_y_axis_color 	%argrw{"wrr"}
	mul		$tmp2086 $tmp2085 ___756_y_axis 	%argrw{"wrr"}
	add		out_color out_color $tmp2086 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1157
#                 out_alpha += blending[1] * y_alpha;
	compref		$tmp2087 blending $const2 	%line{1157} %argrw{"wrr"}
	mul		$tmp2088 $tmp2087 y_alpha 	%argrw{"wrr"}
	add		out_alpha out_alpha $tmp2088 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1163
#         out_color += blending[1] * in_y_axis_color;
	compref		$tmp2089 blending $const2 	%line{1163} %argrw{"wrr"}
	mul		$tmp2090 $tmp2089 in_y_axis_color 	%argrw{"wrr"}
	add		out_color out_color $tmp2090 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1164
#         out_alpha += blending[1];
	compref		$tmp2091 blending $const2 	%line{1164} %argrw{"wrr"}
	add		out_alpha out_alpha $tmp2091 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1167
#     exists = numchannels = 0;
	assign		numchannels $const12 	%line{1167} %argrw{"wr"}
	assign		exists numchannels 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1169
#     if (gettextureinfo(in_z_axis_filename, "exists", exists) && exists)
	gettextureinfo	$tmp2092 in_z_axis_filename $const21 exists 	%line{1169} %argrw{"wrrw"}
	neq		$tmp2093 $tmp2092 $const12 	%argrw{"wrr"}
	if		$tmp2093 3661 3661 	%argrw{"r"}
	neq		$tmp2094 exists $const12 	%argrw{"wrr"}
	assign		$tmp2093 $tmp2094 	%argrw{"wr"}
	if		$tmp2093 5277 5282 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1171
#         gettextureinfo(in_z_axis_filename, "channels", numchannels);
	gettextureinfo	$tmp2095 in_z_axis_filename $const22 numchannels 	%line{1171} %argrw{"wrrw"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1173
#         if (blending[2] > 0.0 &&
	compref		$tmp2096 blending $const16 	%line{1173} %argrw{"wrr"}
	gt		$tmp2097 $tmp2096 $const7 	%argrw{"wrr"}
	neq		$tmp2098 $tmp2097 $const12 	%argrw{"wrr"}
	if		$tmp2098 3681 3681 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1174
#            (numchannels > 3 || max(in_z_axis_color) > 0.0))
	gt		$tmp2099 numchannels $const23 	%line{1174} %argrw{"wrr"}
	neq		$tmp2100 $tmp2099 $const12 	%argrw{"wrr"}
	if		$tmp2100 3670 3679 	%argrw{"r"}
	functioncall	$const24 3676 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp2102 in_z_axis_color $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp2104 in_z_axis_color $const2 	%argrw{"wrr"}
	compref		$tmp2105 in_z_axis_color $const16 	%argrw{"wrr"}
	max		$tmp2103 $tmp2104 $tmp2105 	%argrw{"wrr"}
	max		$tmp2101 $tmp2102 $tmp2103 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1174
#            (numchannels > 3 || max(in_z_axis_color) > 0.0))
	gt		$tmp2106 $tmp2101 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1174} %argrw{"wrr"}
	neq		$tmp2107 $tmp2106 $const12 	%argrw{"wrr"}
	assign		$tmp2100 $tmp2107 	%argrw{"wr"}
	neq		$tmp2108 $tmp2100 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1173
#         if (blending[2] > 0.0 &&
	assign		$tmp2098 $tmp2108 	%line{1173} %argrw{"wr"}
	if		$tmp2098 5277 5277 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1176
#             set_wrap_mode(in_z_axis_swrap, in_z_axis_twrap, wrap_mode);
	functioncall	$const25 3723 	%line{1176} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	functioncall	$const26 3702 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{69} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp2110 in_z_axis_swrap $const12 	%line{34} %argrw{"wrr"}
	if		$tmp2110 3688 3702 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp2109 $const27 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp2111 in_z_axis_swrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp2111 3692 3702 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp2109 $const28 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp2112 in_z_axis_swrap $const16 	%line{42} %argrw{"wrr"}
	if		$tmp2112 3696 3702 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp2109 $const29 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp2113 in_z_axis_swrap $const23 	%line{46} %argrw{"wrr"}
	if		$tmp2113 3700 3702 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp2109 $const30 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp2109 $const31 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	aassign		wrap_mode $const12 $tmp2109 	%line{69} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	functioncall	$const26 3722 	%line{70} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp2115 in_z_axis_twrap $const12 	%line{34} %argrw{"wrr"}
	if		$tmp2115 3708 3722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp2114 $const27 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp2116 in_z_axis_twrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp2116 3712 3722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp2114 $const28 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp2117 in_z_axis_twrap $const16 	%line{42} %argrw{"wrr"}
	if		$tmp2117 3716 3722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp2114 $const29 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp2118 in_z_axis_twrap $const23 	%line{46} %argrw{"wrr"}
	if		$tmp2118 3720 3722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp2114 $const30 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp2114 $const31 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	aassign		wrap_mode $const2 $tmp2114 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1180
#                 Pp[0],
	compref		$tmp2119 Pp $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1180} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1181
#                 Pp[1],
	compref		$tmp2120 Pp $const2 	%line{1181} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1187
#                 wrap_mode[0],
	aref		$tmp2121 wrap_mode $const12 	%line{1187} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1188
#                 wrap_mode[1],
	aref		$tmp2122 wrap_mode $const2 	%line{1188} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1191
#                 (int) -normal_sign[2],
	compref		$tmp2123 normal_sign $const16 	%line{1191} %argrw{"wrr"}
	neg		$tmp2124 $tmp2123 	%argrw{"wr"}
	assign		$tmp2125 $tmp2124 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1178
#             color z_axis = get_projection_color(
	functioncall	$const32 3802 	%line{1178} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:129
#     float st[2] = {s_coord, t_coord};
	aassign		___737_st $const12 $tmp2119 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{129} %argrw{"wrr"}
	aassign		___737_st $const2 $tmp2120 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:131
#     if (angle != 0.0)
	neq		$tmp2126 in_z_axis_rotation_angle $const7 	%line{131} %argrw{"wrr"}
	if		$tmp2126 3752 3752 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:133
#         rotate2d(st[0], st[1], angle, st[0], st[1]);
	aref		$tmp2127 ___737_st $const12 	%line{133} %argrw{"wrr"}
	aref		$tmp2128 ___737_st $const2 	%argrw{"wrr"}
	aref		$tmp2129 ___737_st $const12 	%argrw{"wrr"}
	aref		$tmp2130 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const33 3750 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:119
#     float angle_rad = radians(angle_in_degrees);
	functioncall	$const13 3743 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h"} %line{119} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp2131 $const14 $const15 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{88} %argrw{"wrr"}
	mul		___721_angle_rad in_z_axis_rotation_angle $tmp2131 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:121
#     sincos(angle_rad, s, c);
	sincos		___721_angle_rad ___721_s ___721_c 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h"} %line{121} %argrw{"rww"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:122
#     rx = x * c - s * y;
	mul		$tmp2132 $tmp2127 ___721_c 	%line{122} %argrw{"wrr"}
	mul		$tmp2133 ___721_s $tmp2128 	%argrw{"wrr"}
	sub		$tmp2129 $tmp2132 $tmp2133 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/transform/as_transform_helpers.h:123
#     ry = x * s + c * y;
	mul		$tmp2134 $tmp2127 ___721_s 	%line{123} %argrw{"wrr"}
	mul		$tmp2135 ___721_c $tmp2128 	%argrw{"wrr"}
	add		$tmp2130 $tmp2134 $tmp2135 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:133
#         rotate2d(st[0], st[1], angle, st[0], st[1]);
	aassign		___737_st $const12 $tmp2129 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{133} %argrw{"wrr"}
	aassign		___737_st $const2 $tmp2130 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	if		in_z_axis_sflip 3760 3766 	%line{136} %argrw{"r"}
	aref		$tmp2138 ___737_st $const12 	%argrw{"wrr"}
	functioncall	$const35 3759 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp2140 $tmp2138 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %argrw{"wrr"}
	floor		$tmp2139 $tmp2140 	%argrw{"wr"}
	mul		$tmp2141 $const34 $tmp2139 	%argrw{"wrr"}
	sub		$tmp2137 $tmp2138 $tmp2141 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	sub		$tmp2136 $const3 $tmp2137 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %argrw{"wrr"}
	aref		$tmp2142 ___737_st $const12 	%argrw{"wrr"}
	functioncall	$const35 3766 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp2144 $tmp2142 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %argrw{"wrr"}
	floor		$tmp2143 $tmp2144 	%argrw{"wr"}
	mul		$tmp2145 $const34 $tmp2143 	%argrw{"wrr"}
	sub		$tmp2136 $tmp2142 $tmp2145 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:136
#     st[0] = sflip ? 1.0 - mod(st[0], UVWRAP) : mod(st[0], UVWRAP);
	aassign		___737_st $const12 $tmp2136 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	if		in_z_axis_tflip 3775 3781 	%line{137} %argrw{"r"}
	aref		$tmp2148 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const35 3774 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp2150 $tmp2148 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp2149 $tmp2150 	%argrw{"wr"}
	mul		$tmp2151 $const34 $tmp2149 	%argrw{"wrr"}
	sub		$tmp2147 $tmp2148 $tmp2151 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	sub		$tmp2146 $const3 $tmp2147 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{137} %argrw{"wrr"}
	aref		$tmp2152 ___737_st $const2 	%argrw{"wrr"}
	functioncall	$const35 3781 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp2154 $tmp2152 $const34 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp2153 $tmp2154 	%argrw{"wr"}
	mul		$tmp2155 $const34 $tmp2153 	%argrw{"wrr"}
	sub		$tmp2146 $tmp2152 $tmp2155 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:137
#     st[1] = tflip ? 1.0 - mod(st[1], UVWRAP) : mod(st[1], UVWRAP);
	aassign		___737_st $const2 $tmp2146 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{137} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:139
#     st[0] *= width;
	aref		$tmp2156 ___737_st $const12 	%line{139} %argrw{"wrr"}
	mul		$tmp2157 $tmp2156 in_z_axis_width 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp2157 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:140
#     st[1] *= height;
	aref		$tmp2158 ___737_st $const2 	%line{140} %argrw{"wrr"}
	mul		$tmp2159 $tmp2158 in_z_axis_height 	%argrw{"wrr"}
	aassign		___737_st $const2 $tmp2159 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:142
#     st[0] += x_offset;
	aref		$tmp2160 ___737_st $const12 	%line{142} %argrw{"wrr"}
	add		$tmp2161 $tmp2160 in_z_axis_horizontal_offset 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp2161 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:143
#     st[1] += y_offset;
	aref		$tmp2162 ___737_st $const2 	%line{143} %argrw{"wrr"}
	add		$tmp2163 $tmp2162 in_z_axis_vertical_offset 	%argrw{"wrr"}
	aassign		___737_st $const2 $tmp2163 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:145
#     st[0] *= backside;
	aref		$tmp2164 ___737_st $const12 	%line{145} %argrw{"wrr"}
	assign		$tmp2166 $tmp2125 	%argrw{"wr"}
	mul		$tmp2165 $tmp2164 $tmp2166 	%argrw{"wrr"}
	aassign		___737_st $const12 $tmp2165 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:149
#         st[0],
	aref		$tmp2167 ___737_st $const12 	%line{149} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:150
#         st[1],
	aref		$tmp2168 ___737_st $const2 	%line{150} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:147
#     return (color) texture(
	texture		___763_z_axis in_z_axis_filename $tmp2167 $tmp2168 $const36 $tmp2121 $const37 $tmp2122 $const38 $const39 $const40 $const3 $const41 z_alpha 	%line{147} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:155
#         "alpha", alpha);
	return	%line{155}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1194
#             if (in_blend_mode == "Tangent Normal")
	eq		$tmp2170 in_blend_mode $const42 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1194} %argrw{"wrr"}
	if		$tmp2170 3860 5277 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1196
#                 normal tmp = clamp(z_axis * 2.0 - 1.0, -1.0, 1.0);
	mul		$tmp2171 ___763_z_axis $const10 	%line{1196} %argrw{"wrr"}
	sub		$tmp2172 $tmp2171 $const3 	%argrw{"wrr"}
	assign		$tmp2173 $const43 	%argrw{"wr"}
	assign		$tmp2174 $const3 	%argrw{"wr"}
	functioncall	$const30 3811 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:144
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp2175 $tmp2172 $tmp2174 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{144} %argrw{"wrr"}
	max		___764_tmp $tmp2175 $tmp2173 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1198
#                 if (in_z_axis_flip_r) tmp[0] *= -1;
	if		in_z_axis_flip_r 3815 3815 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1198} %argrw{"r"}
	compref		$tmp2176 ___764_tmp $const12 	%argrw{"wrr"}
	mul		$tmp2177 $tmp2176 $const43 	%argrw{"wrr"}
	compassign	___764_tmp $const12 $tmp2177 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1199
#                 if (in_z_axis_flip_g) tmp[1] *= -1;
	if		in_z_axis_flip_g 3819 3819 	%line{1199} %argrw{"r"}
	compref		$tmp2178 ___764_tmp $const2 	%argrw{"wrr"}
	mul		$tmp2179 $tmp2178 $const43 	%argrw{"wrr"}
	compassign	___764_tmp $const2 $tmp2179 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1201
#                 if (in_z_axis_swap_rg)
	if		in_z_axis_swap_rg 3824 3824 	%line{1201} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1203
#                     float x = tmp[0];
	compref		___765_x ___764_tmp $const12 	%line{1203} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1204
#                     tmp[0] = tmp[1];
	compref		$tmp2180 ___764_tmp $const2 	%line{1204} %argrw{"wrr"}
	compassign	___764_tmp $const12 $tmp2180 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1205
#                     tmp[1] = x;
	compassign	___764_tmp $const2 ___765_x 	%line{1205} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1208
#                 tmp[0] *= -normal_sign[2];
	compref		$tmp2181 ___764_tmp $const12 	%line{1208} %argrw{"wrr"}
	compref		$tmp2182 normal_sign $const16 	%argrw{"wrr"}
	neg		$tmp2183 $tmp2182 	%argrw{"wr"}
	mul		$tmp2184 $tmp2181 $tmp2183 	%argrw{"wrr"}
	compassign	___764_tmp $const12 $tmp2184 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1211
#                     normal(Nn[0], Nn[1], abs_normal[2]),
	compref		$tmp2186 Nn $const12 	%line{1211} %argrw{"wrr"}
	compref		$tmp2187 Nn $const2 	%argrw{"wrr"}
	compref		$tmp2188 abs_normal $const16 	%argrw{"wrr"}
	normal		$tmp2185 $tmp2186 $tmp2187 $tmp2188 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1210
#                 normal Z = rnm_blend(
	functioncall	$const44 3849 	%line{1210} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:932
#         normal a = A + normal(0.0, 0.0, 1.0);
	add		___739_a $tmp2185 $const45 	%line{932} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:933
#         normal b = B * normal(-1.0, -1.0, 1.0);
	mul		___739_b ___764_tmp $const46 	%line{933} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:934
#         normal n = a * dot(a, b) / a[2] - b;
	dot		$tmp2191 ___739_a ___739_b 	%line{934} %argrw{"wrr"}
	mul		$tmp2192 ___739_a $tmp2191 	%argrw{"wrr"}
	compref		$tmp2193 ___739_a $const16 	%argrw{"wrr"}
	div		$tmp2194 $tmp2192 $tmp2193 	%argrw{"wrr"}
	sub		___739_n $tmp2194 ___739_b 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:936
#         if (n[2] < 0)
	compref		$tmp2195 ___739_n $const16 	%line{936} %argrw{"wrr"}
	lt		$tmp2196 $tmp2195 $const12 	%argrw{"wrr"}
	if		$tmp2196 3848 3848 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:938
#             n = normalize(normal(n[0], n[1], 0.0));
	compref		$tmp2198 ___739_n $const12 	%line{938} %argrw{"wrr"}
	compref		$tmp2199 ___739_n $const2 	%argrw{"wrr"}
	normal		$tmp2197 $tmp2198 $tmp2199 $const7 	%argrw{"wrrr"}
	normalize	___739_n $tmp2197 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:940
#         return n;
	assign		___764_Z ___739_n 	%line{940} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1214
#                 Z[2] *= normal_sign[2];
	compref		$tmp2200 ___764_Z $const16 	%line{1214} %argrw{"wrr"}
	compref		$tmp2201 normal_sign $const16 	%argrw{"wrr"}
	mul		$tmp2202 $tmp2200 $tmp2201 	%argrw{"wrr"}
	compassign	___764_Z $const16 $tmp2202 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1216
#                 out_normal += blending[2] * normal(Z[0], Z[1], Z[2]);
	compref		$tmp2203 blending $const16 	%line{1216} %argrw{"wrr"}
	compref		$tmp2205 ___764_Z $const12 	%argrw{"wrr"}
	compref		$tmp2206 ___764_Z $const2 	%argrw{"wrr"}
	compref		$tmp2207 ___764_Z $const16 	%argrw{"wrr"}
	normal		$tmp2204 $tmp2205 $tmp2206 $tmp2207 	%argrw{"wrrr"}
	mul		$tmp2208 $tmp2203 $tmp2204 	%argrw{"wrr"}
	add		out_normal out_normal $tmp2208 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1220
#                 if (in_enable_cms && max(in_z_axis_color) > 0.0 &&
	neq		$tmp2209 in_enable_cms $const12 	%line{1220} %argrw{"wrr"}
	if		$tmp2209 3871 3871 	%argrw{"r"}
	functioncall	$const24 3868 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp2211 in_z_axis_color $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp2213 in_z_axis_color $const2 	%argrw{"wrr"}
	compref		$tmp2214 in_z_axis_color $const16 	%argrw{"wrr"}
	max		$tmp2212 $tmp2213 $tmp2214 	%argrw{"wrr"}
	max		$tmp2210 $tmp2211 $tmp2212 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1220
#                 if (in_enable_cms && max(in_z_axis_color) > 0.0 &&
	gt		$tmp2215 $tmp2210 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1220} %argrw{"wrr"}
	neq		$tmp2216 $tmp2215 $const12 	%argrw{"wrr"}
	assign		$tmp2209 $tmp2216 	%argrw{"wr"}
	neq		$tmp2217 $tmp2209 $const12 	%argrw{"wrr"}
	if		$tmp2217 3882 3882 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1221
#                     max(z_axis) > 0.0)
	functioncall	$const24 3879 	%line{1221} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp2219 ___763_z_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp2221 ___763_z_axis $const2 	%argrw{"wrr"}
	compref		$tmp2222 ___763_z_axis $const16 	%argrw{"wrr"}
	max		$tmp2220 $tmp2221 $tmp2222 	%argrw{"wrr"}
	max		$tmp2218 $tmp2219 $tmp2220 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1221
#                     max(z_axis) > 0.0)
	gt		$tmp2223 $tmp2218 $const7 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1221} %argrw{"wrr"}
	neq		$tmp2224 $tmp2223 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1220
#                 if (in_enable_cms && max(in_z_axis_color) > 0.0 &&
	assign		$tmp2217 $tmp2224 	%line{1220} %argrw{"wr"}
	if		$tmp2217 5270 5270 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1223
#                     z_axis = apply_color_management(
	functioncall	$const47 5270 	%line{1223} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:376
#     if (eotf == "Raw")
	eq		$tmp2225 in_z_tex_eotf $const48 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{376} %argrw{"wrr"}
	if		$tmp2225 3887 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:378
#         scene_linear_cms = input;
	assign		___687_scene_linear_cms ___763_z_axis 	%line{378} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:380
#     else if (eotf == "sRGB")
	eq		$tmp2226 in_z_tex_eotf $const49 	%line{380} %argrw{"wrr"}
	if		$tmp2226 3927 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:382
#         scene_linear_cms = sRGB_EOTF(input);
	functioncall	$const50 3927 	%line{382} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp2228 ___763_z_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 3902 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2229 $tmp2228 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2229 3897 3901 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2230 $tmp2228 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2231 $tmp2230 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2231 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2232 $tmp2228 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2232 3900 3901 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2228 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2227 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp2234 ___763_z_axis $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 3914 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2235 $tmp2234 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2235 3909 3913 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2236 $tmp2234 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2237 $tmp2236 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2237 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2238 $tmp2234 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2238 3912 3913 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2234 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2233 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp2240 ___763_z_axis $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 3926 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2241 $tmp2240 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2241 3921 3925 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2242 $tmp2240 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2243 $tmp2242 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2243 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2244 $tmp2240 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2244 3924 3925 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2240 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2239 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___687_scene_linear_cms $tmp2227 $tmp2233 $tmp2239 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:384
#     else if (eotf == "Rec.709")
	eq		$tmp2245 in_z_tex_eotf $const56 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{384} %argrw{"wrr"}
	if		$tmp2245 3973 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:386
#         scene_linear_cms = Rec709_EOTF(input);
	functioncall	$const57 3973 	%line{386} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:154
#         Rec709_EOTF(value[0]),
	compref		$tmp2247 ___763_z_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{154} %argrw{"wrr"}
	functioncall	$const57 3944 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp2248 $tmp2247 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp2248 3938 3943 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp2249 $tmp2247 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp2250 $tmp2249 $const60 	%argrw{"wrr"}
	div		$tmp2251 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp2250 $tmp2251 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp2252 $tmp2247 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp2252 3942 3943 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp2253 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp2253 $tmp2247 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp2246 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:155
#         Rec709_EOTF(value[1]),
	compref		$tmp2255 ___763_z_axis $const2 	%line{155} %argrw{"wrr"}
	functioncall	$const57 3958 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp2256 $tmp2255 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp2256 3952 3957 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp2257 $tmp2255 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp2258 $tmp2257 $const60 	%argrw{"wrr"}
	div		$tmp2259 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp2258 $tmp2259 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp2260 $tmp2255 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp2260 3956 3957 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp2261 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp2261 $tmp2255 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp2254 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:156
#         Rec709_EOTF(value[2]));
	compref		$tmp2263 ___763_z_axis $const16 	%line{156} %argrw{"wrr"}
	functioncall	$const57 3972 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp2264 $tmp2263 $const58 	%line{115} %argrw{"wrr"}
	if		$tmp2264 3966 3971 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp2265 $tmp2263 $const59 	%line{117} %argrw{"wrr"}
	div		$tmp2266 $tmp2265 $const60 	%argrw{"wrr"}
	div		$tmp2267 $const3 $const61 	%argrw{"wrr"}
	pow		___518_linear_out $tmp2266 $tmp2267 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp2268 $tmp2263 $const12 	%line{119} %argrw{"wrr"}
	if		$tmp2268 3970 3971 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp2269 $const3 $const62 	%line{121} %argrw{"wrr"}
	mul		___518_linear_out $tmp2269 $tmp2263 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___518_linear_out $const12 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp2262 ___518_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:153
#     return color(
	color		___687_scene_linear_cms $tmp2246 $tmp2254 $tmp2262 	%line{153} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:388
#     else if (eotf == "Gamma 2.2")
	eq		$tmp2270 in_z_tex_eotf $const63 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{388} %argrw{"wrr"}
	if		$tmp2270 4001 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:390
#         scene_linear_cms = gamma_CCTF(input, 2.2);
	functioncall	$const65 4001 	%line{390} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2272 ___763_z_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 3984 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2273 $tmp2272 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2273 3982 3984 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2271 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2271 $tmp2272 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2275 ___763_z_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 3992 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2276 $tmp2275 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2276 3990 3992 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2274 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2274 $tmp2275 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2278 ___763_z_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4000 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2279 $tmp2278 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2279 3998 4000 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2277 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2277 $tmp2278 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp2271 $tmp2274 $tmp2277 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:392
#     else if (eotf == "Gamma 2.4")
	eq		$tmp2280 in_z_tex_eotf $const66 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{392} %argrw{"wrr"}
	if		$tmp2280 4029 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:394
#         scene_linear_cms = gamma_CCTF(input, 2.4);
	functioncall	$const65 4029 	%line{394} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2282 ___763_z_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2283 $tmp2282 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2283 4010 4012 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2281 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2281 $tmp2282 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2285 ___763_z_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4020 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2286 $tmp2285 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2286 4018 4020 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2284 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2284 $tmp2285 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2288 ___763_z_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4028 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2289 $tmp2288 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2289 4026 4028 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2287 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2287 $tmp2288 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp2281 $tmp2284 $tmp2287 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:396
#     else if (eotf == "Gamma 2.6 (DCI)")
	eq		$tmp2290 in_z_tex_eotf $const67 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{396} %argrw{"wrr"}
	if		$tmp2290 4057 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:398
#         scene_linear_cms = gamma_CCTF(input, DCIP3_GAMMA);
	functioncall	$const65 4057 	%line{398} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2292 ___763_z_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4040 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2293 $tmp2292 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2293 4038 4040 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2291 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2291 $tmp2292 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2295 ___763_z_axis $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4048 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2296 $tmp2295 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2296 4046 4048 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2294 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2294 $tmp2295 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2298 ___763_z_axis $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4056 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2299 $tmp2298 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2299 4054 4056 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2297 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2297 $tmp2298 $const68 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___687_scene_linear_cms $tmp2291 $tmp2294 $tmp2297 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:400
#     else if (eotf == "Rec.1886")
	eq		$tmp2300 in_z_tex_eotf $const69 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{400} %argrw{"wrr"}
	if		$tmp2300 4082 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:402
#         scene_linear_cms = Rec1886_EOTF(input);
	functioncall	$const70 4082 	%line{402} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp2302 ___763_z_axis $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 4067 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2303 $tmp2302 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2303 4065 4066 	%argrw{"r"}
	pow		$tmp2301 $tmp2302 $const54 	%argrw{"wrr"}
	assign		$tmp2301 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp2305 ___763_z_axis $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 4074 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2306 $tmp2305 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2306 4072 4073 	%argrw{"r"}
	pow		$tmp2304 $tmp2305 $const54 	%argrw{"wrr"}
	assign		$tmp2304 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp2308 ___763_z_axis $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 4081 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2309 $tmp2308 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2309 4079 4080 	%argrw{"r"}
	pow		$tmp2307 $tmp2308 $const54 	%argrw{"wrr"}
	assign		$tmp2307 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___687_scene_linear_cms $tmp2301 $tmp2304 $tmp2307 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:404
#     else if (eotf == "Rec.2020")
	eq		$tmp2310 in_z_tex_eotf $const71 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{404} %argrw{"wrr"}
	if		$tmp2310 4147 4149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:406
#         scene_linear_cms = Rec2020_EOTF(input);
	functioncall	$const72 4147 	%line{406} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:266
#     return Rec2020_EOTF(value, 12);
	functioncall	$const72 4147 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{266} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:251
#         Rec2020_EOTF(value[0], bitdepth),
	compref		$tmp2312 ___763_z_axis $const12 	%line{251} %argrw{"wrr"}
	functioncall	$const72 4106 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp2313 $tmp2312 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp2313 4104 4105 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp2314 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp2314 4094 4096 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp2315 $tmp2312 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp2315 4099 4104 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp2312 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp2316 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp2317 $tmp2312 $tmp2316 	%argrw{"wrr"}
	div		$tmp2318 $tmp2317 ___529_alpha 	%argrw{"wrr"}
	div		$tmp2319 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp2318 $tmp2319 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp2311 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:252
#         Rec2020_EOTF(value[1], bitdepth),
	compref		$tmp2321 ___763_z_axis $const2 	%line{252} %argrw{"wrr"}
	functioncall	$const72 4126 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp2322 $tmp2321 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp2322 4124 4125 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp2323 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp2323 4114 4116 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp2324 $tmp2321 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp2324 4119 4124 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp2321 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp2325 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp2326 $tmp2321 $tmp2325 	%argrw{"wrr"}
	div		$tmp2327 $tmp2326 ___529_alpha 	%argrw{"wrr"}
	div		$tmp2328 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp2327 $tmp2328 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp2320 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:253
#         Rec2020_EOTF(value[2], bitdepth));
	compref		$tmp2330 ___763_z_axis $const16 	%line{253} %argrw{"wrr"}
	functioncall	$const72 4146 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp2331 $tmp2330 $const12 	%line{180} %argrw{"wrr"}
	if		$tmp2331 4144 4145 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp2332 $const73 $const74 	%line{184} %argrw{"wrr"}
	if		$tmp2332 4134 4136 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___529_alpha $const60 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___529_beta $const75 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___529_alpha $const76 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___529_beta $const77 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp2333 $tmp2330 ___529_beta 	%line{195} %argrw{"wrr"}
	if		$tmp2333 4139 4144 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___528_linear_out $tmp2330 $const62 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp2334 ___529_alpha $const3 	%line{201} %argrw{"wrr"}
	add		$tmp2335 $tmp2330 $tmp2334 	%argrw{"wrr"}
	div		$tmp2336 $tmp2335 ___529_alpha 	%argrw{"wrr"}
	div		$tmp2337 $const3 $const61 	%argrw{"wrr"}
	pow		___528_linear_out $tmp2336 $tmp2337 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___528_linear_out $const12 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp2329 ___528_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:250
#     return color(
	color		___687_scene_linear_cms $tmp2311 $tmp2320 $tmp2329 	%line{250} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:416
#         return color(0);
	assign		___763_z_axis $const39 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{416} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:424
#     if (rgb_primaries != "Raw" &&
	neq		$tmp2338 in_z_tex_rgb_primaries $const48 	%line{424} %argrw{"wrr"}
	neq		$tmp2339 $tmp2338 $const12 	%argrw{"wrr"}
	if		$tmp2339 4155 4155 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:425
#         rgb_primaries != workingspace_rgb_primaries)
	neq		$tmp2340 in_z_tex_rgb_primaries in_workingspace_rgb_primaries 	%line{425} %argrw{"wrr"}
	neq		$tmp2341 $tmp2340 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:424
#     if (rgb_primaries != "Raw" &&
	assign		$tmp2339 $tmp2341 	%line{424} %argrw{"wr"}
	if		$tmp2339 5269 5269 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:427
#         scene_linear_cms = transform_colorspace_to_workingspace(
	functioncall	$const78 5269 	%line{427} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp2342 in_workingspace_rgb_primaries $const79 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{510} %argrw{"wrr"}
	neq		$tmp2343 $tmp2342 $const12 	%argrw{"wrr"}
	if		$tmp2343 4160 4163 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:511
#         working_space == "sRGB/Rec.709")
	eq		$tmp2344 in_workingspace_rgb_primaries $const80 	%line{511} %argrw{"wrr"}
	neq		$tmp2345 $tmp2344 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp2343 $tmp2345 	%line{510} %argrw{"wr"}
	if		$tmp2343 4364 5268 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:513
#         C = transform_color_space_to_Rec709(input_color, color_space);
	functioncall	$const81 4364 	%line{513} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:47
#     vector v_color = vector(input_color);
	assign		___560_v_color ___687_scene_linear_cms 	%line{47} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:49
#     if (color_space == "sRGB")
	eq		$tmp2346 in_z_tex_rgb_primaries $const49 	%line{49} %argrw{"wrr"}
	if		$tmp2346 4206 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:51
#         transformed_color = sRGB_EOTF(input_color);
	functioncall	$const50 4206 	%line{51} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp2348 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 4181 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2349 $tmp2348 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2349 4176 4180 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2350 $tmp2348 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2351 $tmp2350 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2351 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2352 $tmp2348 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2352 4179 4180 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2348 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2347 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp2354 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 4193 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2355 $tmp2354 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2355 4188 4192 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2356 $tmp2354 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2357 $tmp2356 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2357 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2358 $tmp2354 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2358 4191 4192 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2354 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2353 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp2360 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 4205 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2361 $tmp2360 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2361 4200 4204 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2362 $tmp2360 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2363 $tmp2362 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2363 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2364 $tmp2360 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2364 4203 4204 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2360 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2359 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___560_transformed_color $tmp2347 $tmp2353 $tmp2359 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp2365 in_z_tex_rgb_primaries $const79 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{53} %argrw{"wrr"}
	neq		$tmp2366 $tmp2365 $const12 	%argrw{"wrr"}
	if		$tmp2366 4209 4212 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:54
#              color_space == "sRGB/Rec.709")
	eq		$tmp2367 in_z_tex_rgb_primaries $const80 	%line{54} %argrw{"wrr"}
	neq		$tmp2368 $tmp2367 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp2366 $tmp2368 	%line{53} %argrw{"wr"}
	if		$tmp2366 4214 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:56
#         transformed_color = input_color;
	assign		___560_transformed_color ___687_scene_linear_cms 	%line{56} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp2369 in_z_tex_rgb_primaries $const82 	%line{58} %argrw{"wrr"}
	neq		$tmp2370 $tmp2369 $const12 	%argrw{"wrr"}
	if		$tmp2370 4217 4220 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:59
#              color_space == "Rec.2020")
	eq		$tmp2371 in_z_tex_rgb_primaries $const71 	%line{59} %argrw{"wrr"}
	neq		$tmp2372 $tmp2371 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp2370 $tmp2372 	%line{58} %argrw{"wr"}
	if		$tmp2370 4225 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:62
#             dot(vector(REC2020_TO_REC709_X), v_color),
	dot		$tmp2373 $const83 ___560_v_color 	%line{62} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:63
#             dot(vector(REC2020_TO_REC709_Y), v_color),
	dot		$tmp2375 $const84 ___560_v_color 	%line{63} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:64
#             dot(vector(REC2020_TO_REC709_Z), v_color));
	dot		$tmp2377 $const85 ___560_v_color 	%line{64} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:61
#         transformed_color = color(
	color		___560_transformed_color $tmp2373 $tmp2375 $tmp2377 	%line{61} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp2379 in_z_tex_rgb_primaries $const86 	%line{66} %argrw{"wrr"}
	neq		$tmp2380 $tmp2379 $const12 	%argrw{"wrr"}
	if		$tmp2380 4228 4231 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:67
#              color_space == "DCI-P3")
	eq		$tmp2381 in_z_tex_rgb_primaries $const87 	%line{67} %argrw{"wrr"}
	neq		$tmp2382 $tmp2381 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp2380 $tmp2382 	%line{66} %argrw{"wr"}
	if		$tmp2380 4236 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:70
#             dot(vector(DCIP3_TO_REC709_X), v_color),
	dot		$tmp2383 $const88 ___560_v_color 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:71
#             dot(vector(DCIP3_TO_REC709_Y), v_color),
	dot		$tmp2385 $const89 ___560_v_color 	%line{71} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:72
#             dot(vector(DCIP3_TO_REC709_Z), v_color));
	dot		$tmp2387 $const90 ___560_v_color 	%line{72} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:69
#         transformed_color = color(
	color		___560_transformed_color $tmp2383 $tmp2385 $tmp2387 	%line{69} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:74
#     else if (color_space == "camera Rec 709")
	eq		$tmp2389 in_z_tex_rgb_primaries $const91 	%line{74} %argrw{"wrr"}
	if		$tmp2389 4261 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:76
#         transformed_color = Rec1886_EOTF(input_color);
	functioncall	$const70 4261 	%line{76} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp2391 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 4246 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2392 $tmp2391 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2392 4244 4245 	%argrw{"r"}
	pow		$tmp2390 $tmp2391 $const54 	%argrw{"wrr"}
	assign		$tmp2390 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp2394 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 4253 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2395 $tmp2394 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2395 4251 4252 	%argrw{"r"}
	pow		$tmp2393 $tmp2394 $const54 	%argrw{"wrr"}
	assign		$tmp2393 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp2397 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 4260 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2398 $tmp2397 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2398 4258 4259 	%argrw{"r"}
	pow		$tmp2396 $tmp2397 $const54 	%argrw{"wrr"}
	assign		$tmp2396 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___560_transformed_color $tmp2390 $tmp2393 $tmp2396 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:78
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp2399 in_z_tex_rgb_primaries $const92 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{78} %argrw{"wrr"}
	if		$tmp2399 4289 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:80
#         transformed_color = gamma_CCTF(input_color, 1.8);
	functioncall	$const65 4289 	%line{80} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2401 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4272 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2402 $tmp2401 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2402 4270 4272 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2400 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2400 $tmp2401 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2404 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4280 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2405 $tmp2404 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2405 4278 4280 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2403 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2403 $tmp2404 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2407 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4288 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2408 $tmp2407 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2408 4286 4288 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2406 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2406 $tmp2407 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp2400 $tmp2403 $tmp2406 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:82
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp2409 in_z_tex_rgb_primaries $const94 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{82} %argrw{"wrr"}
	if		$tmp2409 4317 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:84
#         transformed_color = gamma_CCTF(input_color, 2.2);
	functioncall	$const65 4317 	%line{84} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2411 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4300 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2412 $tmp2411 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2412 4298 4300 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2410 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2410 $tmp2411 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2414 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4308 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2415 $tmp2414 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2415 4306 4308 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2413 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2413 $tmp2414 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2417 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4316 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2418 $tmp2417 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2418 4314 4316 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2416 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2416 $tmp2417 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp2410 $tmp2413 $tmp2416 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:86
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp2419 in_z_tex_rgb_primaries $const95 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{86} %argrw{"wrr"}
	if		$tmp2419 4345 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:88
#         transformed_color = gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 4345 	%line{88} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2421 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4328 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2422 $tmp2421 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2422 4326 4328 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2420 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2420 $tmp2421 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2424 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2425 $tmp2424 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2425 4334 4336 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2423 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2423 $tmp2424 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2427 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4344 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2428 $tmp2427 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2428 4342 4344 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2426 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2426 $tmp2427 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___560_transformed_color $tmp2420 $tmp2423 $tmp2426 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:90
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp2429 in_z_tex_rgb_primaries $const96 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{90} %argrw{"wrr"}
	neq		$tmp2430 $tmp2429 $const12 	%argrw{"wrr"}
	if		$tmp2430 4348 4351 	%argrw{"r"}
	eq		$tmp2431 in_z_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp2432 $tmp2431 $const12 	%argrw{"wrr"}
	assign		$tmp2430 $tmp2432 	%argrw{"wr"}
	if		$tmp2430 4356 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:93
#             dot(vector(ACES_TO_REC709_X), v_color),
	dot		$tmp2433 $const98 ___560_v_color 	%line{93} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:94
#             dot(vector(ACES_TO_REC709_Y), v_color),
	dot		$tmp2435 $const99 ___560_v_color 	%line{94} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:95
#             dot(vector(ACES_TO_REC709_Z), v_color));
	dot		$tmp2437 $const100 ___560_v_color 	%line{95} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:92
#         transformed_color = color(
	color		___560_transformed_color $tmp2433 $tmp2435 $tmp2437 	%line{92} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:97
#     else if (color_space == "ACEScg")
	eq		$tmp2439 in_z_tex_rgb_primaries $const101 	%line{97} %argrw{"wrr"}
	if		$tmp2439 4362 4363 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:100
#             dot(vector(ACESCG_TO_REC709_X), v_color),
	dot		$tmp2440 $const102 ___560_v_color 	%line{100} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:101
#             dot(vector(ACESCG_TO_REC709_Y), v_color),
	dot		$tmp2442 $const103 ___560_v_color 	%line{101} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:102
#             dot(vector(ACESCG_TO_REC709_Z), v_color));
	dot		$tmp2444 $const104 ___560_v_color 	%line{102} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:99
#         transformed_color = color(
	color		___560_transformed_color $tmp2440 $tmp2442 $tmp2444 	%line{99} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:106
#         transformed_color = color(0);
	assign		___560_transformed_color $const39 	%line{106} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:108
#     return transformed_color;
	assign		___620_C ___560_transformed_color 	%line{108} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	eq		$tmp2446 in_workingspace_rgb_primaries $const82 	%line{515} %argrw{"wrr"}
	neq		$tmp2447 $tmp2446 $const12 	%argrw{"wrr"}
	if		$tmp2447 4367 4370 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:516
#              working_space == "Rec.2020")
	eq		$tmp2448 in_workingspace_rgb_primaries $const71 	%line{516} %argrw{"wrr"}
	neq		$tmp2449 $tmp2448 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	assign		$tmp2447 $tmp2449 	%line{515} %argrw{"wr"}
	if		$tmp2447 4591 5268 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:518
#         C = transform_color_space_to_Rec2020(input_color, color_space);
	functioncall	$const105 4591 	%line{518} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:120
#     vector v_color = vector(input_color);
	assign		___572_v_color ___687_scene_linear_cms 	%line{120} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:122
#     if (color_space == "sRGB")
	eq		$tmp2450 in_z_tex_rgb_primaries $const49 	%line{122} %argrw{"wrr"}
	if		$tmp2450 4417 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:124
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 4413 	%line{124} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp2452 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 4388 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2453 $tmp2452 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2453 4383 4387 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2454 $tmp2452 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2455 $tmp2454 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2455 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2456 $tmp2452 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2456 4386 4387 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2452 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2451 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp2458 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 4400 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2459 $tmp2458 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2459 4395 4399 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2460 $tmp2458 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2461 $tmp2460 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2461 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2462 $tmp2458 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2462 4398 4399 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2458 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2457 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp2464 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 4412 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2465 $tmp2464 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2465 4407 4411 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2466 $tmp2464 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2467 $tmp2466 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2467 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2468 $tmp2464 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2468 4410 4411 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2464 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2463 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___572_v_color $tmp2451 $tmp2457 $tmp2463 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:127
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp2469 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{127} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:128
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp2471 $const107 ___572_v_color 	%line{128} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:129
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp2473 $const108 ___572_v_color 	%line{129} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:126
#         transformed_color = color(
	color		___572_transformed_color $tmp2469 $tmp2471 $tmp2473 	%line{126} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp2475 in_z_tex_rgb_primaries $const79 	%line{131} %argrw{"wrr"}
	neq		$tmp2476 $tmp2475 $const12 	%argrw{"wrr"}
	if		$tmp2476 4420 4423 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:132
#              color_space == "sRGB/Rec.709")
	eq		$tmp2477 in_z_tex_rgb_primaries $const80 	%line{132} %argrw{"wrr"}
	neq		$tmp2478 $tmp2477 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp2476 $tmp2478 	%line{131} %argrw{"wr"}
	if		$tmp2476 4428 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:135
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp2479 $const106 ___572_v_color 	%line{135} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:136
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp2481 $const107 ___572_v_color 	%line{136} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:137
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp2483 $const108 ___572_v_color 	%line{137} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:134
#         transformed_color = color(
	color		___572_transformed_color $tmp2479 $tmp2481 $tmp2483 	%line{134} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp2485 in_z_tex_rgb_primaries $const82 	%line{139} %argrw{"wrr"}
	neq		$tmp2486 $tmp2485 $const12 	%argrw{"wrr"}
	if		$tmp2486 4431 4434 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:140
#              color_space == "Rec.2020")
	eq		$tmp2487 in_z_tex_rgb_primaries $const71 	%line{140} %argrw{"wrr"}
	neq		$tmp2488 $tmp2487 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp2486 $tmp2488 	%line{139} %argrw{"wr"}
	if		$tmp2486 4436 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:142
#         transformed_color = input_color;
	assign		___572_transformed_color ___687_scene_linear_cms 	%line{142} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp2489 in_z_tex_rgb_primaries $const86 	%line{144} %argrw{"wrr"}
	neq		$tmp2490 $tmp2489 $const12 	%argrw{"wrr"}
	if		$tmp2490 4439 4442 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:145
#              color_space == "DCI-P3")
	eq		$tmp2491 in_z_tex_rgb_primaries $const87 	%line{145} %argrw{"wrr"}
	neq		$tmp2492 $tmp2491 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp2490 $tmp2492 	%line{144} %argrw{"wr"}
	if		$tmp2490 4447 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:148
#             dot(vector(DCIP3_TO_REC2020_X), v_color),
	dot		$tmp2493 $const109 ___572_v_color 	%line{148} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:149
#             dot(vector(DCIP3_TO_REC2020_Y), v_color),
	dot		$tmp2495 $const110 ___572_v_color 	%line{149} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:150
#             dot(vector(DCIP3_TO_REC2020_Z), v_color));
	dot		$tmp2497 $const111 ___572_v_color 	%line{150} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:147
#         transformed_color = color(
	color		___572_transformed_color $tmp2493 $tmp2495 $tmp2497 	%line{147} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:152
#     else if (color_space == "camera Rec 709")
	eq		$tmp2499 in_z_tex_rgb_primaries $const91 	%line{152} %argrw{"wrr"}
	if		$tmp2499 4476 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:154
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 4472 	%line{154} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp2501 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 4457 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2502 $tmp2501 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2502 4455 4456 	%argrw{"r"}
	pow		$tmp2500 $tmp2501 $const54 	%argrw{"wrr"}
	assign		$tmp2500 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp2504 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 4464 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2505 $tmp2504 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2505 4462 4463 	%argrw{"r"}
	pow		$tmp2503 $tmp2504 $const54 	%argrw{"wrr"}
	assign		$tmp2503 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp2507 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 4471 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2508 $tmp2507 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2508 4469 4470 	%argrw{"r"}
	pow		$tmp2506 $tmp2507 $const54 	%argrw{"wrr"}
	assign		$tmp2506 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___572_v_color $tmp2500 $tmp2503 $tmp2506 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:157
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp2509 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{157} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:158
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp2511 $const107 ___572_v_color 	%line{158} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:159
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp2513 $const108 ___572_v_color 	%line{159} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:156
#         transformed_color = color(
	color		___572_transformed_color $tmp2509 $tmp2511 $tmp2513 	%line{156} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:161
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp2515 in_z_tex_rgb_primaries $const92 	%line{161} %argrw{"wrr"}
	if		$tmp2515 4508 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:163
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 4504 	%line{163} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2517 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4487 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2518 $tmp2517 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2518 4485 4487 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2516 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2516 $tmp2517 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2520 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4495 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2521 $tmp2520 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2521 4493 4495 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2519 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2519 $tmp2520 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2523 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4503 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2524 $tmp2523 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2524 4501 4503 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2522 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2522 $tmp2523 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp2516 $tmp2519 $tmp2522 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:166
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp2525 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{166} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:167
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp2527 $const107 ___572_v_color 	%line{167} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:168
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp2529 $const108 ___572_v_color 	%line{168} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:165
#         transformed_color = color(
	color		___572_transformed_color $tmp2525 $tmp2527 $tmp2529 	%line{165} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:170
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp2531 in_z_tex_rgb_primaries $const94 	%line{170} %argrw{"wrr"}
	if		$tmp2531 4540 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:172
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 4536 	%line{172} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2533 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4519 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2534 $tmp2533 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2534 4517 4519 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2532 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2532 $tmp2533 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2536 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4527 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2537 $tmp2536 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2537 4525 4527 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2535 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2535 $tmp2536 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2539 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4535 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2540 $tmp2539 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2540 4533 4535 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2538 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2538 $tmp2539 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp2532 $tmp2535 $tmp2538 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:175
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp2541 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{175} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:176
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp2543 $const107 ___572_v_color 	%line{176} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:177
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp2545 $const108 ___572_v_color 	%line{177} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:174
#         transformed_color = color(
	color		___572_transformed_color $tmp2541 $tmp2543 $tmp2545 	%line{174} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:179
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp2547 in_z_tex_rgb_primaries $const95 	%line{179} %argrw{"wrr"}
	if		$tmp2547 4572 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:181
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 4568 	%line{181} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2549 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4551 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2550 $tmp2549 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2550 4549 4551 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2548 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2548 $tmp2549 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2552 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4559 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2553 $tmp2552 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2553 4557 4559 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2551 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2551 $tmp2552 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2555 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4567 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2556 $tmp2555 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2556 4565 4567 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2554 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2554 $tmp2555 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___572_v_color $tmp2548 $tmp2551 $tmp2554 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:184
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp2557 $const106 ___572_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{184} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:185
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp2559 $const107 ___572_v_color 	%line{185} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:186
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp2561 $const108 ___572_v_color 	%line{186} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:183
#         transformed_color = color(
	color		___572_transformed_color $tmp2557 $tmp2559 $tmp2561 	%line{183} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:188
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp2563 in_z_tex_rgb_primaries $const96 	%line{188} %argrw{"wrr"}
	neq		$tmp2564 $tmp2563 $const12 	%argrw{"wrr"}
	if		$tmp2564 4575 4578 	%argrw{"r"}
	eq		$tmp2565 in_z_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp2566 $tmp2565 $const12 	%argrw{"wrr"}
	assign		$tmp2564 $tmp2566 	%argrw{"wr"}
	if		$tmp2564 4583 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:191
#             dot(vector(ACES_TO_REC2020_X), v_color),
	dot		$tmp2567 $const112 ___572_v_color 	%line{191} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:192
#             dot(vector(ACES_TO_REC2020_Y), v_color),
	dot		$tmp2569 $const113 ___572_v_color 	%line{192} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:193
#             dot(vector(ACES_TO_REC2020_Z), v_color));
	dot		$tmp2571 $const114 ___572_v_color 	%line{193} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:190
#         transformed_color = color(
	color		___572_transformed_color $tmp2567 $tmp2569 $tmp2571 	%line{190} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:195
#     else if (color_space == "ACEScg")
	eq		$tmp2573 in_z_tex_rgb_primaries $const101 	%line{195} %argrw{"wrr"}
	if		$tmp2573 4589 4590 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:198
#             dot(vector(ACESCG_TO_REC2020_X), v_color),
	dot		$tmp2574 $const115 ___572_v_color 	%line{198} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:199
#             dot(vector(ACESCG_TO_REC2020_Y), v_color),
	dot		$tmp2576 $const116 ___572_v_color 	%line{199} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:200
#             dot(vector(ACESCG_TO_REC2020_Z), v_color));
	dot		$tmp2578 $const117 ___572_v_color 	%line{200} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:197
#         transformed_color = color(
	color		___572_transformed_color $tmp2574 $tmp2576 $tmp2578 	%line{197} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:204
#         transformed_color = color(0);
	assign		___572_transformed_color $const39 	%line{204} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:206
#     return transformed_color;
	assign		___620_C ___572_transformed_color 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	eq		$tmp2580 in_workingspace_rgb_primaries $const86 	%line{520} %argrw{"wrr"}
	neq		$tmp2581 $tmp2580 $const12 	%argrw{"wrr"}
	if		$tmp2581 4594 4597 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:521
#              working_space == "DCI-P3")
	eq		$tmp2582 in_workingspace_rgb_primaries $const87 	%line{521} %argrw{"wrr"}
	neq		$tmp2583 $tmp2582 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	assign		$tmp2581 $tmp2583 	%line{520} %argrw{"wr"}
	if		$tmp2581 4818 5268 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:523
#         C = transform_color_space_to_DCIP3(input_color, color_space);
	functioncall	$const118 4818 	%line{523} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:218
#     vector v_color = vector(input_color);
	assign		___584_v_color ___687_scene_linear_cms 	%line{218} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:220
#     if (color_space == "sRGB")
	eq		$tmp2584 in_z_tex_rgb_primaries $const49 	%line{220} %argrw{"wrr"}
	if		$tmp2584 4644 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:222
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 4640 	%line{222} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp2586 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 4615 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2587 $tmp2586 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2587 4610 4614 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2588 $tmp2586 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2589 $tmp2588 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2589 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2590 $tmp2586 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2590 4613 4614 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2586 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2585 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp2592 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 4627 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2593 $tmp2592 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2593 4622 4626 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2594 $tmp2592 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2595 $tmp2594 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2595 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2596 $tmp2592 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2596 4625 4626 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2592 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2591 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp2598 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 4639 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2599 $tmp2598 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2599 4634 4638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2600 $tmp2598 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2601 $tmp2600 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2601 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2602 $tmp2598 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2602 4637 4638 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2598 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2597 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___584_v_color $tmp2585 $tmp2591 $tmp2597 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:225
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp2603 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{225} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:226
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp2605 $const120 ___584_v_color 	%line{226} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:227
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp2607 $const121 ___584_v_color 	%line{227} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:224
#         transformed_color = color(
	color		___584_transformed_color $tmp2603 $tmp2605 $tmp2607 	%line{224} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp2609 in_z_tex_rgb_primaries $const79 	%line{229} %argrw{"wrr"}
	neq		$tmp2610 $tmp2609 $const12 	%argrw{"wrr"}
	if		$tmp2610 4647 4650 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:230
#              color_space == "sRGB/Rec.709")
	eq		$tmp2611 in_z_tex_rgb_primaries $const80 	%line{230} %argrw{"wrr"}
	neq		$tmp2612 $tmp2611 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp2610 $tmp2612 	%line{229} %argrw{"wr"}
	if		$tmp2610 4655 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:233
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp2613 $const119 ___584_v_color 	%line{233} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:234
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp2615 $const120 ___584_v_color 	%line{234} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:235
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp2617 $const121 ___584_v_color 	%line{235} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:232
#         transformed_color = color(
	color		___584_transformed_color $tmp2613 $tmp2615 $tmp2617 	%line{232} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp2619 in_z_tex_rgb_primaries $const82 	%line{237} %argrw{"wrr"}
	neq		$tmp2620 $tmp2619 $const12 	%argrw{"wrr"}
	if		$tmp2620 4658 4661 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:238
#              color_space == "Rec.2020")
	eq		$tmp2621 in_z_tex_rgb_primaries $const71 	%line{238} %argrw{"wrr"}
	neq		$tmp2622 $tmp2621 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp2620 $tmp2622 	%line{237} %argrw{"wr"}
	if		$tmp2620 4666 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:241
#             dot(vector(REC2020_TO_DCIP3_X), v_color),
	dot		$tmp2623 $const122 ___584_v_color 	%line{241} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:242
#             dot(vector(REC2020_TO_DCIP3_Y), v_color),
	dot		$tmp2625 $const123 ___584_v_color 	%line{242} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:243
#             dot(vector(REC2020_TO_DCIP3_Z), v_color));
	dot		$tmp2627 $const124 ___584_v_color 	%line{243} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:240
#         transformed_color = color(
	color		___584_transformed_color $tmp2623 $tmp2625 $tmp2627 	%line{240} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp2629 in_z_tex_rgb_primaries $const86 	%line{245} %argrw{"wrr"}
	neq		$tmp2630 $tmp2629 $const12 	%argrw{"wrr"}
	if		$tmp2630 4669 4672 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:246
#              color_space == "DCI-P3")
	eq		$tmp2631 in_z_tex_rgb_primaries $const87 	%line{246} %argrw{"wrr"}
	neq		$tmp2632 $tmp2631 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp2630 $tmp2632 	%line{245} %argrw{"wr"}
	if		$tmp2630 4674 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:248
#         transformed_color = input_color;
	assign		___584_transformed_color ___687_scene_linear_cms 	%line{248} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:250
#     else if (color_space == "camera Rec 709")
	eq		$tmp2633 in_z_tex_rgb_primaries $const91 	%line{250} %argrw{"wrr"}
	if		$tmp2633 4703 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:252
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 4699 	%line{252} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp2635 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 4684 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2636 $tmp2635 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2636 4682 4683 	%argrw{"r"}
	pow		$tmp2634 $tmp2635 $const54 	%argrw{"wrr"}
	assign		$tmp2634 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp2638 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 4691 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2639 $tmp2638 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2639 4689 4690 	%argrw{"r"}
	pow		$tmp2637 $tmp2638 $const54 	%argrw{"wrr"}
	assign		$tmp2637 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp2641 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 4698 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2642 $tmp2641 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2642 4696 4697 	%argrw{"r"}
	pow		$tmp2640 $tmp2641 $const54 	%argrw{"wrr"}
	assign		$tmp2640 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___584_v_color $tmp2634 $tmp2637 $tmp2640 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:255
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp2643 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{255} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:256
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp2645 $const120 ___584_v_color 	%line{256} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:257
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp2647 $const121 ___584_v_color 	%line{257} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:254
#         transformed_color = color(
	color		___584_transformed_color $tmp2643 $tmp2645 $tmp2647 	%line{254} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:259
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp2649 in_z_tex_rgb_primaries $const92 	%line{259} %argrw{"wrr"}
	if		$tmp2649 4735 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:261
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 4731 	%line{261} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2651 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4714 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2652 $tmp2651 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2652 4712 4714 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2650 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2650 $tmp2651 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2654 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2655 $tmp2654 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2655 4720 4722 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2653 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2653 $tmp2654 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2657 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4730 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2658 $tmp2657 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2658 4728 4730 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2656 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2656 $tmp2657 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp2650 $tmp2653 $tmp2656 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:264
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp2659 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{264} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:265
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp2661 $const120 ___584_v_color 	%line{265} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:266
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp2663 $const121 ___584_v_color 	%line{266} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:263
#         transformed_color = color(
	color		___584_transformed_color $tmp2659 $tmp2661 $tmp2663 	%line{263} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:268
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp2665 in_z_tex_rgb_primaries $const94 	%line{268} %argrw{"wrr"}
	if		$tmp2665 4767 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:270
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 4763 	%line{270} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2667 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4746 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2668 $tmp2667 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2668 4744 4746 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2666 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2666 $tmp2667 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2670 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4754 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2671 $tmp2670 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2671 4752 4754 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2669 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2669 $tmp2670 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2673 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4762 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2674 $tmp2673 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2674 4760 4762 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2672 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2672 $tmp2673 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp2666 $tmp2669 $tmp2672 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:273
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp2675 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{273} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:274
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp2677 $const120 ___584_v_color 	%line{274} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:275
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp2679 $const121 ___584_v_color 	%line{275} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:272
#         transformed_color = color(
	color		___584_transformed_color $tmp2675 $tmp2677 $tmp2679 	%line{272} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:277
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp2681 in_z_tex_rgb_primaries $const95 	%line{277} %argrw{"wrr"}
	if		$tmp2681 4799 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:279
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 4795 	%line{279} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2683 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4778 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2684 $tmp2683 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2684 4776 4778 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2682 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2682 $tmp2683 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2686 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4786 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2687 $tmp2686 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2687 4784 4786 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2685 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2685 $tmp2686 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2689 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4794 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2690 $tmp2689 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2690 4792 4794 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2688 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2688 $tmp2689 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___584_v_color $tmp2682 $tmp2685 $tmp2688 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:282
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp2691 $const119 ___584_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{282} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:283
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp2693 $const120 ___584_v_color 	%line{283} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:284
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp2695 $const121 ___584_v_color 	%line{284} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:281
#         transformed_color = color(
	color		___584_transformed_color $tmp2691 $tmp2693 $tmp2695 	%line{281} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:286
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp2697 in_z_tex_rgb_primaries $const96 	%line{286} %argrw{"wrr"}
	neq		$tmp2698 $tmp2697 $const12 	%argrw{"wrr"}
	if		$tmp2698 4802 4805 	%argrw{"r"}
	eq		$tmp2699 in_z_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp2700 $tmp2699 $const12 	%argrw{"wrr"}
	assign		$tmp2698 $tmp2700 	%argrw{"wr"}
	if		$tmp2698 4810 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:289
#             dot(vector(ACES_TO_DCIP3_X), v_color),
	dot		$tmp2701 $const125 ___584_v_color 	%line{289} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:290
#             dot(vector(ACES_TO_DCIP3_Y), v_color),
	dot		$tmp2703 $const126 ___584_v_color 	%line{290} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:291
#             dot(vector(ACES_TO_DCIP3_Z), v_color));
	dot		$tmp2705 $const127 ___584_v_color 	%line{291} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:288
#         transformed_color = color(
	color		___584_transformed_color $tmp2701 $tmp2703 $tmp2705 	%line{288} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:293
#     else if (color_space == "ACEScg")
	eq		$tmp2707 in_z_tex_rgb_primaries $const101 	%line{293} %argrw{"wrr"}
	if		$tmp2707 4816 4817 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:296
#             dot(vector(ACESCG_TO_DCIP3_X), v_color),
	dot		$tmp2708 $const128 ___584_v_color 	%line{296} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:297
#             dot(vector(ACESCG_TO_DCIP3_Y), v_color),
	dot		$tmp2710 $const129 ___584_v_color 	%line{297} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:298
#             dot(vector(ACESCG_TO_DCIP3_Z), v_color));
	dot		$tmp2712 $const130 ___584_v_color 	%line{298} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:295
#         transformed_color = color(
	color		___584_transformed_color $tmp2708 $tmp2710 $tmp2712 	%line{295} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:302
#         transformed_color = color(0);
	assign		___584_transformed_color $const39 	%line{302} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:304
#     return transformed_color;
	assign		___620_C ___584_transformed_color 	%line{304} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:525
#     else if (working_space == "ACES2065-1" || working_space == "ACES")
	eq		$tmp2714 in_workingspace_rgb_primaries $const96 	%line{525} %argrw{"wrr"}
	neq		$tmp2715 $tmp2714 $const12 	%argrw{"wrr"}
	if		$tmp2715 4821 4824 	%argrw{"r"}
	eq		$tmp2716 in_workingspace_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp2717 $tmp2716 $const12 	%argrw{"wrr"}
	assign		$tmp2715 $tmp2717 	%argrw{"wr"}
	if		$tmp2715 5045 5268 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:527
#         C = transform_color_space_to_ACES(input_color, color_space);
	functioncall	$const131 5045 	%line{527} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:316
#     vector v_color = vector(input_color);
	assign		___596_v_color ___687_scene_linear_cms 	%line{316} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:318
#     if (color_space == "sRGB")
	eq		$tmp2718 in_z_tex_rgb_primaries $const49 	%line{318} %argrw{"wrr"}
	if		$tmp2718 4871 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:320
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 4867 	%line{320} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp2720 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 4842 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2721 $tmp2720 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2721 4837 4841 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2722 $tmp2720 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2723 $tmp2722 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2723 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2724 $tmp2720 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2724 4840 4841 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2720 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2719 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp2726 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 4854 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2727 $tmp2726 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2727 4849 4853 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2728 $tmp2726 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2729 $tmp2728 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2729 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2730 $tmp2726 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2730 4852 4853 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2726 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2725 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp2732 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 4866 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2733 $tmp2732 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2733 4861 4865 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2734 $tmp2732 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2735 $tmp2734 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2735 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2736 $tmp2732 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2736 4864 4865 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2732 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2731 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___596_v_color $tmp2719 $tmp2725 $tmp2731 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:323
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp2737 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{323} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:324
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp2739 $const133 ___596_v_color 	%line{324} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:325
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp2741 $const134 ___596_v_color 	%line{325} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:322
#         transformed_color = color(
	color		___596_transformed_color $tmp2737 $tmp2739 $tmp2741 	%line{322} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp2743 in_z_tex_rgb_primaries $const79 	%line{327} %argrw{"wrr"}
	neq		$tmp2744 $tmp2743 $const12 	%argrw{"wrr"}
	if		$tmp2744 4874 4877 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:328
#              color_space == "sRGB/Rec.709")
	eq		$tmp2745 in_z_tex_rgb_primaries $const80 	%line{328} %argrw{"wrr"}
	neq		$tmp2746 $tmp2745 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp2744 $tmp2746 	%line{327} %argrw{"wr"}
	if		$tmp2744 4882 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:331
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp2747 $const132 ___596_v_color 	%line{331} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:332
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp2749 $const133 ___596_v_color 	%line{332} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:333
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp2751 $const134 ___596_v_color 	%line{333} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:330
#         transformed_color = color(
	color		___596_transformed_color $tmp2747 $tmp2749 $tmp2751 	%line{330} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp2753 in_z_tex_rgb_primaries $const82 	%line{335} %argrw{"wrr"}
	neq		$tmp2754 $tmp2753 $const12 	%argrw{"wrr"}
	if		$tmp2754 4885 4888 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:336
#              color_space == "Rec.2020")
	eq		$tmp2755 in_z_tex_rgb_primaries $const71 	%line{336} %argrw{"wrr"}
	neq		$tmp2756 $tmp2755 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp2754 $tmp2756 	%line{335} %argrw{"wr"}
	if		$tmp2754 4893 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:339
#             dot(vector(REC2020_TO_ACES_X), v_color),
	dot		$tmp2757 $const135 ___596_v_color 	%line{339} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:340
#             dot(vector(REC2020_TO_ACES_Y), v_color),
	dot		$tmp2759 $const136 ___596_v_color 	%line{340} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:341
#             dot(vector(REC2020_TO_ACES_Z), v_color));
	dot		$tmp2761 $const137 ___596_v_color 	%line{341} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:338
#         transformed_color = color(
	color		___596_transformed_color $tmp2757 $tmp2759 $tmp2761 	%line{338} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp2763 in_z_tex_rgb_primaries $const86 	%line{343} %argrw{"wrr"}
	neq		$tmp2764 $tmp2763 $const12 	%argrw{"wrr"}
	if		$tmp2764 4896 4899 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:344
#              color_space == "DCI-P3")
	eq		$tmp2765 in_z_tex_rgb_primaries $const87 	%line{344} %argrw{"wrr"}
	neq		$tmp2766 $tmp2765 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp2764 $tmp2766 	%line{343} %argrw{"wr"}
	if		$tmp2764 4904 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:347
#             dot(vector(DCIP3_TO_ACES_X), v_color),
	dot		$tmp2767 $const138 ___596_v_color 	%line{347} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:348
#             dot(vector(DCIP3_TO_ACES_Y), v_color),
	dot		$tmp2769 $const139 ___596_v_color 	%line{348} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:349
#             dot(vector(DCIP3_TO_ACES_Z), v_color));
	dot		$tmp2771 $const140 ___596_v_color 	%line{349} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:346
#         transformed_color = color(
	color		___596_transformed_color $tmp2767 $tmp2769 $tmp2771 	%line{346} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:351
#     else if (color_space == "camera Rec 709")
	eq		$tmp2773 in_z_tex_rgb_primaries $const91 	%line{351} %argrw{"wrr"}
	if		$tmp2773 4933 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:353
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 4929 	%line{353} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp2775 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 4914 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2776 $tmp2775 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2776 4912 4913 	%argrw{"r"}
	pow		$tmp2774 $tmp2775 $const54 	%argrw{"wrr"}
	assign		$tmp2774 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp2778 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 4921 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2779 $tmp2778 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2779 4919 4920 	%argrw{"r"}
	pow		$tmp2777 $tmp2778 $const54 	%argrw{"wrr"}
	assign		$tmp2777 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp2781 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 4928 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2782 $tmp2781 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2782 4926 4927 	%argrw{"r"}
	pow		$tmp2780 $tmp2781 $const54 	%argrw{"wrr"}
	assign		$tmp2780 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___596_v_color $tmp2774 $tmp2777 $tmp2780 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:356
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp2783 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{356} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:357
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp2785 $const133 ___596_v_color 	%line{357} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:358
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp2787 $const134 ___596_v_color 	%line{358} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:355
#         transformed_color = color(
	color		___596_transformed_color $tmp2783 $tmp2785 $tmp2787 	%line{355} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:360
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp2789 in_z_tex_rgb_primaries $const92 	%line{360} %argrw{"wrr"}
	if		$tmp2789 4965 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:362
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 4961 	%line{362} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2791 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4944 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2792 $tmp2791 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2792 4942 4944 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2790 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2790 $tmp2791 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2794 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4952 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2795 $tmp2794 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2795 4950 4952 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2793 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2793 $tmp2794 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2797 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4960 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2798 $tmp2797 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2798 4958 4960 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2796 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2796 $tmp2797 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp2790 $tmp2793 $tmp2796 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:365
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp2799 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{365} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:366
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp2801 $const133 ___596_v_color 	%line{366} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:367
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp2803 $const134 ___596_v_color 	%line{367} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:364
#         transformed_color = color(
	color		___596_transformed_color $tmp2799 $tmp2801 $tmp2803 	%line{364} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:369
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp2805 in_z_tex_rgb_primaries $const94 	%line{369} %argrw{"wrr"}
	if		$tmp2805 4997 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:371
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 4993 	%line{371} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2807 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 4976 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2808 $tmp2807 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2808 4974 4976 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2806 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2806 $tmp2807 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2810 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 4984 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2811 $tmp2810 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2811 4982 4984 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2809 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2809 $tmp2810 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2813 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 4992 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2814 $tmp2813 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2814 4990 4992 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2812 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2812 $tmp2813 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp2806 $tmp2809 $tmp2812 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:374
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp2815 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{374} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:375
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp2817 $const133 ___596_v_color 	%line{375} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:376
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp2819 $const134 ___596_v_color 	%line{376} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:373
#         transformed_color = color(
	color		___596_transformed_color $tmp2815 $tmp2817 $tmp2819 	%line{373} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:378
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp2821 in_z_tex_rgb_primaries $const95 	%line{378} %argrw{"wrr"}
	if		$tmp2821 5029 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:380
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 5025 	%line{380} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2823 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 5008 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2824 $tmp2823 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2824 5006 5008 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2822 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2822 $tmp2823 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2826 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 5016 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2827 $tmp2826 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2827 5014 5016 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2825 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2825 $tmp2826 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2829 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 5024 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2830 $tmp2829 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2830 5022 5024 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2828 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2828 $tmp2829 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___596_v_color $tmp2822 $tmp2825 $tmp2828 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:383
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp2831 $const132 ___596_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{383} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:384
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp2833 $const133 ___596_v_color 	%line{384} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:385
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp2835 $const134 ___596_v_color 	%line{385} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:382
#         transformed_color = color(
	color		___596_transformed_color $tmp2831 $tmp2833 $tmp2835 	%line{382} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:387
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp2837 in_z_tex_rgb_primaries $const96 	%line{387} %argrw{"wrr"}
	neq		$tmp2838 $tmp2837 $const12 	%argrw{"wrr"}
	if		$tmp2838 5032 5035 	%argrw{"r"}
	eq		$tmp2839 in_z_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp2840 $tmp2839 $const12 	%argrw{"wrr"}
	assign		$tmp2838 $tmp2840 	%argrw{"wr"}
	if		$tmp2838 5037 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:389
#         transformed_color = input_color;
	assign		___596_transformed_color ___687_scene_linear_cms 	%line{389} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:391
#     else if (color_space == "ACEScg")
	eq		$tmp2841 in_z_tex_rgb_primaries $const101 	%line{391} %argrw{"wrr"}
	if		$tmp2841 5043 5044 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:394
#             dot(vector(ACESCG_TO_ACES_X), v_color),
	dot		$tmp2842 $const141 ___596_v_color 	%line{394} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:395
#             dot(vector(ACESCG_TO_ACES_Y), v_color),
	dot		$tmp2844 $const142 ___596_v_color 	%line{395} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:396
#             dot(vector(ACESCG_TO_ACES_Z), v_color));
	dot		$tmp2846 $const143 ___596_v_color 	%line{396} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:393
#         transformed_color = color(
	color		___596_transformed_color $tmp2842 $tmp2844 $tmp2846 	%line{393} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:400
#         transformed_color = color(0);
	assign		___596_transformed_color $const39 	%line{400} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:402
#     return transformed_color;
	assign		___620_C ___596_transformed_color 	%line{402} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:529
#     else if (working_space == "ACEScg")
	eq		$tmp2848 in_workingspace_rgb_primaries $const101 	%line{529} %argrw{"wrr"}
	if		$tmp2848 5267 5268 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:531
#         C = transform_color_space_to_ACEScg(input_color, color_space);
	functioncall	$const144 5267 	%line{531} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:414
#     vector v_color = vector(input_color);
	assign		___608_v_color ___687_scene_linear_cms 	%line{414} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:416
#     if (color_space == "sRGB")
	eq		$tmp2849 in_z_tex_rgb_primaries $const49 	%line{416} %argrw{"wrr"}
	if		$tmp2849 5093 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:418
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const50 5089 	%line{418} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp2851 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const50 5064 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2852 $tmp2851 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2852 5059 5063 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2853 $tmp2851 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2854 $tmp2853 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2854 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2855 $tmp2851 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2855 5062 5063 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2851 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2850 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp2857 ___687_scene_linear_cms $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const50 5076 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2858 $tmp2857 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2858 5071 5075 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2859 $tmp2857 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2860 $tmp2859 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2860 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2861 $tmp2857 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2861 5074 5075 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2857 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2856 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp2863 ___687_scene_linear_cms $const16 	%line{91} %argrw{"wrr"}
	functioncall	$const50 5088 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp2864 $tmp2863 $const51 	%line{51} %argrw{"wrr"}
	if		$tmp2864 5083 5087 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp2865 $tmp2863 $const52 	%line{53} %argrw{"wrr"}
	div		$tmp2866 $tmp2865 $const53 	%argrw{"wrr"}
	pow		___508_linear_out $tmp2866 $const54 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp2867 $tmp2863 $const12 	%line{55} %argrw{"wrr"}
	if		$tmp2867 5086 5087 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___508_linear_out $tmp2863 $const55 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___508_linear_out $const12 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp2862 ___508_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___608_v_color $tmp2850 $tmp2856 $tmp2862 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:421
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2868 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{421} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:422
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2870 $const146 ___608_v_color 	%line{422} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:423
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2872 $const147 ___608_v_color 	%line{423} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:420
#         transformed_color = color(
	color		___608_transformed_color $tmp2868 $tmp2870 $tmp2872 	%line{420} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp2874 in_z_tex_rgb_primaries $const79 	%line{425} %argrw{"wrr"}
	neq		$tmp2875 $tmp2874 $const12 	%argrw{"wrr"}
	if		$tmp2875 5096 5099 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:426
#              color_space == "sRGB/Rec.709")
	eq		$tmp2876 in_z_tex_rgb_primaries $const80 	%line{426} %argrw{"wrr"}
	neq		$tmp2877 $tmp2876 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp2875 $tmp2877 	%line{425} %argrw{"wr"}
	if		$tmp2875 5104 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:429
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2878 $const145 ___608_v_color 	%line{429} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:430
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2880 $const146 ___608_v_color 	%line{430} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:431
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2882 $const147 ___608_v_color 	%line{431} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:428
#         transformed_color = color(
	color		___608_transformed_color $tmp2878 $tmp2880 $tmp2882 	%line{428} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp2884 in_z_tex_rgb_primaries $const82 	%line{433} %argrw{"wrr"}
	neq		$tmp2885 $tmp2884 $const12 	%argrw{"wrr"}
	if		$tmp2885 5107 5110 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:434
#              color_space == "Rec.2020")
	eq		$tmp2886 in_z_tex_rgb_primaries $const71 	%line{434} %argrw{"wrr"}
	neq		$tmp2887 $tmp2886 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp2885 $tmp2887 	%line{433} %argrw{"wr"}
	if		$tmp2885 5115 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:437
#             dot(vector(REC2020_TO_ACESCG_X), v_color),
	dot		$tmp2888 $const148 ___608_v_color 	%line{437} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:438
#             dot(vector(REC2020_TO_ACESCG_Y), v_color),
	dot		$tmp2890 $const149 ___608_v_color 	%line{438} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:439
#             dot(vector(REC2020_TO_ACESCG_Z), v_color));
	dot		$tmp2892 $const150 ___608_v_color 	%line{439} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:436
#         transformed_color = color(
	color		___608_transformed_color $tmp2888 $tmp2890 $tmp2892 	%line{436} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp2894 in_z_tex_rgb_primaries $const86 	%line{441} %argrw{"wrr"}
	neq		$tmp2895 $tmp2894 $const12 	%argrw{"wrr"}
	if		$tmp2895 5118 5121 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:442
#              color_space == "DCI-P3")
	eq		$tmp2896 in_z_tex_rgb_primaries $const87 	%line{442} %argrw{"wrr"}
	neq		$tmp2897 $tmp2896 $const12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp2895 $tmp2897 	%line{441} %argrw{"wr"}
	if		$tmp2895 5126 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:445
#             dot(vector(DCIP3_TO_ACESCG_X), v_color),
	dot		$tmp2898 $const151 ___608_v_color 	%line{445} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:446
#             dot(vector(DCIP3_TO_ACESCG_Y), v_color),
	dot		$tmp2900 $const152 ___608_v_color 	%line{446} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:447
#             dot(vector(DCIP3_TO_ACESCG_Z), v_color));
	dot		$tmp2902 $const153 ___608_v_color 	%line{447} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:444
#         transformed_color = color(
	color		___608_transformed_color $tmp2898 $tmp2900 $tmp2902 	%line{444} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:449
#     else if (color_space == "camera Rec 709")
	eq		$tmp2904 in_z_tex_rgb_primaries $const91 	%line{449} %argrw{"wrr"}
	if		$tmp2904 5155 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:451
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const70 5151 	%line{451} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp2906 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const70 5136 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2907 $tmp2906 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2907 5134 5135 	%argrw{"r"}
	pow		$tmp2905 $tmp2906 $const54 	%argrw{"wrr"}
	assign		$tmp2905 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp2909 ___687_scene_linear_cms $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const70 5143 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2910 $tmp2909 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2910 5141 5142 	%argrw{"r"}
	pow		$tmp2908 $tmp2909 $const54 	%argrw{"wrr"}
	assign		$tmp2908 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp2912 ___687_scene_linear_cms $const16 	%line{311} %argrw{"wrr"}
	functioncall	$const70 5150 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp2913 $tmp2912 $const7 	%line{298} %argrw{"wrr"}
	if		$tmp2913 5148 5149 	%argrw{"r"}
	pow		$tmp2911 $tmp2912 $const54 	%argrw{"wrr"}
	assign		$tmp2911 $const7 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___608_v_color $tmp2905 $tmp2908 $tmp2911 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:454
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2914 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{454} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:455
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2916 $const146 ___608_v_color 	%line{455} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:456
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2918 $const147 ___608_v_color 	%line{456} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:453
#         transformed_color = color(
	color		___608_transformed_color $tmp2914 $tmp2916 $tmp2918 	%line{453} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:458
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp2920 in_z_tex_rgb_primaries $const92 	%line{458} %argrw{"wrr"}
	if		$tmp2920 5187 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:460
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const65 5183 	%line{460} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2922 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 5166 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2923 $tmp2922 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2923 5164 5166 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2921 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2921 $tmp2922 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2925 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 5174 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2926 $tmp2925 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2926 5172 5174 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2924 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2924 $tmp2925 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2928 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 5182 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2929 $tmp2928 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2929 5180 5182 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2927 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2927 $tmp2928 $const93 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp2921 $tmp2924 $tmp2927 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:463
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2930 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{463} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:464
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2932 $const146 ___608_v_color 	%line{464} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:465
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2934 $const147 ___608_v_color 	%line{465} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:462
#         transformed_color = color(
	color		___608_transformed_color $tmp2930 $tmp2932 $tmp2934 	%line{462} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:467
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp2936 in_z_tex_rgb_primaries $const94 	%line{467} %argrw{"wrr"}
	if		$tmp2936 5219 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:469
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const65 5215 	%line{469} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2938 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 5198 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2939 $tmp2938 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2939 5196 5198 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2937 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2937 $tmp2938 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2941 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 5206 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2942 $tmp2941 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2942 5204 5206 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2940 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2940 $tmp2941 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2944 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 5214 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2945 $tmp2944 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2945 5212 5214 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2943 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2943 $tmp2944 $const64 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp2937 $tmp2940 $tmp2943 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:472
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2946 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{472} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:473
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2948 $const146 ___608_v_color 	%line{473} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:474
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2950 $const147 ___608_v_color 	%line{474} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:471
#         transformed_color = color(
	color		___608_transformed_color $tmp2946 $tmp2948 $tmp2950 	%line{471} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:476
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp2952 in_z_tex_rgb_primaries $const95 	%line{476} %argrw{"wrr"}
	if		$tmp2952 5251 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:478
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const65 5247 	%line{478} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp2954 ___687_scene_linear_cms $const12 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const65 5230 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2955 $tmp2954 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2955 5228 5230 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2953 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2953 $tmp2954 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp2957 ___687_scene_linear_cms $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const65 5238 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2958 $tmp2957 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2958 5236 5238 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2956 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2956 $tmp2957 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp2960 ___687_scene_linear_cms $const16 	%line{347} %argrw{"wrr"}
	functioncall	$const65 5246 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp2961 $tmp2960 $const12 	%line{332} %argrw{"wrr"}
	if		$tmp2961 5244 5246 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp2959 $const12 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp2959 $tmp2960 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___608_v_color $tmp2953 $tmp2956 $tmp2959 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:481
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp2962 $const145 ___608_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{481} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:482
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp2964 $const146 ___608_v_color 	%line{482} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:483
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp2966 $const147 ___608_v_color 	%line{483} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:480
#         transformed_color = color(
	color		___608_transformed_color $tmp2962 $tmp2964 $tmp2966 	%line{480} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:485
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp2968 in_z_tex_rgb_primaries $const96 	%line{485} %argrw{"wrr"}
	neq		$tmp2969 $tmp2968 $const12 	%argrw{"wrr"}
	if		$tmp2969 5254 5257 	%argrw{"r"}
	eq		$tmp2970 in_z_tex_rgb_primaries $const97 	%argrw{"wrr"}
	neq		$tmp2971 $tmp2970 $const12 	%argrw{"wrr"}
	assign		$tmp2969 $tmp2971 	%argrw{"wr"}
	if		$tmp2969 5262 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:488
#             dot(vector(ACES_TO_ACESCG_X), v_color),
	dot		$tmp2972 $const154 ___608_v_color 	%line{488} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:489
#             dot(vector(ACES_TO_ACESCG_Y), v_color),
	dot		$tmp2974 $const155 ___608_v_color 	%line{489} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:490
#             dot(vector(ACES_TO_ACESCG_Z), v_color));
	dot		$tmp2976 $const156 ___608_v_color 	%line{490} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:487
#         transformed_color = color(
	color		___608_transformed_color $tmp2972 $tmp2974 $tmp2976 	%line{487} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:492
#     else if (color_space == "ACEScg")
	eq		$tmp2978 in_z_tex_rgb_primaries $const101 	%line{492} %argrw{"wrr"}
	if		$tmp2978 5265 5266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:494
#         transformed_color = input_color;
	assign		___608_transformed_color ___687_scene_linear_cms 	%line{494} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:498
#         transformed_color = color(0);
	assign		___608_transformed_color $const39 	%line{498} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:500
#     return transformed_color;
	assign		___620_C ___608_transformed_color 	%line{500} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:535
#         C = color(0);
	assign		___620_C $const39 	%line{535} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:537
#     return C;
	assign		___687_scene_linear_cms ___620_C 	%line{537} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:432
#     return scene_linear_cms;
	assign		___763_z_axis ___687_scene_linear_cms 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{432} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1229
#                 out_color += blending[2] * in_z_axis_color * z_axis;
	compref		$tmp2979 blending $const16 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl"} %line{1229} %argrw{"wrr"}
	mul		$tmp2980 $tmp2979 in_z_axis_color 	%argrw{"wrr"}
	mul		$tmp2981 $tmp2980 ___763_z_axis 	%argrw{"wrr"}
	add		out_color out_color $tmp2981 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1230
#                 out_alpha += blending[2] * z_alpha;
	compref		$tmp2982 blending $const16 	%line{1230} %argrw{"wrr"}
	mul		$tmp2983 $tmp2982 z_alpha 	%argrw{"wrr"}
	add		out_alpha out_alpha $tmp2983 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1236
#         out_color += blending[2] * in_z_axis_color;
	compref		$tmp2984 blending $const16 	%line{1236} %argrw{"wrr"}
	mul		$tmp2985 $tmp2984 in_z_axis_color 	%argrw{"wrr"}
	add		out_color out_color $tmp2985 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1237
#         out_alpha += blending[2];
	compref		$tmp2986 blending $const16 	%line{1237} %argrw{"wrr"}
	add		out_alpha out_alpha $tmp2986 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1240
#     out_normal = normalize(out_normal);
	normalize	out_normal out_normal 	%line{1240} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1242
#     if (dot(out_normal, N) < 0.0)
	dot		$tmp2987 out_normal N 	%line{1242} %argrw{"wrr"}
	lt		$tmp2988 $tmp2987 $const7 	%argrw{"wrr"}
	if		$tmp2988 5287 5287 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_triplanar.osl:1243
#         out_normal *= normal(-1);
	mul		out_normal out_normal $const157 	%line{1243} %argrw{"wrr"}
	end

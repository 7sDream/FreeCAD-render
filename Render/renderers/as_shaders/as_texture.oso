OpenShadingLanguage 1.00
# Compiled by oslc 1.11.14
# options: -O2 -DNDEBUG -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/ -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include -o /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/appleseed/as_texture.oso
shader as_texture	%meta{string,help,"Texture lookup node."} %meta{string,icon,"asTexture.png"} %meta{string,URL,"https://appleseed.readthedocs.io/projects/appleseed-maya/en/latest/shaders/texture/as_texture.html"} %meta{string,as_node_name,"asTexture"} %meta{string,as_category,"texture2d"} %meta{string,as_max_class_id,"1220608380 1037264235"} %meta{string,as_max_plugin_type,"texture"} %meta{int,as_maya_type_id,1210874} %meta{string,as_maya_classification,"drawdb/shader:rendernode/appleseed/texture/2d:swatch/AppleseedRenderSwatch:texture"} 
param	string	in_filename	""		%meta{string,as_maya_attribute_name,"filename"} %meta{string,as_maya_attribute_short_name,"fil"} %meta{string,label,"Filename"} %meta{string,page,"Texture"} %meta{string,widget,"filename"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{2,100} %write{2147483647,-1}
param	int	in_atlas_type	0		%meta{string,as_maya_attribute_name,"atlasType"} %meta{string,as_maya_attribute_short_name,"atl"} %meta{string,label,"Atlas Type"} %meta{string,page,"Texture"} %meta{string,widget,"mapper"} %meta{string,options,"None:0|ZBrush:1|Mudbox:2|Mari:3"} %meta{string,help,"Texture atlas type (UDIM)."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{52,87} %write{2147483647,-1}
param	color	in_color	0 0 0		%meta{string,as_maya_attribute_name,"color"} %meta{string,as_maya_attribute_short_name,"c"} %meta{string,label,"Default Color"} %meta{string,page,"Texture"} %meta{string,help,"Default Fill color to use if the texture lookup fails."}  %read{143,143} %write{2147483647,-1}
param	float	in_alpha	1		%meta{string,as_maya_attribute_name,"alpha"} %meta{string,as_maya_attribute_short_name,"a"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Default Alpha"} %meta{string,page,"Texture"} %meta{string,help,"Default Fill alpha value to use if the texture lookup fails."}  %read{143,143} %write{2147483647,-1}
param	int	in_starting_channel	0		%meta{string,as_maya_attribute_name,"startingChannel"} %meta{string,as_maya_attribute_short_name,"sch"} %meta{string,label,"Starting Channel"} %meta{string,page,"Texture.Advanced"} %meta{int,min,0} %meta{int,softmax,4} %meta{string,help,"Starting channel for the texture lookup, usually 0 for an ordinary RGB texture."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{143,143} %write{2147483647,-1}
param	float	in_s_blur_amount	0		%meta{string,as_maya_attribute_name,"sBlurAmount"} %meta{string,as_maya_attribute_short_name,"sbl"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"S Blur"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Additional blur for texture lookup, along the S direction."}  %read{122,143} %write{2147483647,-1}
param	float	in_t_blur_amount	0		%meta{string,as_maya_attribute_name,"tBlurAmount"} %meta{string,as_maya_attribute_short_name,"tbl"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"T Blur"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Additional blur for texture lookup, along the T direction."}  %read{122,143} %write{2147483647,-1}
param	float	in_s_filter_width	1		%meta{string,as_maya_attribute_name,"sFilterWidth"} %meta{string,as_maya_attribute_short_name,"sfw"} %meta{float,min,0} %meta{float,softmax,1} %meta{string,label,"S Filter Width"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Multiplier to scale the size of the filter width along the S direction."}  %read{122,143} %write{2147483647,-1}
param	float	in_t_filter_width	1		%meta{string,as_maya_attribute_name,"tFilterWidth"} %meta{string,as_maya_attribute_short_name,"tfw"} %meta{float,min,0} %meta{float,softmax,1} %meta{string,label,"T Filter Width"} %meta{string,page,"Texture.Advanced"} %meta{string,help,"Multiplier to scale the size of the filter width along the S direction."} %meta{int,divider,1}  %read{122,143} %write{2147483647,-1}
param	int	in_s_wrap	0		%meta{string,as_maya_attribute_name,"sWrap"} %meta{string,as_maya_attribute_short_name,"swa"} %meta{string,label,"S Wrapping"} %meta{string,page,"Texture.Advanced"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Use the wrapping mode set on the texture, or override it."}  %read{13,25} %write{2147483647,-1}
param	int	in_t_wrap	0		%meta{string,as_maya_attribute_name,"tWrap"} %meta{string,as_maya_attribute_short_name,"twa"} %meta{string,label,"T Wrapping"} %meta{string,page,"Texture.Advanced"} %meta{string,widget,"mapper"} %meta{string,options,"Default:0|Black:1|Periodic:2|Clamp:3|Mirror:4"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Use the wrapping mode set on the texture, or override it."} %meta{int,divider,1}  %read{33,45} %write{2147483647,-1}
param	int	in_interpolation_method	0		%meta{string,as_maya_attribute_name,"interpolationMethod"} %meta{string,as_maya_attribute_short_name,"ft"} %meta{string,label,"Interpolation Method"} %meta{string,page,"Texture.Advanced"} %meta{string,widget,"mapper"} %meta{string,options,"Smart Cubic:0|Cubic:1|Linear:2|Closest:3"} %meta{string,help,"Interpolation method to use for the lookup."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{108,137} %write{2147483647,-1}
param	int	in_enable_cms	0		%meta{string,as_maya_attribute_name,"enableCms"} %meta{string,as_maya_attribute_short_name,"cms"} %meta{string,label,"Enable CMS"} %meta{string,page,"Color Management"} %meta{string,widget,"checkBox"} %meta{string,help,"Enable color management. Ideally you use *.tx textures already converted instead, hence this is disabled by default."} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{144,144} %write{2147483647,-1}
param	int	in_eotf	1		%meta{string,as_maya_attribute_name,"electroOpticalTransferFunction"} %meta{string,as_maya_attribute_short_name,"eot"} %meta{string,label,"Input Transfer Function"} %meta{string,page,"Color Management"} %meta{string,widget,"mapper"} %meta{string,options,"None/Raw:0|sRGB:1|Rec.709:2|Gamma 2.2:3|Gamma 2.4:4|Gamma 2.6 (DCI):5|Rec.1886:6|Rec.2020:7"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Transfer function of the ingested material, refers to the Opto-Electronic Transfer Function required to transform the input into scene-linear values."}  %read{157,359} %write{2147483647,-1}
param	string	in_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"RGBPrimaries"} %meta{string,as_maya_attribute_short_name,"rgb"} %meta{string,label,"RGB Primaries"} %meta{string,page,"Color Management"} %meta{string,widget,"popup"} %meta{string,options,"Raw|sRGB/Rec.709|AdobeRGB|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"RGB primaries, note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."}  %read{426,1545} %write{2147483647,-1}
param	string	in_workingspace_rgb_primaries	"sRGB/Rec.709"		%meta{string,as_maya_attribute_name,"workingSpaceRGBPrimaries"} %meta{string,as_maya_attribute_short_name,"wpr"} %meta{string,label,"Rendering RGB Primaries"} %meta{string,page,"Color Management"} %meta{string,widget,"popup"} %meta{string,options,"sRGB/Rec.709|Rec.2020|DCI-P3|ACES|ACEScg"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{string,help,"Working or rendering space RGB primaries. Note that Rec.709 and sRGB share the same CIE xy chromaticity coordinates."}  %read{440,1582} %write{2147483647,-1}
param	float[2]	in_texture_coords	0 0		%meta{string,as_maya_attribute_name,"uvCoord"} %meta{string,as_maya_attribute_short_name,"uv"} %meta{string,label,"UV Coords"} %meta{string,page,"Texture Coordinates"}  %read{55,57} %write{0,1} %derivs %initexpr
param	float[2]	in_texture_coords_filter	0 0		%meta{string,as_maya_attribute_name,"uvFilterSize"} %meta{string,as_maya_attribute_short_name,"fs"} %meta{string,label,"UV Filter Size"} %meta{string,page,"Texture Coordinates"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	color	out_color	0 0 0		%meta{string,as_maya_attribute_name,"outColor"} %meta{string,as_maya_attribute_short_name,"oc"} %meta{string,label,"Output Color"} %meta{string,widget,"null"}  %read{147,1600} %write{123,1552}
oparam	float	out_alpha	1		%meta{string,as_maya_attribute_name,"outAlpha"} %meta{string,as_maya_attribute_short_name,"oa"} %meta{string,label,"Output Alpha"} %meta{string,widget,"null"}  %read{2147483647,-1} %write{143,143}
oparam	float	out_channel	0		%meta{string,as_maya_attribute_name,"outChannel"} %meta{string,as_maya_attribute_short_name,"och"} %meta{string,label,"Output Single Channel"} %meta{string,widget,"null"}  %read{123,123} %write{122,1602}
global	float	u	%read{0,59} %write{2147483647,-1} %derivs
global	float	v	%read{1,60} %write{2147483647,-1} %derivs
local	float	___372_linear_out	%read{174,1370} %write{169,1369}
local	float	___382_linear_out	%read{216,244} %write{210,243}
local	float	___392_linear_out	%read{382,422} %write{375,421}
local	float	___393_alpha	%read{376,418} %write{369,411}
local	float	___393_beta	%read{373,413} %write{370,412}
local	color	___424_transformed_color	%read{646,646} %write{488,645}
local	vector	___424_v_color	%read{504,643} %write{448,448}
local	color	___436_transformed_color	%read{873,873} %write{699,872}
local	vector	___436_v_color	%read{696,870} %write{655,850}
local	color	___448_transformed_color	%read{1100,1100} %write{926,1099}
local	vector	___448_v_color	%read{923,1097} %write{882,1077}
local	color	___460_transformed_color	%read{1327,1327} %write{1153,1326}
local	vector	___460_v_color	%read{1150,1324} %write{1109,1307}
local	color	___472_transformed_color	%read{1549,1549} %write{1375,1548}
local	vector	___472_v_color	%read{1372,1543} %write{1331,1529}
local	color	___484_C	%read{1551,1551} %write{646,1550}
local	color	___659_coeffs	%read{1586,1593} %write{1556,1585}
local	int	___740_valid_file	%read{7,7} %write{5,6}
local	float[2]	uv_coords	%read{103,125} %write{56,60} %derivs
local	string[2]	wrap_mode	%read{105,127} %write{31,51}
local	string	texname	%read{122,143} %write{10,99}
local	int[2]	___744_match	%read{65,67} %write{63,63}
local	int[2]	___746_match	%read{78,80} %write{76,76}
local	int[2]	___748_match	%read{91,93} %write{89,89}
local	int	numchannels	%read{101,101} %write{100,100}
local	color	___753_linearized_color	%read{246,1594} %write{156,1551}
const	int	$const1	0		%read{0,1597} %write{2147483647,-1}
const	int	$const2	1		%read{1,1598} %write{2147483647,-1}
const	string	$const3	""		%read{2,10} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	int	$tmp2	%read{2147483647,-1} %write{6,6}
const	string	$const4	"exists"		%read{6,6} %write{2147483647,-1}
temp	int	$tmp3	%read{8,8} %write{7,7}
const	string	$const5	"set_wrap_mode"		%read{11,11} %write{2147483647,-1}
temp	string	$tmp4	%read{31,31} %write{15,29}
const	string	$const6	"get_wrap_mode"		%read{12,32} %write{2147483647,-1}
temp	int	$tmp5	%read{14,14} %write{13,13}
const	string	$const7	"default"		%read{15,35} %write{2147483647,-1}
temp	int	$tmp6	%read{18,18} %write{17,17}
const	string	$const8	"black"		%read{19,39} %write{2147483647,-1}
const	int	$const9	2		%read{21,1600} %write{2147483647,-1}
temp	int	$tmp7	%read{22,22} %write{21,21}
const	string	$const10	"periodic"		%read{23,43} %write{2147483647,-1}
const	int	$const11	3		%read{25,247} %write{2147483647,-1}
temp	int	$tmp8	%read{26,26} %write{25,25}
const	string	$const12	"clamp"		%read{27,47} %write{2147483647,-1}
const	string	$const13	"mirror"		%read{29,49} %write{2147483647,-1}
temp	string	$tmp9	%read{51,51} %write{35,49}
temp	int	$tmp10	%read{34,34} %write{33,33}
temp	int	$tmp11	%read{38,38} %write{37,37}
temp	int	$tmp12	%read{42,42} %write{41,41}
temp	int	$tmp13	%read{46,46} %write{45,45}
temp	int	$tmp14	%read{53,53} %write{52,52}
temp	float	$tmp15	%read{56,56} %write{55,55} %derivs
temp	float	$tmp16	%read{58,58} %write{57,57} %derivs
temp	int	$tmp17	%read{62,62} %write{61,61}
temp	int	$tmp18	%read{64,64} %write{63,63}
const	string	$const14	"_u[0-9]{1}_v[0-9]{1}"		%read{63,76} %write{2147483647,-1}
temp	string	$tmp19	%read{72,72} %write{66,66}
temp	int	$tmp20	%read{66,66} %write{65,65}
const	string	$const15	"_<u>_<v>"		%read{72,72} %write{2147483647,-1}
temp	string	$tmp21	%read{73,73} %write{70,70}
temp	int	$tmp22	%read{70,70} %write{67,67}
const	string	$const16	"substr"		%read{68,94} %write{2147483647,-1}
temp	int	$tmp23	%read{70,70} %write{69,69}
const	string	$const17	"concat"		%read{71,97} %write{2147483647,-1}
temp	string	$tmp24	%read{73,73} %write{72,72}
temp	int	$tmp25	%read{75,75} %write{74,74}
temp	int	$tmp26	%read{77,77} %write{76,76}
temp	string	$tmp27	%read{85,85} %write{79,79}
temp	int	$tmp28	%read{79,79} %write{78,78}
const	string	$const18	"_<U>_<V>"		%read{85,85} %write{2147483647,-1}
temp	string	$tmp29	%read{86,86} %write{83,83}
temp	int	$tmp30	%read{83,83} %write{80,80}
temp	int	$tmp31	%read{83,83} %write{82,82}
temp	string	$tmp32	%read{86,86} %write{85,85}
temp	int	$tmp33	%read{88,88} %write{87,87}
temp	int	$tmp34	%read{90,90} %write{89,89}
const	string	$const19	"\\.[1-9][0-9]{3}\\."		%read{89,89} %write{2147483647,-1}
temp	string	$tmp35	%read{98,98} %write{92,92}
temp	int	$tmp36	%read{92,92} %write{91,91}
const	string	$const20	".<UDIM>."		%read{98,98} %write{2147483647,-1}
temp	string	$tmp37	%read{99,99} %write{96,96}
temp	int	$tmp38	%read{96,96} %write{93,93}
temp	int	$tmp39	%read{96,96} %write{95,95}
temp	string	$tmp40	%read{99,99} %write{98,98}
temp	int	$tmp41	%read{2147483647,-1} %write{100,100}
const	string	$const21	"channels"		%read{100,100} %write{2147483647,-1}
temp	int	$tmp42	%read{102,102} %write{101,101}
temp	float	$tmp43	%read{122,122} %write{103,103} %derivs
temp	float	$tmp44	%read{122,122} %write{104,104} %derivs
const	string	$const22	"sblur"		%read{122,143} %write{2147483647,-1}
const	string	$const23	"tblur"		%read{122,143} %write{2147483647,-1}
const	string	$const24	"swidth"		%read{122,143} %write{2147483647,-1}
const	string	$const25	"twidth"		%read{122,143} %write{2147483647,-1}
const	string	$const26	"swrap"		%read{122,143} %write{2147483647,-1}
temp	string	$tmp45	%read{122,122} %write{105,105}
const	string	$const27	"twrap"		%read{122,143} %write{2147483647,-1}
temp	string	$tmp46	%read{122,122} %write{106,106}
const	string	$const28	"interp"		%read{122,143} %write{2147483647,-1}
temp	string	$tmp47	%read{122,122} %write{110,120}
const	string	$const29	"get_interpolation_method"		%read{107,128} %write{2147483647,-1}
temp	int	$tmp48	%read{109,109} %write{108,108}
const	string	$const30	"smartcubic"		%read{110,131} %write{2147483647,-1}
temp	int	$tmp49	%read{113,113} %write{112,112}
const	string	$const31	"cubic"		%read{114,135} %write{2147483647,-1}
temp	int	$tmp50	%read{117,117} %write{116,116}
const	string	$const32	"linear"		%read{118,139} %write{2147483647,-1}
const	string	$const33	"closest"		%read{120,141} %write{2147483647,-1}
temp	float	$tmp51	%read{143,143} %write{124,124} %derivs
temp	float	$tmp52	%read{143,143} %write{125,125} %derivs
temp	string	$tmp53	%read{143,143} %write{126,126}
temp	string	$tmp54	%read{143,143} %write{127,127}
const	string	$const34	"firstchannel"		%read{143,143} %write{2147483647,-1}
const	string	$const35	"missingcolor"		%read{143,143} %write{2147483647,-1}
const	string	$const36	"missingalpha"		%read{143,143} %write{2147483647,-1}
const	string	$const37	"alpha"		%read{143,143} %write{2147483647,-1}
temp	string	$tmp55	%read{143,143} %write{131,141}
temp	int	$tmp56	%read{130,130} %write{129,129}
temp	int	$tmp57	%read{134,134} %write{133,133}
temp	int	$tmp58	%read{138,138} %write{137,137}
temp	int	$tmp59	%read{145,155} %write{144,154}
temp	float	$tmp60	%read{152,152} %write{151,151}
const	string	$const38	"max"		%read{146,429} %write{2147483647,-1}
temp	float	$tmp61	%read{151,151} %write{147,147}
temp	float	$tmp62	%read{151,151} %write{150,150}
temp	float	$tmp63	%read{150,150} %write{148,148}
temp	float	$tmp64	%read{150,150} %write{149,149}
const	float	$const39	0		%read{152,1431} %write{2147483647,-1}
temp	int	$tmp65	%read{153,153} %write{152,152}
temp	int	$tmp66	%read{154,154} %write{153,153}
const	color	$const40	0 0 0		%read{156,1585} %write{2147483647,-1}
temp	int	$tmp67	%read{158,158} %write{157,157}
temp	int	$tmp68	%read{161,161} %write{160,160}
const	string	$const41	"sRGB_EOTF"		%read{162,1360} %write{2147483647,-1}
temp	float	$tmp69	%read{199,199} %write{174,174}
temp	float	$tmp70	%read{165,172} %write{163,163}
const	float	$const42	0.0404499993		%read{165,1361} %write{2147483647,-1}
temp	int	$tmp71	%read{166,166} %write{165,165}
const	float	$const43	0.0549999997		%read{167,1363} %write{2147483647,-1}
temp	float	$tmp72	%read{168,168} %write{167,167}
const	float	$const44	1.05499995		%read{168,1364} %write{2147483647,-1}
temp	float	$tmp73	%read{169,169} %write{168,168}
const	float	$const45	2.4000001		%read{169,1527} %write{2147483647,-1}
temp	int	$tmp74	%read{171,171} %write{170,170}
const	float	$const46	12.9200001		%read{172,1368} %write{2147483647,-1}
temp	float	$tmp75	%read{199,199} %write{186,186}
temp	float	$tmp76	%read{177,184} %write{175,175}
temp	int	$tmp77	%read{178,178} %write{177,177}
temp	float	$tmp78	%read{180,180} %write{179,179}
temp	float	$tmp79	%read{181,181} %write{180,180}
temp	int	$tmp80	%read{183,183} %write{182,182}
temp	float	$tmp81	%read{199,199} %write{198,198}
temp	float	$tmp82	%read{189,196} %write{187,187}
temp	int	$tmp83	%read{190,190} %write{189,189}
temp	float	$tmp84	%read{192,192} %write{191,191}
temp	float	$tmp85	%read{193,193} %write{192,192}
temp	int	$tmp86	%read{195,195} %write{194,194}
temp	int	$tmp87	%read{201,201} %write{200,200}
temp	color	$tmp88	%read{246,246} %write{245,245}
const	string	$const47	"Rec709_EOTF"		%read{202,232} %write{2147483647,-1}
temp	float	$tmp89	%read{245,245} %write{216,216}
temp	float	$tmp90	%read{205,214} %write{203,203}
const	float	$const48	0.0810000002		%read{205,233} %write{2147483647,-1}
temp	int	$tmp91	%read{206,206} %write{205,205}
const	float	$const49	0.0989999995		%read{207,235} %write{2147483647,-1}
temp	float	$tmp92	%read{208,208} %write{207,207}
const	float	$const50	1.09899998		%read{208,409} %write{2147483647,-1}
temp	float	$tmp93	%read{210,210} %write{208,208}
const	float	$const51	0.449999988		%read{209,419} %write{2147483647,-1}
temp	float	$tmp94	%read{210,210} %write{209,209}
const	float	$const52	1		%read{209,419} %write{2147483647,-1}
temp	int	$tmp95	%read{212,212} %write{211,211}
const	float	$const53	4.5		%read{213,415} %write{2147483647,-1}
temp	float	$tmp96	%read{214,214} %write{213,213}
temp	float	$tmp97	%read{245,245} %write{230,230}
temp	float	$tmp98	%read{219,228} %write{217,217}
temp	int	$tmp99	%read{220,220} %write{219,219}
temp	float	$tmp100	%read{222,222} %write{221,221}
temp	float	$tmp101	%read{224,224} %write{222,222}
temp	float	$tmp102	%read{224,224} %write{223,223}
temp	int	$tmp103	%read{226,226} %write{225,225}
temp	float	$tmp104	%read{228,228} %write{227,227}
temp	float	$tmp105	%read{245,245} %write{244,244}
temp	float	$tmp106	%read{233,242} %write{231,231}
temp	int	$tmp107	%read{234,234} %write{233,233}
temp	float	$tmp108	%read{236,236} %write{235,235}
temp	float	$tmp109	%read{238,238} %write{236,236}
temp	float	$tmp110	%read{238,238} %write{237,237}
temp	int	$tmp111	%read{240,240} %write{239,239}
temp	float	$tmp112	%read{242,242} %write{241,241}
temp	int	$tmp113	%read{2147483647,-1} %write{246,246}
temp	int	$tmp114	%read{248,248} %write{247,247}
temp	color	$tmp115	%read{275,275} %write{274,274}
const	float	$const54	2.20000005		%read{256,1495} %write{2147483647,-1}
const	string	$const55	"gamma_CCTF"		%read{249,1522} %write{2147483647,-1}
temp	float	$tmp116	%read{274,274} %write{254,256}
temp	float	$tmp117	%read{252,256} %write{250,250}
temp	int	$tmp118	%read{253,253} %write{252,252}
temp	float	$tmp119	%read{274,274} %write{262,264}
temp	float	$tmp120	%read{260,264} %write{258,258}
temp	int	$tmp121	%read{261,261} %write{260,260}
temp	float	$tmp122	%read{274,274} %write{270,272}
temp	float	$tmp123	%read{268,272} %write{266,266}
temp	int	$tmp124	%read{269,269} %write{268,268}
temp	int	$tmp125	%read{2147483647,-1} %write{275,275}
const	int	$const56	4		%read{276,276} %write{2147483647,-1}
temp	int	$tmp126	%read{277,277} %write{276,276}
temp	color	$tmp127	%read{304,304} %write{303,303}
temp	float	$tmp128	%read{303,303} %write{283,285}
temp	float	$tmp129	%read{281,285} %write{279,279}
temp	int	$tmp130	%read{282,282} %write{281,281}
temp	float	$tmp131	%read{303,303} %write{291,293}
temp	float	$tmp132	%read{289,293} %write{287,287}
temp	int	$tmp133	%read{290,290} %write{289,289}
temp	float	$tmp134	%read{303,303} %write{299,301}
temp	float	$tmp135	%read{297,301} %write{295,295}
temp	int	$tmp136	%read{298,298} %write{297,297}
temp	int	$tmp137	%read{2147483647,-1} %write{304,304}
const	int	$const57	5		%read{305,305} %write{2147483647,-1}
temp	int	$tmp138	%read{306,306} %write{305,305}
temp	color	$tmp139	%read{333,333} %write{332,332}
const	float	$const58	2.5999999		%read{314,330} %write{2147483647,-1}
temp	float	$tmp140	%read{332,332} %write{312,314}
temp	float	$tmp141	%read{310,314} %write{308,308}
temp	int	$tmp142	%read{311,311} %write{310,310}
temp	float	$tmp143	%read{332,332} %write{320,322}
temp	float	$tmp144	%read{318,322} %write{316,316}
temp	int	$tmp145	%read{319,319} %write{318,318}
temp	float	$tmp146	%read{332,332} %write{328,330}
temp	float	$tmp147	%read{326,330} %write{324,324}
temp	int	$tmp148	%read{327,327} %write{326,326}
temp	int	$tmp149	%read{2147483647,-1} %write{333,333}
const	int	$const59	6		%read{334,334} %write{2147483647,-1}
temp	int	$tmp150	%read{335,335} %write{334,334}
const	string	$const60	"Rec1886_EOTF"		%read{336,1427} %write{2147483647,-1}
temp	float	$tmp151	%read{358,358} %write{341,342}
temp	float	$tmp152	%read{339,341} %write{337,337}
temp	int	$tmp153	%read{340,340} %write{339,339}
temp	float	$tmp154	%read{358,358} %write{348,349}
temp	float	$tmp155	%read{346,348} %write{344,344}
temp	int	$tmp156	%read{347,347} %write{346,346}
temp	float	$tmp157	%read{358,358} %write{355,356}
temp	float	$tmp158	%read{353,355} %write{351,351}
temp	int	$tmp159	%read{354,354} %write{353,353}
const	int	$const61	7		%read{359,359} %write{2147483647,-1}
temp	int	$tmp160	%read{360,360} %write{359,359}
temp	color	$tmp161	%read{424,424} %write{423,423}
const	string	$const62	"Rec2020_EOTF"		%read{361,404} %write{2147483647,-1}
const	int	$const63	12		%read{367,407} %write{2147483647,-1}
temp	float	$tmp162	%read{423,423} %write{382,382}
temp	float	$tmp163	%read{365,377} %write{363,363}
temp	int	$tmp164	%read{366,366} %write{365,365}
const	int	$const64	10		%read{367,407} %write{2147483647,-1}
temp	int	$tmp165	%read{368,368} %write{367,367}
const	float	$const65	0.0179999992		%read{370,410} %write{2147483647,-1}
const	float	$const66	1.09930003		%read{371,411} %write{2147483647,-1}
const	float	$const67	0.0181000009		%read{372,412} %write{2147483647,-1}
temp	int	$tmp166	%read{374,374} %write{373,373}
temp	float	$tmp167	%read{377,377} %write{376,376}
temp	float	$tmp168	%read{378,378} %write{377,377}
temp	float	$tmp169	%read{380,380} %write{378,378}
temp	float	$tmp170	%read{380,380} %write{379,379}
temp	float	$tmp171	%read{423,423} %write{402,402}
temp	float	$tmp172	%read{385,397} %write{383,383}
temp	int	$tmp173	%read{386,386} %write{385,385}
temp	int	$tmp174	%read{388,388} %write{387,387}
temp	int	$tmp175	%read{394,394} %write{393,393}
temp	float	$tmp176	%read{397,397} %write{396,396}
temp	float	$tmp177	%read{398,398} %write{397,397}
temp	float	$tmp178	%read{400,400} %write{398,398}
temp	float	$tmp179	%read{400,400} %write{399,399}
temp	float	$tmp180	%read{423,423} %write{422,422}
temp	float	$tmp181	%read{405,417} %write{403,403}
temp	int	$tmp182	%read{406,406} %write{405,405}
temp	int	$tmp183	%read{408,408} %write{407,407}
temp	int	$tmp184	%read{414,414} %write{413,413}
temp	float	$tmp185	%read{417,417} %write{416,416}
temp	float	$tmp186	%read{418,418} %write{417,417}
temp	float	$tmp187	%read{420,420} %write{418,418}
temp	float	$tmp188	%read{420,420} %write{419,419}
temp	int	$tmp189	%read{2147483647,-1} %write{424,424}
const	string	$const68	"Raw"		%read{426,426} %write{2147483647,-1}
temp	int	$tmp190	%read{427,427} %write{426,426}
temp	int	$tmp191	%read{428,438} %write{427,437}
temp	float	$tmp192	%read{435,435} %write{434,434}
temp	float	$tmp193	%read{434,434} %write{430,430}
temp	float	$tmp194	%read{434,434} %write{433,433}
temp	float	$tmp195	%read{433,433} %write{431,431}
temp	float	$tmp196	%read{433,433} %write{432,432}
temp	int	$tmp197	%read{436,436} %write{435,435}
temp	int	$tmp198	%read{437,437} %write{436,436}
const	string	$const69	"transform_colorspace_to_workingspace"		%read{439,439} %write{2147483647,-1}
const	string	$const70	"scene-linear Rec 709/sRGB"		%read{440,1376} %write{2147483647,-1}
temp	int	$tmp199	%read{441,441} %write{440,440}
temp	int	$tmp200	%read{442,446} %write{441,445}
const	string	$const71	"sRGB/Rec.709"		%read{443,1565} %write{2147483647,-1}
temp	int	$tmp201	%read{444,444} %write{443,443}
temp	int	$tmp202	%read{445,445} %write{444,444}
const	string	$const72	"transform_color_space_to_Rec709"		%read{447,447} %write{2147483647,-1}
const	string	$const73	"sRGB"		%read{449,1560} %write{2147483647,-1}
temp	int	$tmp203	%read{450,450} %write{449,449}
temp	float	$tmp204	%read{488,488} %write{463,463}
temp	float	$tmp205	%read{454,461} %write{452,452}
temp	int	$tmp206	%read{455,455} %write{454,454}
temp	float	$tmp207	%read{457,457} %write{456,456}
temp	float	$tmp208	%read{458,458} %write{457,457}
temp	int	$tmp209	%read{460,460} %write{459,459}
temp	float	$tmp210	%read{488,488} %write{475,475}
temp	float	$tmp211	%read{466,473} %write{464,464}
temp	int	$tmp212	%read{467,467} %write{466,466}
temp	float	$tmp213	%read{469,469} %write{468,468}
temp	float	$tmp214	%read{470,470} %write{469,469}
temp	int	$tmp215	%read{472,472} %write{471,471}
temp	float	$tmp216	%read{488,488} %write{487,487}
temp	float	$tmp217	%read{478,485} %write{476,476}
temp	int	$tmp218	%read{479,479} %write{478,478}
temp	float	$tmp219	%read{481,481} %write{480,480}
temp	float	$tmp220	%read{482,482} %write{481,481}
temp	int	$tmp221	%read{484,484} %write{483,483}
temp	int	$tmp222	%read{490,490} %write{489,489}
temp	int	$tmp223	%read{491,495} %write{490,494}
temp	int	$tmp224	%read{493,493} %write{492,492}
temp	int	$tmp225	%read{494,494} %write{493,493}
const	string	$const74	"scene-linear Rec 2020"		%read{497,1387} %write{2147483647,-1}
temp	int	$tmp226	%read{498,498} %write{497,497}
temp	int	$tmp227	%read{499,503} %write{498,502}
const	string	$const75	"Rec.2020"		%read{500,1573} %write{2147483647,-1}
temp	int	$tmp228	%read{501,501} %write{500,500}
temp	int	$tmp229	%read{502,502} %write{501,501}
temp	float	$tmp230	%read{507,507} %write{504,504}
const	vector	$const76	1.66049099 -0.58764112 -0.0728497878		%read{504,504} %write{2147483647,-1}
temp	float	$tmp232	%read{507,507} %write{505,505}
const	vector	$const77	-0.124550469 1.13289988 -0.00834941957		%read{505,505} %write{2147483647,-1}
temp	float	$tmp234	%read{507,507} %write{506,506}
const	vector	$const78	-0.0181507599 -0.100578092 1.11872971		%read{506,506} %write{2147483647,-1}
const	string	$const79	"scene-linear DCI-P3"		%read{508,1398} %write{2147483647,-1}
temp	int	$tmp236	%read{509,509} %write{508,508}
temp	int	$tmp237	%read{510,514} %write{509,513}
const	string	$const80	"DCI-P3"		%read{511,1582} %write{2147483647,-1}
temp	int	$tmp238	%read{512,512} %write{511,511}
temp	int	$tmp239	%read{513,513} %write{512,512}
temp	float	$tmp240	%read{518,518} %write{515,515}
const	vector	$const81	1.15751636 -0.154962376 -0.00255402992		%read{515,515} %write{2147483647,-1}
temp	float	$tmp242	%read{518,518} %write{516,516}
const	vector	$const82	-0.0415000692 1.04556787 -0.00406784983		%read{516,516} %write{2147483647,-1}
temp	float	$tmp244	%read{518,518} %write{517,517}
const	vector	$const83	-0.0180500392 -0.078578271 1.09662831		%read{517,517} %write{2147483647,-1}
const	string	$const84	"camera Rec 709"		%read{519,1409} %write{2147483647,-1}
temp	int	$tmp246	%read{520,520} %write{519,519}
temp	float	$tmp247	%read{543,543} %write{526,527}
temp	float	$tmp248	%read{524,526} %write{522,522}
temp	int	$tmp249	%read{525,525} %write{524,524}
temp	float	$tmp250	%read{543,543} %write{533,534}
temp	float	$tmp251	%read{531,533} %write{529,529}
temp	int	$tmp252	%read{532,532} %write{531,531}
temp	float	$tmp253	%read{543,543} %write{540,541}
temp	float	$tmp254	%read{538,540} %write{536,536}
temp	int	$tmp255	%read{539,539} %write{538,538}
const	string	$const85	"gamma 1.8 Rec 709"		%read{544,1438} %write{2147483647,-1}
temp	int	$tmp256	%read{545,545} %write{544,544}
const	float	$const86	1.79999995		%read{553,1463} %write{2147483647,-1}
temp	float	$tmp257	%read{571,571} %write{551,553}
temp	float	$tmp258	%read{549,553} %write{547,547}
temp	int	$tmp259	%read{550,550} %write{549,549}
temp	float	$tmp260	%read{571,571} %write{559,561}
temp	float	$tmp261	%read{557,561} %write{555,555}
temp	int	$tmp262	%read{558,558} %write{557,557}
temp	float	$tmp263	%read{571,571} %write{567,569}
temp	float	$tmp264	%read{565,569} %write{563,563}
temp	int	$tmp265	%read{566,566} %write{565,565}
const	string	$const87	"gamma 2.2 Rec 709"		%read{572,1470} %write{2147483647,-1}
temp	int	$tmp266	%read{573,573} %write{572,572}
temp	float	$tmp267	%read{599,599} %write{579,581}
temp	float	$tmp268	%read{577,581} %write{575,575}
temp	int	$tmp269	%read{578,578} %write{577,577}
temp	float	$tmp270	%read{599,599} %write{587,589}
temp	float	$tmp271	%read{585,589} %write{583,583}
temp	int	$tmp272	%read{586,586} %write{585,585}
temp	float	$tmp273	%read{599,599} %write{595,597}
temp	float	$tmp274	%read{593,597} %write{591,591}
temp	int	$tmp275	%read{594,594} %write{593,593}
const	string	$const88	"gamma 2.4 Rec 709 (video)"		%read{600,1502} %write{2147483647,-1}
temp	int	$tmp276	%read{601,601} %write{600,600}
temp	float	$tmp277	%read{627,627} %write{607,609}
temp	float	$tmp278	%read{605,609} %write{603,603}
temp	int	$tmp279	%read{606,606} %write{605,605}
temp	float	$tmp280	%read{627,627} %write{615,617}
temp	float	$tmp281	%read{613,617} %write{611,611}
temp	int	$tmp282	%read{614,614} %write{613,613}
temp	float	$tmp283	%read{627,627} %write{623,625}
temp	float	$tmp284	%read{621,625} %write{619,619}
temp	int	$tmp285	%read{622,622} %write{621,621}
const	string	$const89	"ACES2065-1"		%read{628,1534} %write{2147483647,-1}
temp	int	$tmp286	%read{629,629} %write{628,628}
temp	int	$tmp287	%read{630,634} %write{629,633}
const	string	$const90	"ACES"		%read{631,1576} %write{2147483647,-1}
temp	int	$tmp288	%read{632,632} %write{631,631}
temp	int	$tmp289	%read{633,633} %write{632,632}
temp	float	$tmp290	%read{638,638} %write{635,635}
const	vector	$const91	2.52168608 -1.13413095 -0.387555212		%read{635,635} %write{2147483647,-1}
temp	float	$tmp292	%read{638,638} %write{636,636}
const	vector	$const92	-0.2764799 1.37271905 -0.0962391719		%read{636,636} %write{2147483647,-1}
temp	float	$tmp294	%read{638,638} %write{637,637}
const	vector	$const93	-0.0153780598 -0.152975336 1.16835344		%read{637,637} %write{2147483647,-1}
const	string	$const94	"ACEScg"		%read{639,1579} %write{2147483647,-1}
temp	int	$tmp296	%read{640,640} %write{639,639}
temp	float	$tmp297	%read{644,644} %write{641,641}
const	vector	$const95	1.70505095 -0.621792138 -0.0832588673		%read{641,641} %write{2147483647,-1}
temp	float	$tmp299	%read{644,644} %write{642,642}
const	vector	$const96	-0.130256414 1.14080477 -0.0105483197		%read{642,642} %write{2147483647,-1}
temp	float	$tmp301	%read{644,644} %write{643,643}
const	vector	$const97	-0.0240033604 -0.128968984 1.15297234		%read{643,643} %write{2147483647,-1}
temp	int	$tmp303	%read{648,648} %write{647,647}
temp	int	$tmp304	%read{649,653} %write{648,652}
temp	int	$tmp305	%read{651,651} %write{650,650}
temp	int	$tmp306	%read{652,652} %write{651,651}
const	string	$const98	"transform_color_space_to_Rec2020"		%read{654,654} %write{2147483647,-1}
temp	int	$tmp307	%read{657,657} %write{656,656}
temp	float	$tmp308	%read{695,695} %write{670,670}
temp	float	$tmp309	%read{661,668} %write{659,659}
temp	int	$tmp310	%read{662,662} %write{661,661}
temp	float	$tmp311	%read{664,664} %write{663,663}
temp	float	$tmp312	%read{665,665} %write{664,664}
temp	int	$tmp313	%read{667,667} %write{666,666}
temp	float	$tmp314	%read{695,695} %write{682,682}
temp	float	$tmp315	%read{673,680} %write{671,671}
temp	int	$tmp316	%read{674,674} %write{673,673}
temp	float	$tmp317	%read{676,676} %write{675,675}
temp	float	$tmp318	%read{677,677} %write{676,676}
temp	int	$tmp319	%read{679,679} %write{678,678}
temp	float	$tmp320	%read{695,695} %write{694,694}
temp	float	$tmp321	%read{685,692} %write{683,683}
temp	int	$tmp322	%read{686,686} %write{685,685}
temp	float	$tmp323	%read{688,688} %write{687,687}
temp	float	$tmp324	%read{689,689} %write{688,688}
temp	int	$tmp325	%read{691,691} %write{690,690}
temp	float	$tmp326	%read{699,699} %write{696,696}
const	vector	$const99	0.627403915 0.329283029 0.0433130711		%read{696,851} %write{2147483647,-1}
temp	float	$tmp328	%read{699,699} %write{697,697}
const	vector	$const100	0.069097288 0.919540405 0.0113623198		%read{697,852} %write{2147483647,-1}
temp	float	$tmp330	%read{699,699} %write{698,698}
const	vector	$const101	0.0163914394 0.0880133137 0.895595253		%read{698,853} %write{2147483647,-1}
temp	int	$tmp332	%read{701,701} %write{700,700}
temp	int	$tmp333	%read{702,706} %write{701,705}
temp	int	$tmp334	%read{704,704} %write{703,703}
temp	int	$tmp335	%read{705,705} %write{704,704}
temp	float	$tmp336	%read{710,710} %write{707,707}
temp	float	$tmp338	%read{710,710} %write{708,708}
temp	float	$tmp340	%read{710,710} %write{709,709}
temp	int	$tmp342	%read{712,712} %write{711,711}
temp	int	$tmp343	%read{713,717} %write{712,716}
temp	int	$tmp344	%read{715,715} %write{714,714}
temp	int	$tmp345	%read{716,716} %write{715,715}
temp	int	$tmp346	%read{720,720} %write{719,719}
temp	int	$tmp347	%read{721,725} %write{720,724}
temp	int	$tmp348	%read{723,723} %write{722,722}
temp	int	$tmp349	%read{724,724} %write{723,723}
temp	float	$tmp350	%read{729,729} %write{726,726}
const	vector	$const102	0.71178323 0.243660316 0.0445564501		%read{726,726} %write{2147483647,-1}
temp	float	$tmp352	%read{729,729} %write{727,727}
const	vector	$const103	0.0415141582 0.949841619 0.0085432101		%read{727,727} %write{2147483647,-1}
temp	float	$tmp354	%read{729,729} %write{728,728}
const	vector	$const104	-0.000844730006 0.0191095099 0.981735229		%read{728,728} %write{2147483647,-1}
temp	int	$tmp356	%read{731,731} %write{730,730}
temp	float	$tmp357	%read{754,754} %write{737,738}
temp	float	$tmp358	%read{735,737} %write{733,733}
temp	int	$tmp359	%read{736,736} %write{735,735}
temp	float	$tmp360	%read{754,754} %write{744,745}
temp	float	$tmp361	%read{742,744} %write{740,740}
temp	int	$tmp362	%read{743,743} %write{742,742}
temp	float	$tmp363	%read{754,754} %write{751,752}
temp	float	$tmp364	%read{749,751} %write{747,747}
temp	int	$tmp365	%read{750,750} %write{749,749}
temp	float	$tmp366	%read{758,758} %write{755,755}
temp	float	$tmp368	%read{758,758} %write{756,756}
temp	float	$tmp370	%read{758,758} %write{757,757}
temp	int	$tmp372	%read{760,760} %write{759,759}
temp	float	$tmp373	%read{786,786} %write{766,768}
temp	float	$tmp374	%read{764,768} %write{762,762}
temp	int	$tmp375	%read{765,765} %write{764,764}
temp	float	$tmp376	%read{786,786} %write{774,776}
temp	float	$tmp377	%read{772,776} %write{770,770}
temp	int	$tmp378	%read{773,773} %write{772,772}
temp	float	$tmp379	%read{786,786} %write{782,784}
temp	float	$tmp380	%read{780,784} %write{778,778}
temp	int	$tmp381	%read{781,781} %write{780,780}
temp	float	$tmp382	%read{790,790} %write{787,787}
temp	float	$tmp384	%read{790,790} %write{788,788}
temp	float	$tmp386	%read{790,790} %write{789,789}
temp	int	$tmp388	%read{792,792} %write{791,791}
temp	float	$tmp389	%read{818,818} %write{798,800}
temp	float	$tmp390	%read{796,800} %write{794,794}
temp	int	$tmp391	%read{797,797} %write{796,796}
temp	float	$tmp392	%read{818,818} %write{806,808}
temp	float	$tmp393	%read{804,808} %write{802,802}
temp	int	$tmp394	%read{805,805} %write{804,804}
temp	float	$tmp395	%read{818,818} %write{814,816}
temp	float	$tmp396	%read{812,816} %write{810,810}
temp	int	$tmp397	%read{813,813} %write{812,812}
temp	float	$tmp398	%read{822,822} %write{819,819}
temp	float	$tmp400	%read{822,822} %write{820,820}
temp	float	$tmp402	%read{822,822} %write{821,821}
temp	int	$tmp404	%read{824,824} %write{823,823}
temp	float	$tmp405	%read{850,850} %write{830,832}
temp	float	$tmp406	%read{828,832} %write{826,826}
temp	int	$tmp407	%read{829,829} %write{828,828}
temp	float	$tmp408	%read{850,850} %write{838,840}
temp	float	$tmp409	%read{836,840} %write{834,834}
temp	int	$tmp410	%read{837,837} %write{836,836}
temp	float	$tmp411	%read{850,850} %write{846,848}
temp	float	$tmp412	%read{844,848} %write{842,842}
temp	int	$tmp413	%read{845,845} %write{844,844}
temp	float	$tmp414	%read{854,854} %write{851,851}
temp	float	$tmp416	%read{854,854} %write{852,852}
temp	float	$tmp418	%read{854,854} %write{853,853}
temp	int	$tmp420	%read{856,856} %write{855,855}
temp	int	$tmp421	%read{857,861} %write{856,860}
temp	int	$tmp422	%read{859,859} %write{858,858}
temp	int	$tmp423	%read{860,860} %write{859,859}
temp	float	$tmp424	%read{865,865} %write{862,862}
const	vector	$const105	1.49040949 -0.266170919 -0.224238604		%read{862,862} %write{2147483647,-1}
temp	float	$tmp426	%read{865,865} %write{863,863}
const	vector	$const106	-0.0801675022 1.18216717 -0.101999603		%read{863,863} %write{2147483647,-1}
temp	float	$tmp428	%read{865,865} %write{864,864}
const	vector	$const107	0.00322762993 -0.034776479 1.03154886		%read{864,864} %write{2147483647,-1}
temp	int	$tmp430	%read{867,867} %write{866,866}
temp	float	$tmp431	%read{871,871} %write{868,868}
const	vector	$const108	1.02582479 -0.0200531892 -0.00577156013		%read{868,868} %write{2147483647,-1}
temp	float	$tmp433	%read{871,871} %write{869,869}
const	vector	$const109	-0.00223436998 1.00458646 -0.0023521299		%read{869,869} %write{2147483647,-1}
temp	float	$tmp435	%read{871,871} %write{870,870}
const	vector	$const110	-0.00501334993 -0.0252900701 1.03030348		%read{870,870} %write{2147483647,-1}
temp	int	$tmp437	%read{875,875} %write{874,874}
temp	int	$tmp438	%read{876,880} %write{875,879}
temp	int	$tmp439	%read{878,878} %write{877,877}
temp	int	$tmp440	%read{879,879} %write{878,878}
const	string	$const111	"transform_color_space_to_DCIP3"		%read{881,881} %write{2147483647,-1}
temp	int	$tmp441	%read{884,884} %write{883,883}
temp	float	$tmp442	%read{922,922} %write{897,897}
temp	float	$tmp443	%read{888,895} %write{886,886}
temp	int	$tmp444	%read{889,889} %write{888,888}
temp	float	$tmp445	%read{891,891} %write{890,890}
temp	float	$tmp446	%read{892,892} %write{891,891}
temp	int	$tmp447	%read{894,894} %write{893,893}
temp	float	$tmp448	%read{922,922} %write{909,909}
temp	float	$tmp449	%read{900,907} %write{898,898}
temp	int	$tmp450	%read{901,901} %write{900,900}
temp	float	$tmp451	%read{903,903} %write{902,902}
temp	float	$tmp452	%read{904,904} %write{903,903}
temp	int	$tmp453	%read{906,906} %write{905,905}
temp	float	$tmp454	%read{922,922} %write{921,921}
temp	float	$tmp455	%read{912,919} %write{910,910}
temp	int	$tmp456	%read{913,913} %write{912,912}
temp	float	$tmp457	%read{915,915} %write{914,914}
temp	float	$tmp458	%read{916,916} %write{915,915}
temp	int	$tmp459	%read{918,918} %write{917,917}
temp	float	$tmp460	%read{926,926} %write{923,923}
const	vector	$const112	0.868579745 0.12891914 0.00250112009		%read{923,1078} %write{2147483647,-1}
temp	float	$tmp462	%read{926,926} %write{924,924}
const	vector	$const113	0.0345404111 0.961811364 0.00364820007		%read{924,1079} %write{2147483647,-1}
temp	float	$tmp464	%read{926,926} %write{925,925}
const	vector	$const114	0.0167714301 0.071039997 0.91218859		%read{925,1080} %write{2147483647,-1}
temp	int	$tmp466	%read{928,928} %write{927,927}
temp	int	$tmp467	%read{929,933} %write{928,932}
temp	int	$tmp468	%read{931,931} %write{930,930}
temp	int	$tmp469	%read{932,932} %write{931,931}
temp	float	$tmp470	%read{937,937} %write{934,934}
temp	float	$tmp472	%read{937,937} %write{935,935}
temp	float	$tmp474	%read{937,937} %write{936,936}
temp	int	$tmp476	%read{939,939} %write{938,938}
temp	int	$tmp477	%read{940,944} %write{939,943}
temp	int	$tmp478	%read{942,942} %write{941,941}
temp	int	$tmp479	%read{943,943} %write{942,942}
temp	float	$tmp480	%read{948,948} %write{945,945}
const	vector	$const115	1.42616653 -0.364612281 -0.0615542382		%read{945,945} %write{2147483647,-1}
temp	float	$tmp482	%read{948,948} %write{946,946}
const	vector	$const116	-0.0625062436 1.06897175 -0.0064654802		%read{946,946} %write{2147483647,-1}
temp	float	$tmp484	%read{948,948} %write{947,947}
const	vector	$const117	0.00244382001 -0.0211213008 1.01867747		%read{947,947} %write{2147483647,-1}
temp	int	$tmp486	%read{950,950} %write{949,949}
temp	int	$tmp487	%read{951,955} %write{950,954}
temp	int	$tmp488	%read{953,953} %write{952,952}
temp	int	$tmp489	%read{954,954} %write{953,953}
temp	int	$tmp490	%read{958,958} %write{957,957}
temp	float	$tmp491	%read{981,981} %write{964,965}
temp	float	$tmp492	%read{962,964} %write{960,960}
temp	int	$tmp493	%read{963,963} %write{962,962}
temp	float	$tmp494	%read{981,981} %write{971,972}
temp	float	$tmp495	%read{969,971} %write{967,967}
temp	int	$tmp496	%read{970,970} %write{969,969}
temp	float	$tmp497	%read{981,981} %write{978,979}
temp	float	$tmp498	%read{976,978} %write{974,974}
temp	int	$tmp499	%read{977,977} %write{976,976}
temp	float	$tmp500	%read{985,985} %write{982,982}
temp	float	$tmp502	%read{985,985} %write{983,983}
temp	float	$tmp504	%read{985,985} %write{984,984}
temp	int	$tmp506	%read{987,987} %write{986,986}
temp	float	$tmp507	%read{1013,1013} %write{993,995}
temp	float	$tmp508	%read{991,995} %write{989,989}
temp	int	$tmp509	%read{992,992} %write{991,991}
temp	float	$tmp510	%read{1013,1013} %write{1001,1003}
temp	float	$tmp511	%read{999,1003} %write{997,997}
temp	int	$tmp512	%read{1000,1000} %write{999,999}
temp	float	$tmp513	%read{1013,1013} %write{1009,1011}
temp	float	$tmp514	%read{1007,1011} %write{1005,1005}
temp	int	$tmp515	%read{1008,1008} %write{1007,1007}
temp	float	$tmp516	%read{1017,1017} %write{1014,1014}
temp	float	$tmp518	%read{1017,1017} %write{1015,1015}
temp	float	$tmp520	%read{1017,1017} %write{1016,1016}
temp	int	$tmp522	%read{1019,1019} %write{1018,1018}
temp	float	$tmp523	%read{1045,1045} %write{1025,1027}
temp	float	$tmp524	%read{1023,1027} %write{1021,1021}
temp	int	$tmp525	%read{1024,1024} %write{1023,1023}
temp	float	$tmp526	%read{1045,1045} %write{1033,1035}
temp	float	$tmp527	%read{1031,1035} %write{1029,1029}
temp	int	$tmp528	%read{1032,1032} %write{1031,1031}
temp	float	$tmp529	%read{1045,1045} %write{1041,1043}
temp	float	$tmp530	%read{1039,1043} %write{1037,1037}
temp	int	$tmp531	%read{1040,1040} %write{1039,1039}
temp	float	$tmp532	%read{1049,1049} %write{1046,1046}
temp	float	$tmp534	%read{1049,1049} %write{1047,1047}
temp	float	$tmp536	%read{1049,1049} %write{1048,1048}
temp	int	$tmp538	%read{1051,1051} %write{1050,1050}
temp	float	$tmp539	%read{1077,1077} %write{1057,1059}
temp	float	$tmp540	%read{1055,1059} %write{1053,1053}
temp	int	$tmp541	%read{1056,1056} %write{1055,1055}
temp	float	$tmp542	%read{1077,1077} %write{1065,1067}
temp	float	$tmp543	%read{1063,1067} %write{1061,1061}
temp	int	$tmp544	%read{1064,1064} %write{1063,1063}
temp	float	$tmp545	%read{1077,1077} %write{1073,1075}
temp	float	$tmp546	%read{1071,1075} %write{1069,1069}
temp	int	$tmp547	%read{1072,1072} %write{1071,1071}
temp	float	$tmp548	%read{1081,1081} %write{1078,1078}
temp	float	$tmp550	%read{1081,1081} %write{1079,1079}
temp	float	$tmp552	%read{1081,1081} %write{1080,1080}
temp	int	$tmp554	%read{1083,1083} %write{1082,1082}
temp	int	$tmp555	%read{1084,1088} %write{1083,1087}
temp	int	$tmp556	%read{1086,1086} %write{1085,1085}
temp	int	$tmp557	%read{1087,1087} %write{1086,1086}
temp	float	$tmp558	%read{1092,1092} %write{1089,1089}
const	vector	$const118	2.15460348 -0.808496058 -0.346107483		%read{1089,1089} %write{2147483647,-1}
temp	float	$tmp560	%read{1092,1092} %write{1090,1090}
const	vector	$const119	-0.178877562 1.28056538 -0.101687863		%read{1090,1090} %write{2147483647,-1}
temp	float	$tmp562	%read{1092,1092} %write{1091,1091}
const	vector	$const120	0.00862345006 -0.0610453896 1.05242193		%read{1091,1091} %write{2147483647,-1}
temp	int	$tmp564	%read{1094,1094} %write{1093,1093}
temp	float	$tmp565	%read{1098,1098} %write{1095,1095}
const	vector	$const121	1.46412015 -0.393327028 -0.0707931295		%read{1095,1095} %write{2147483647,-1}
temp	float	$tmp567	%read{1098,1098} %write{1096,1096}
const	vector	$const122	-0.066476509 1.07529151 -0.00881501008		%read{1096,1096} %write{2147483647,-1}
temp	float	$tmp569	%read{1098,1098} %write{1097,1097}
const	vector	$const123	-0.00255285995 -0.0470295995 1.04958248		%read{1097,1097} %write{2147483647,-1}
temp	int	$tmp571	%read{1102,1102} %write{1101,1101}
temp	int	$tmp572	%read{1103,1107} %write{1102,1106}
temp	int	$tmp573	%read{1105,1105} %write{1104,1104}
temp	int	$tmp574	%read{1106,1106} %write{1105,1105}
const	string	$const124	"transform_color_space_to_ACES"		%read{1108,1108} %write{2147483647,-1}
temp	int	$tmp575	%read{1111,1111} %write{1110,1110}
temp	float	$tmp576	%read{1149,1149} %write{1124,1124}
temp	float	$tmp577	%read{1115,1122} %write{1113,1113}
temp	int	$tmp578	%read{1116,1116} %write{1115,1115}
temp	float	$tmp579	%read{1118,1118} %write{1117,1117}
temp	float	$tmp580	%read{1119,1119} %write{1118,1118}
temp	int	$tmp581	%read{1121,1121} %write{1120,1120}
temp	float	$tmp582	%read{1149,1149} %write{1136,1136}
temp	float	$tmp583	%read{1127,1134} %write{1125,1125}
temp	int	$tmp584	%read{1128,1128} %write{1127,1127}
temp	float	$tmp585	%read{1130,1130} %write{1129,1129}
temp	float	$tmp586	%read{1131,1131} %write{1130,1130}
temp	int	$tmp587	%read{1133,1133} %write{1132,1132}
temp	float	$tmp588	%read{1149,1149} %write{1148,1148}
temp	float	$tmp589	%read{1139,1146} %write{1137,1137}
temp	int	$tmp590	%read{1140,1140} %write{1139,1139}
temp	float	$tmp591	%read{1142,1142} %write{1141,1141}
temp	float	$tmp592	%read{1143,1143} %write{1142,1142}
temp	int	$tmp593	%read{1145,1145} %write{1144,1144}
temp	float	$tmp594	%read{1153,1153} %write{1150,1150}
const	vector	$const125	0.439632982 0.382988691 0.177378327		%read{1150,1308} %write{2147483647,-1}
temp	float	$tmp596	%read{1153,1153} %write{1151,1151}
const	vector	$const126	0.0897764415 0.813439429 0.0967841297		%read{1151,1309} %write{2147483647,-1}
temp	float	$tmp598	%read{1153,1153} %write{1152,1152}
const	vector	$const127	0.0175411701 0.111546554 0.870912254		%read{1152,1310} %write{2147483647,-1}
temp	int	$tmp600	%read{1155,1155} %write{1154,1154}
temp	int	$tmp601	%read{1156,1160} %write{1155,1159}
temp	int	$tmp602	%read{1158,1158} %write{1157,1157}
temp	int	$tmp603	%read{1159,1159} %write{1158,1158}
temp	float	$tmp604	%read{1164,1164} %write{1161,1161}
temp	float	$tmp606	%read{1164,1164} %write{1162,1162}
temp	float	$tmp608	%read{1164,1164} %write{1163,1163}
temp	int	$tmp610	%read{1166,1166} %write{1165,1165}
temp	int	$tmp611	%read{1167,1171} %write{1166,1170}
temp	int	$tmp612	%read{1169,1169} %write{1168,1168}
temp	int	$tmp613	%read{1170,1170} %write{1169,1169}
temp	float	$tmp614	%read{1175,1175} %write{1172,1172}
const	vector	$const128	0.679085612 0.157700911 0.163213447		%read{1172,1172} %write{2147483647,-1}
temp	float	$tmp616	%read{1175,1175} %write{1173,1173}
const	vector	$const129	0.0460020006 0.859054685 0.0949433222		%read{1173,1173} %write{2147483647,-1}
temp	float	$tmp618	%read{1175,1175} %write{1174,1174}
const	vector	$const130	-0.000573939993 0.0284677707 0.972106159		%read{1174,1174} %write{2147483647,-1}
temp	int	$tmp620	%read{1177,1177} %write{1176,1176}
temp	int	$tmp621	%read{1178,1182} %write{1177,1181}
temp	int	$tmp622	%read{1180,1180} %write{1179,1179}
temp	int	$tmp623	%read{1181,1181} %write{1180,1180}
temp	float	$tmp624	%read{1186,1186} %write{1183,1183}
const	vector	$const131	0.489786655 0.318376034 0.191837311		%read{1183,1183} %write{2147483647,-1}
temp	float	$tmp626	%read{1186,1186} %write{1184,1184}
const	vector	$const132	0.0684129521 0.828989089 0.102597967		%read{1184,1184} %write{2147483647,-1}
temp	float	$tmp628	%read{1186,1186} %write{1185,1185}
const	vector	$const133	-4.50000007e-05 0.0454764888 0.954568505		%read{1185,1185} %write{2147483647,-1}
temp	int	$tmp630	%read{1188,1188} %write{1187,1187}
temp	float	$tmp631	%read{1211,1211} %write{1194,1195}
temp	float	$tmp632	%read{1192,1194} %write{1190,1190}
temp	int	$tmp633	%read{1193,1193} %write{1192,1192}
temp	float	$tmp634	%read{1211,1211} %write{1201,1202}
temp	float	$tmp635	%read{1199,1201} %write{1197,1197}
temp	int	$tmp636	%read{1200,1200} %write{1199,1199}
temp	float	$tmp637	%read{1211,1211} %write{1208,1209}
temp	float	$tmp638	%read{1206,1208} %write{1204,1204}
temp	int	$tmp639	%read{1207,1207} %write{1206,1206}
temp	float	$tmp640	%read{1215,1215} %write{1212,1212}
temp	float	$tmp642	%read{1215,1215} %write{1213,1213}
temp	float	$tmp644	%read{1215,1215} %write{1214,1214}
temp	int	$tmp646	%read{1217,1217} %write{1216,1216}
temp	float	$tmp647	%read{1243,1243} %write{1223,1225}
temp	float	$tmp648	%read{1221,1225} %write{1219,1219}
temp	int	$tmp649	%read{1222,1222} %write{1221,1221}
temp	float	$tmp650	%read{1243,1243} %write{1231,1233}
temp	float	$tmp651	%read{1229,1233} %write{1227,1227}
temp	int	$tmp652	%read{1230,1230} %write{1229,1229}
temp	float	$tmp653	%read{1243,1243} %write{1239,1241}
temp	float	$tmp654	%read{1237,1241} %write{1235,1235}
temp	int	$tmp655	%read{1238,1238} %write{1237,1237}
temp	float	$tmp656	%read{1247,1247} %write{1244,1244}
temp	float	$tmp658	%read{1247,1247} %write{1245,1245}
temp	float	$tmp660	%read{1247,1247} %write{1246,1246}
temp	int	$tmp662	%read{1249,1249} %write{1248,1248}
temp	float	$tmp663	%read{1275,1275} %write{1255,1257}
temp	float	$tmp664	%read{1253,1257} %write{1251,1251}
temp	int	$tmp665	%read{1254,1254} %write{1253,1253}
temp	float	$tmp666	%read{1275,1275} %write{1263,1265}
temp	float	$tmp667	%read{1261,1265} %write{1259,1259}
temp	int	$tmp668	%read{1262,1262} %write{1261,1261}
temp	float	$tmp669	%read{1275,1275} %write{1271,1273}
temp	float	$tmp670	%read{1269,1273} %write{1267,1267}
temp	int	$tmp671	%read{1270,1270} %write{1269,1269}
temp	float	$tmp672	%read{1279,1279} %write{1276,1276}
temp	float	$tmp674	%read{1279,1279} %write{1277,1277}
temp	float	$tmp676	%read{1279,1279} %write{1278,1278}
temp	int	$tmp678	%read{1281,1281} %write{1280,1280}
temp	float	$tmp679	%read{1307,1307} %write{1287,1289}
temp	float	$tmp680	%read{1285,1289} %write{1283,1283}
temp	int	$tmp681	%read{1286,1286} %write{1285,1285}
temp	float	$tmp682	%read{1307,1307} %write{1295,1297}
temp	float	$tmp683	%read{1293,1297} %write{1291,1291}
temp	int	$tmp684	%read{1294,1294} %write{1293,1293}
temp	float	$tmp685	%read{1307,1307} %write{1303,1305}
temp	float	$tmp686	%read{1301,1305} %write{1299,1299}
temp	int	$tmp687	%read{1302,1302} %write{1301,1301}
temp	float	$tmp688	%read{1311,1311} %write{1308,1308}
temp	float	$tmp690	%read{1311,1311} %write{1309,1309}
temp	float	$tmp692	%read{1311,1311} %write{1310,1310}
temp	int	$tmp694	%read{1313,1313} %write{1312,1312}
temp	int	$tmp695	%read{1314,1318} %write{1313,1317}
temp	int	$tmp696	%read{1316,1316} %write{1315,1315}
temp	int	$tmp697	%read{1317,1317} %write{1316,1316}
temp	int	$tmp698	%read{1321,1321} %write{1320,1320}
temp	float	$tmp699	%read{1325,1325} %write{1322,1322}
const	vector	$const134	0.695452213 0.140678704 0.163869053		%read{1322,1322} %write{2147483647,-1}
temp	float	$tmp701	%read{1325,1325} %write{1323,1323}
const	vector	$const135	0.0447945595 0.859671116 0.0955343172		%read{1323,1323} %write{2147483647,-1}
temp	float	$tmp703	%read{1325,1325} %write{1324,1324}
const	vector	$const136	-0.00552588003 0.00402521016 1.00150073		%read{1324,1324} %write{2147483647,-1}
temp	int	$tmp705	%read{1329,1329} %write{1328,1328}
const	string	$const137	"transform_color_space_to_ACEScg"		%read{1330,1330} %write{2147483647,-1}
temp	int	$tmp706	%read{1333,1333} %write{1332,1332}
temp	float	$tmp707	%read{1371,1371} %write{1346,1346}
temp	float	$tmp708	%read{1337,1344} %write{1335,1335}
temp	int	$tmp709	%read{1338,1338} %write{1337,1337}
temp	float	$tmp710	%read{1340,1340} %write{1339,1339}
temp	float	$tmp711	%read{1341,1341} %write{1340,1340}
temp	int	$tmp712	%read{1343,1343} %write{1342,1342}
temp	float	$tmp713	%read{1371,1371} %write{1358,1358}
temp	float	$tmp714	%read{1349,1356} %write{1347,1347}
temp	int	$tmp715	%read{1350,1350} %write{1349,1349}
temp	float	$tmp716	%read{1352,1352} %write{1351,1351}
temp	float	$tmp717	%read{1353,1353} %write{1352,1352}
temp	int	$tmp718	%read{1355,1355} %write{1354,1354}
temp	float	$tmp719	%read{1371,1371} %write{1370,1370}
temp	float	$tmp720	%read{1361,1368} %write{1359,1359}
temp	int	$tmp721	%read{1362,1362} %write{1361,1361}
temp	float	$tmp722	%read{1364,1364} %write{1363,1363}
temp	float	$tmp723	%read{1365,1365} %write{1364,1364}
temp	int	$tmp724	%read{1367,1367} %write{1366,1366}
temp	float	$tmp725	%read{1375,1375} %write{1372,1372}
const	vector	$const138	0.613097429 0.339523137 0.047379449		%read{1372,1530} %write{2147483647,-1}
temp	float	$tmp727	%read{1375,1375} %write{1373,1373}
const	vector	$const139	0.0701937228 0.916353881 0.0134524005		%read{1373,1531} %write{2147483647,-1}
temp	float	$tmp729	%read{1375,1375} %write{1374,1374}
const	vector	$const140	0.0206155907 0.109569773 0.869814634		%read{1374,1532} %write{2147483647,-1}
temp	int	$tmp731	%read{1377,1377} %write{1376,1376}
temp	int	$tmp732	%read{1378,1382} %write{1377,1381}
temp	int	$tmp733	%read{1380,1380} %write{1379,1379}
temp	int	$tmp734	%read{1381,1381} %write{1380,1380}
temp	float	$tmp735	%read{1386,1386} %write{1383,1383}
temp	float	$tmp737	%read{1386,1386} %write{1384,1384}
temp	float	$tmp739	%read{1386,1386} %write{1385,1385}
temp	int	$tmp741	%read{1388,1388} %write{1387,1387}
temp	int	$tmp742	%read{1389,1393} %write{1388,1392}
temp	int	$tmp743	%read{1391,1391} %write{1390,1390}
temp	int	$tmp744	%read{1392,1392} %write{1391,1391}
temp	float	$tmp745	%read{1397,1397} %write{1394,1394}
const	vector	$const141	0.974895 0.0195991099 0.00550591014		%read{1394,1394} %write{2147483647,-1}
temp	float	$tmp747	%read{1397,1397} %write{1395,1395}
const	vector	$const142	0.00217956002 0.995535493 0.0022849699		%read{1395,1395} %write{2147483647,-1}
temp	float	$tmp749	%read{1397,1397} %write{1396,1396}
const	vector	$const143	0.00479723979 0.0245320201 0.97067076		%read{1396,1396} %write{2147483647,-1}
temp	int	$tmp751	%read{1399,1399} %write{1398,1398}
temp	int	$tmp752	%read{1400,1404} %write{1399,1403}
temp	int	$tmp753	%read{1402,1402} %write{1401,1401}
temp	int	$tmp754	%read{1403,1403} %write{1402,1402}
temp	float	$tmp755	%read{1408,1408} %write{1405,1405}
const	vector	$const144	0.694724858 0.256264478 0.0490106493		%read{1405,1405} %write{2147483647,-1}
temp	float	$tmp757	%read{1408,1408} %write{1406,1406}
const	vector	$const145	0.0429788195 0.946175754 0.0108454097		%read{1406,1406} %write{2147483647,-1}
temp	float	$tmp759	%read{1408,1408} %write{1407,1407}
const	vector	$const146	0.00361555 0.0430194698 0.953364968		%read{1407,1407} %write{2147483647,-1}
temp	int	$tmp761	%read{1410,1410} %write{1409,1409}
temp	float	$tmp762	%read{1433,1433} %write{1416,1417}
temp	float	$tmp763	%read{1414,1416} %write{1412,1412}
temp	int	$tmp764	%read{1415,1415} %write{1414,1414}
temp	float	$tmp765	%read{1433,1433} %write{1423,1424}
temp	float	$tmp766	%read{1421,1423} %write{1419,1419}
temp	int	$tmp767	%read{1422,1422} %write{1421,1421}
temp	float	$tmp768	%read{1433,1433} %write{1430,1431}
temp	float	$tmp769	%read{1428,1430} %write{1426,1426}
temp	int	$tmp770	%read{1429,1429} %write{1428,1428}
temp	float	$tmp771	%read{1437,1437} %write{1434,1434}
temp	float	$tmp773	%read{1437,1437} %write{1435,1435}
temp	float	$tmp775	%read{1437,1437} %write{1436,1436}
temp	int	$tmp777	%read{1439,1439} %write{1438,1438}
temp	float	$tmp778	%read{1465,1465} %write{1445,1447}
temp	float	$tmp779	%read{1443,1447} %write{1441,1441}
temp	int	$tmp780	%read{1444,1444} %write{1443,1443}
temp	float	$tmp781	%read{1465,1465} %write{1453,1455}
temp	float	$tmp782	%read{1451,1455} %write{1449,1449}
temp	int	$tmp783	%read{1452,1452} %write{1451,1451}
temp	float	$tmp784	%read{1465,1465} %write{1461,1463}
temp	float	$tmp785	%read{1459,1463} %write{1457,1457}
temp	int	$tmp786	%read{1460,1460} %write{1459,1459}
temp	float	$tmp787	%read{1469,1469} %write{1466,1466}
temp	float	$tmp789	%read{1469,1469} %write{1467,1467}
temp	float	$tmp791	%read{1469,1469} %write{1468,1468}
temp	int	$tmp793	%read{1471,1471} %write{1470,1470}
temp	float	$tmp794	%read{1497,1497} %write{1477,1479}
temp	float	$tmp795	%read{1475,1479} %write{1473,1473}
temp	int	$tmp796	%read{1476,1476} %write{1475,1475}
temp	float	$tmp797	%read{1497,1497} %write{1485,1487}
temp	float	$tmp798	%read{1483,1487} %write{1481,1481}
temp	int	$tmp799	%read{1484,1484} %write{1483,1483}
temp	float	$tmp800	%read{1497,1497} %write{1493,1495}
temp	float	$tmp801	%read{1491,1495} %write{1489,1489}
temp	int	$tmp802	%read{1492,1492} %write{1491,1491}
temp	float	$tmp803	%read{1501,1501} %write{1498,1498}
temp	float	$tmp805	%read{1501,1501} %write{1499,1499}
temp	float	$tmp807	%read{1501,1501} %write{1500,1500}
temp	int	$tmp809	%read{1503,1503} %write{1502,1502}
temp	float	$tmp810	%read{1529,1529} %write{1509,1511}
temp	float	$tmp811	%read{1507,1511} %write{1505,1505}
temp	int	$tmp812	%read{1508,1508} %write{1507,1507}
temp	float	$tmp813	%read{1529,1529} %write{1517,1519}
temp	float	$tmp814	%read{1515,1519} %write{1513,1513}
temp	int	$tmp815	%read{1516,1516} %write{1515,1515}
temp	float	$tmp816	%read{1529,1529} %write{1525,1527}
temp	float	$tmp817	%read{1523,1527} %write{1521,1521}
temp	int	$tmp818	%read{1524,1524} %write{1523,1523}
temp	float	$tmp819	%read{1533,1533} %write{1530,1530}
temp	float	$tmp821	%read{1533,1533} %write{1531,1531}
temp	float	$tmp823	%read{1533,1533} %write{1532,1532}
temp	int	$tmp825	%read{1535,1535} %write{1534,1534}
temp	int	$tmp826	%read{1536,1540} %write{1535,1539}
temp	int	$tmp827	%read{1538,1538} %write{1537,1537}
temp	int	$tmp828	%read{1539,1539} %write{1538,1538}
temp	float	$tmp829	%read{1544,1544} %write{1541,1541}
const	vector	$const147	1.45143926 -0.236510754 -0.214928567		%read{1541,1541} %write{2147483647,-1}
temp	float	$tmp831	%read{1544,1544} %write{1542,1542}
const	vector	$const148	-0.0765537694 1.17622972 -0.099675931		%read{1542,1542} %write{2147483647,-1}
temp	float	$tmp833	%read{1544,1544} %write{1543,1543}
const	vector	$const149	0.00831614994 -0.00603245012 0.997716308		%read{1543,1543} %write{2147483647,-1}
temp	int	$tmp835	%read{1546,1546} %write{1545,1545}
const	string	$const150	"as_luminance"		%read{1553,1553} %write{2147483647,-1}
const	string	$const151	"Rec.601"		%read{1554,1554} %write{2147483647,-1}
temp	int	$tmp836	%read{1555,1555} %write{1554,1554}
const	color	$const152	0.222004309 0.706654787 0.0713409185		%read{1556,1556} %write{2147483647,-1}
const	string	$const153	"Rec.709"		%read{1557,1557} %write{2147483647,-1}
temp	int	$tmp837	%read{1558,1558} %write{1557,1557}
temp	int	$tmp838	%read{1559,1563} %write{1558,1562}
temp	int	$tmp839	%read{1561,1561} %write{1560,1560}
temp	int	$tmp840	%read{1562,1562} %write{1561,1561}
temp	int	$tmp841	%read{1564,1568} %write{1563,1567}
temp	int	$tmp842	%read{1566,1566} %write{1565,1565}
temp	int	$tmp843	%read{1567,1567} %write{1566,1566}
const	color	$const154	0.212639004 0.715168655 0.0721923187		%read{1569,1569} %write{2147483647,-1}
const	string	$const155	"AdobeRGB"		%read{1570,1570} %write{2147483647,-1}
temp	int	$tmp844	%read{1571,1571} %write{1570,1570}
const	color	$const156	0.297340006 0.627359986 0.0752900019		%read{1572,1572} %write{2147483647,-1}
temp	int	$tmp845	%read{1574,1574} %write{1573,1573}
const	color	$const157	0.2627002 0.677998066 0.0593017191		%read{1575,1575} %write{2147483647,-1}
temp	int	$tmp846	%read{1577,1577} %write{1576,1576}
const	color	$const158	0.343966454 0.728166103 -0.0721325502		%read{1578,1581} %write{2147483647,-1}
temp	int	$tmp847	%read{1580,1580} %write{1579,1579}
temp	int	$tmp848	%read{1583,1583} %write{1582,1582}
const	color	$const159	0.209491685 0.721595228 0.0689130723		%read{1584,1584} %write{2147483647,-1}
temp	float	$tmp849	%read{1588,1588} %write{1586,1586}
temp	float	$tmp850	%read{1588,1588} %write{1587,1587}
temp	float	$tmp851	%read{1592,1592} %write{1588,1588}
temp	float	$tmp852	%read{1591,1591} %write{1589,1589}
temp	float	$tmp853	%read{1591,1591} %write{1590,1590}
temp	float	$tmp854	%read{1592,1592} %write{1591,1591}
temp	float	$tmp855	%read{1596,1596} %write{1592,1592}
temp	float	$tmp856	%read{1595,1595} %write{1593,1593}
temp	float	$tmp857	%read{1595,1595} %write{1594,1594}
temp	float	$tmp858	%read{1596,1596} %write{1595,1595}
temp	float	$tmp859	%read{1599,1599} %write{1597,1597}
temp	float	$tmp860	%read{1599,1599} %write{1598,1598}
temp	float	$tmp861	%read{1601,1601} %write{1599,1599}
temp	float	$tmp862	%read{1601,1601} %write{1600,1600}
temp	float	$tmp863	%read{1602,1602} %write{1601,1601}
const	float	$const160	3		%read{1602,1602} %write{2147483647,-1}
code in_texture_coords
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:262
#     float in_texture_coords[2] = {u, v}
	aassign		in_texture_coords $const1 u 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{262} %argrw{"wrr"}
	aassign		in_texture_coords $const2 v 	%argrw{"wrr"}
code ___main___
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:300
#     if (in_filename == "")
	eq		$tmp1 in_filename $const3 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{300} %argrw{"wrr"}
	if		$tmp1 5 10 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:302
#         return;
	exit	%line{302}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:306
#         int valid_file = 0;
	assign		___740_valid_file $const1 	%line{306} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:307
#         gettextureinfo(in_filename, "exists", valid_file);
	gettextureinfo	$tmp2 in_filename $const4 ___740_valid_file 	%line{307} %argrw{"wrrw"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:309
#         if (!valid_file)
	eq		$tmp3 ___740_valid_file $const1 	%line{309} %argrw{"wrr"}
	if		$tmp3 10 10 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:311
#             return;
	exit	%line{311}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:316
#     string wrap_mode[2], texname = "";
	assign		texname $const3 	%line{316} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:318
#     set_wrap_mode(in_s_wrap, in_t_wrap, wrap_mode);
	functioncall	$const5 52 	%line{318} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	functioncall	$const6 31 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{69} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp5 in_s_wrap $const1 	%line{34} %argrw{"wrr"}
	if		$tmp5 17 31 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp4 $const7 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp6 in_s_wrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp6 21 31 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp4 $const8 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp7 in_s_wrap $const9 	%line{42} %argrw{"wrr"}
	if		$tmp7 25 31 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp4 $const10 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp8 in_s_wrap $const11 	%line{46} %argrw{"wrr"}
	if		$tmp8 29 31 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp4 $const12 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp4 $const13 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:69
#     mode[0] = get_wrap_mode(wrap_smode);
	aassign		wrap_mode $const1 $tmp4 	%line{69} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	functioncall	$const6 51 	%line{70} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:34
#     if (wrap_mode == 0)
	eq		$tmp10 in_t_wrap $const1 	%line{34} %argrw{"wrr"}
	if		$tmp10 37 51 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:36
#         return "default";
	assign		$tmp9 $const7 	%line{36} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:38
#     else if (wrap_mode == 1)
	eq		$tmp11 in_t_wrap $const2 	%line{38} %argrw{"wrr"}
	if		$tmp11 41 51 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:40
#         return "black";
	assign		$tmp9 $const8 	%line{40} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:42
#     else if (wrap_mode == 2)
	eq		$tmp12 in_t_wrap $const9 	%line{42} %argrw{"wrr"}
	if		$tmp12 45 51 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:44
#         return "periodic";
	assign		$tmp9 $const10 	%line{44} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:46
#     else if (wrap_mode == 3)
	eq		$tmp13 in_t_wrap $const11 	%line{46} %argrw{"wrr"}
	if		$tmp13 49 51 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:48
#         return "clamp";
	assign		$tmp9 $const12 	%line{48} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:52
#         return "mirror";
	assign		$tmp9 $const13 	%line{52} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:70
#     mode[1] = get_wrap_mode(wrap_tmode);
	aassign		wrap_mode $const2 $tmp9 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:320
#     if (in_atlas_type == 0)
	eq		$tmp14 in_atlas_type $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{320} %argrw{"wrr"}
	if		$tmp14 59 100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:322
#         texname = in_filename;
	assign		texname in_filename 	%line{322} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:324
#         uv_coords[0] = in_texture_coords[0];
	aref		$tmp15 in_texture_coords $const1 	%line{324} %argrw{"wrr"}
	aassign		uv_coords $const1 $tmp15 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:325
#         uv_coords[1] = in_texture_coords[1];
	aref		$tmp16 in_texture_coords $const2 	%line{325} %argrw{"wrr"}
	aassign		uv_coords $const2 $tmp16 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:329
#         uv_coords[0] = u;
	aassign		uv_coords $const1 u 	%line{329} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:330
#         uv_coords[1] = v;
	aassign		uv_coords $const2 v 	%line{330} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:359
#         if (in_atlas_type == 1)
	eq		$tmp17 in_atlas_type $const2 	%line{359} %argrw{"wrr"}
	if		$tmp17 74 100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:363
#             if (regex_search(in_filename, match, "_u[0-9]{1}_v[0-9]{1}"))
	regex_search	$tmp18 in_filename ___744_match $const14 	%line{363} %argrw{"wrwr"}
	if		$tmp18 74 74 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:366
#                     substr(in_filename, 0, match[0]),
	aref		$tmp20 ___744_match $const1 	%line{366} %argrw{"wrr"}
	substr		$tmp19 in_filename $const1 $tmp20 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:368
#                     substr(in_filename, match[1]));
	aref		$tmp22 ___744_match $const2 	%line{368} %argrw{"wrr"}
	functioncall	$const16 71 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:523
# string substr (string s, int start) { return substr (s, start, strlen(s)); }
	strlen		$tmp23 in_filename 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{523} %argrw{"wr"}
	substr		$tmp21 in_filename $tmp22 $tmp23 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:365
#                 texname = concat(
	functioncall	$const17 74 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{365} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:529
#     return concat(concat(a,b), c);
	concat		$tmp24 $tmp19 $const15 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{529} %argrw{"wrr"}
	concat		texname $tmp24 $tmp21 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:371
#         else if (in_atlas_type == 2)
	eq		$tmp25 in_atlas_type $const9 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{371} %argrw{"wrr"}
	if		$tmp25 87 100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:375
#             if (regex_search(in_filename, match, "_u[0-9]{1}_v[0-9]{1}"))
	regex_search	$tmp26 in_filename ___746_match $const14 	%line{375} %argrw{"wrwr"}
	if		$tmp26 87 87 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:378
#                     substr(in_filename, 0, match[0]),
	aref		$tmp28 ___746_match $const1 	%line{378} %argrw{"wrr"}
	substr		$tmp27 in_filename $const1 $tmp28 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:380
#                     substr(in_filename, match[1]));
	aref		$tmp30 ___746_match $const2 	%line{380} %argrw{"wrr"}
	functioncall	$const16 84 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:523
# string substr (string s, int start) { return substr (s, start, strlen(s)); }
	strlen		$tmp31 in_filename 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{523} %argrw{"wr"}
	substr		$tmp29 in_filename $tmp30 $tmp31 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:377
#                 texname = concat(
	functioncall	$const17 87 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{377} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:529
#     return concat(concat(a,b), c);
	concat		$tmp32 $tmp27 $const18 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{529} %argrw{"wrr"}
	concat		texname $tmp32 $tmp29 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:383
#         else if (in_atlas_type == 3)
	eq		$tmp33 in_atlas_type $const11 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{383} %argrw{"wrr"}
	if		$tmp33 100 100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:392
#             if (regex_search(in_filename, match, "\.[1-9][0-9]{3}\."))
	regex_search	$tmp34 in_filename ___748_match $const19 	%line{392} %argrw{"wrwr"}
	if		$tmp34 100 100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:395
#                     substr(in_filename, 0, match[0]),
	aref		$tmp36 ___748_match $const1 	%line{395} %argrw{"wrr"}
	substr		$tmp35 in_filename $const1 $tmp36 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:397
#                     substr(in_filename, match[1]));
	aref		$tmp38 ___748_match $const2 	%line{397} %argrw{"wrr"}
	functioncall	$const16 97 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:523
# string substr (string s, int start) { return substr (s, start, strlen(s)); }
	strlen		$tmp39 in_filename 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{523} %argrw{"wr"}
	substr		$tmp37 in_filename $tmp38 $tmp39 	%argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:394
#                 texname = concat(
	functioncall	$const17 100 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{394} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:529
#     return concat(concat(a,b), c);
	concat		$tmp40 $tmp35 $const20 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{529} %argrw{"wrr"}
	concat		texname $tmp40 $tmp37 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:412
#     gettextureinfo(in_filename, "channels", numchannels);
	gettextureinfo	$tmp41 in_filename $const21 numchannels 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{412} %argrw{"wrrw"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:414
#     if (numchannels == 1)
	eq		$tmp42 numchannels $const2 	%line{414} %argrw{"wrr"}
	if		$tmp42 124 1603 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:418
#             uv_coords[0],
	aref		$tmp43 uv_coords $const1 	%line{418} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:419
#             uv_coords[1],
	aref		$tmp44 uv_coords $const2 	%line{419} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:424
#             "swrap", wrap_mode[0],
	aref		$tmp45 wrap_mode $const1 	%line{424} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:425
#             "twrap", wrap_mode[1],
	aref		$tmp46 wrap_mode $const2 	%line{425} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:426
#             "interp", get_interpolation_method(in_interpolation_method));
	functioncall	$const29 122 	%line{426} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:95
#     if (method == 0)
	eq		$tmp48 in_interpolation_method $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{95} %argrw{"wrr"}
	if		$tmp48 112 122 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:97
#         return "smartcubic";
	assign		$tmp47 $const30 	%line{97} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:99
#     else if (method == 1)
	eq		$tmp49 in_interpolation_method $const2 	%line{99} %argrw{"wrr"}
	if		$tmp49 116 122 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:101
#         return "cubic";
	assign		$tmp47 $const31 	%line{101} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:103
#     else if (method == 2)
	eq		$tmp50 in_interpolation_method $const9 	%line{103} %argrw{"wrr"}
	if		$tmp50 120 122 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:105
#         return "linear";
	assign		$tmp47 $const32 	%line{105} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:109
#         return "closest";
	assign		$tmp47 $const33 	%line{109} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:416
#         out_channel = (float) texture(
	texture		out_channel texname $tmp43 $tmp44 $const22 in_s_blur_amount $const23 in_t_blur_amount $const24 in_s_filter_width $const25 in_t_filter_width $const26 $tmp45 $const27 $tmp46 $const28 $tmp47 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{416} %argrw{"wrrrrrrrrrrrrrrrrr"} %argderivs{2,3}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:428
#         out_color = color(out_channel);
	assign		out_color out_channel 	%line{428} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:434
#             uv_coords[0],
	aref		$tmp51 uv_coords $const1 	%line{434} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:435
#             uv_coords[1],
	aref		$tmp52 uv_coords $const2 	%line{435} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:440
#             "swrap", wrap_mode[0],
	aref		$tmp53 wrap_mode $const1 	%line{440} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:441
#             "twrap", wrap_mode[1],
	aref		$tmp54 wrap_mode $const2 	%line{441} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:446
#             "interp", get_interpolation_method(in_interpolation_method));
	functioncall	$const29 143 	%line{446} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:95
#     if (method == 0)
	eq		$tmp56 in_interpolation_method $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h"} %line{95} %argrw{"wrr"}
	if		$tmp56 133 143 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:97
#         return "smartcubic";
	assign		$tmp55 $const30 	%line{97} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:99
#     else if (method == 1)
	eq		$tmp57 in_interpolation_method $const2 	%line{99} %argrw{"wrr"}
	if		$tmp57 137 143 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:101
#         return "cubic";
	assign		$tmp55 $const31 	%line{101} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:103
#     else if (method == 2)
	eq		$tmp58 in_interpolation_method $const9 	%line{103} %argrw{"wrr"}
	if		$tmp58 141 143 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:105
#         return "linear";
	assign		$tmp55 $const32 	%line{105} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/texture/as_texture_helpers.h:109
#         return "closest";
	assign		$tmp55 $const33 	%line{109} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:432
#         out_color = (color) texture(
	texture		out_color texname $tmp51 $tmp52 $const22 in_s_blur_amount $const23 in_t_blur_amount $const24 in_s_filter_width $const25 in_t_filter_width $const26 $tmp53 $const27 $tmp54 $const34 in_starting_channel $const35 in_color $const36 in_alpha $const37 out_alpha $const28 $tmp55 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{432} %argrw{"wrrrrrrrrrrrrrrrrrrrrrrwrr"} %argderivs{2,3}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:448
#         if (in_enable_cms && max(out_color) > 0.0)
	neq		$tmp59 in_enable_cms $const1 	%line{448} %argrw{"wrr"}
	if		$tmp59 155 155 	%argrw{"r"}
	functioncall	$const38 152 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp61 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp63 out_color $const2 	%argrw{"wrr"}
	compref		$tmp64 out_color $const9 	%argrw{"wrr"}
	max		$tmp62 $tmp63 $tmp64 	%argrw{"wrr"}
	max		$tmp60 $tmp61 $tmp62 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:448
#         if (in_enable_cms && max(out_color) > 0.0)
	gt		$tmp65 $tmp60 $const39 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{448} %argrw{"wrr"}
	neq		$tmp66 $tmp65 $const1 	%argrw{"wrr"}
	assign		$tmp59 $tmp66 	%argrw{"wr"}
	if		$tmp59 1597 1603 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:450
#             color linearized_color = color(0);
	assign		___753_linearized_color $const40 	%line{450} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:452
#             if (in_eotf == 0)
	eq		$tmp67 in_eotf $const1 	%line{452} %argrw{"wrr"}
	if		$tmp67 160 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:454
#                 linearized_color = out_color;
	assign		___753_linearized_color out_color 	%line{454} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:456
#             else if (in_eotf == 1)
	eq		$tmp68 in_eotf $const2 	%line{456} %argrw{"wrr"}
	if		$tmp68 200 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:458
#                 linearized_color = sRGB_EOTF(out_color);
	functioncall	$const41 200 	%line{458} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp70 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const41 175 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp71 $tmp70 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp71 170 174 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp72 $tmp70 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp73 $tmp72 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp73 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp74 $tmp70 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp74 173 174 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp70 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp69 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp76 out_color $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const41 187 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp77 $tmp76 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp77 182 186 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp78 $tmp76 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp79 $tmp78 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp79 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp80 $tmp76 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp80 185 186 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp76 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp75 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp82 out_color $const9 	%line{91} %argrw{"wrr"}
	functioncall	$const41 199 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp83 $tmp82 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp83 194 198 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp84 $tmp82 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp85 $tmp84 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp85 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp86 $tmp82 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp86 197 198 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp82 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp81 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___753_linearized_color $tmp69 $tmp75 $tmp81 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:460
#             else if (in_eotf == 2)
	eq		$tmp87 in_eotf $const9 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{460} %argrw{"wrr"}
	if		$tmp87 247 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:462
#                 linearized_color == Rec709_EOTF(out_color);
	functioncall	$const47 246 	%line{462} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:154
#         Rec709_EOTF(value[0]),
	compref		$tmp90 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{154} %argrw{"wrr"}
	functioncall	$const47 217 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp91 $tmp90 $const48 	%line{115} %argrw{"wrr"}
	if		$tmp91 211 216 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp92 $tmp90 $const49 	%line{117} %argrw{"wrr"}
	div		$tmp93 $tmp92 $const50 	%argrw{"wrr"}
	div		$tmp94 $const52 $const51 	%argrw{"wrr"}
	pow		___382_linear_out $tmp93 $tmp94 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp95 $tmp90 $const1 	%line{119} %argrw{"wrr"}
	if		$tmp95 215 216 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp96 $const52 $const53 	%line{121} %argrw{"wrr"}
	mul		___382_linear_out $tmp96 $tmp90 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___382_linear_out $const1 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp89 ___382_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:155
#         Rec709_EOTF(value[1]),
	compref		$tmp98 out_color $const2 	%line{155} %argrw{"wrr"}
	functioncall	$const47 231 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp99 $tmp98 $const48 	%line{115} %argrw{"wrr"}
	if		$tmp99 225 230 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp100 $tmp98 $const49 	%line{117} %argrw{"wrr"}
	div		$tmp101 $tmp100 $const50 	%argrw{"wrr"}
	div		$tmp102 $const52 $const51 	%argrw{"wrr"}
	pow		___382_linear_out $tmp101 $tmp102 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp103 $tmp98 $const1 	%line{119} %argrw{"wrr"}
	if		$tmp103 229 230 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp104 $const52 $const53 	%line{121} %argrw{"wrr"}
	mul		___382_linear_out $tmp104 $tmp98 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___382_linear_out $const1 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp97 ___382_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:156
#         Rec709_EOTF(value[2]));
	compref		$tmp106 out_color $const9 	%line{156} %argrw{"wrr"}
	functioncall	$const47 245 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:115
#     if (value > 0.081)
	gt		$tmp107 $tmp106 $const48 	%line{115} %argrw{"wrr"}
	if		$tmp107 239 244 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:117
#         linear_out = pow((value + 0.099) / 1.099, (1 / 0.45));
	add		$tmp108 $tmp106 $const49 	%line{117} %argrw{"wrr"}
	div		$tmp109 $tmp108 $const50 	%argrw{"wrr"}
	div		$tmp110 $const52 $const51 	%argrw{"wrr"}
	pow		___382_linear_out $tmp109 $tmp110 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:119
#     else if (value > 0)
	gt		$tmp111 $tmp106 $const1 	%line{119} %argrw{"wrr"}
	if		$tmp111 243 244 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:121
#         linear_out = (1.0 / 4.5) * value;
	div		$tmp112 $const52 $const53 	%line{121} %argrw{"wrr"}
	mul		___382_linear_out $tmp112 $tmp106 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:125
#         linear_out = 0;
	assign		___382_linear_out $const1 	%line{125} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:128
#     return linear_out;
	assign		$tmp105 ___382_linear_out 	%line{128} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:153
#     return color(
	color		$tmp88 $tmp89 $tmp97 $tmp105 	%line{153} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:462
#                 linearized_color == Rec709_EOTF(out_color);
	eq		$tmp113 ___753_linearized_color $tmp88 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{462} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:464
#             else if (in_eotf == 3)
	eq		$tmp114 in_eotf $const11 	%line{464} %argrw{"wrr"}
	if		$tmp114 276 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:466
#                 linearized_color == gamma_CCTF(out_color, 2.2);
	functioncall	$const55 275 	%line{466} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp117 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 258 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp118 $tmp117 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp118 256 258 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp116 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp116 $tmp117 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp120 out_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp121 $tmp120 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp121 264 266 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp119 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp119 $tmp120 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp123 out_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 274 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp124 $tmp123 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp124 272 274 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp122 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp122 $tmp123 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		$tmp115 $tmp116 $tmp119 $tmp122 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:466
#                 linearized_color == gamma_CCTF(out_color, 2.2);
	eq		$tmp125 ___753_linearized_color $tmp115 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{466} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:468
#             else if (in_eotf == 4)
	eq		$tmp126 in_eotf $const56 	%line{468} %argrw{"wrr"}
	if		$tmp126 305 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:470
#                 linearized_color == gamma_CCTF(out_color, 2.4);
	functioncall	$const55 304 	%line{470} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp129 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 287 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp130 $tmp129 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp130 285 287 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp128 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp128 $tmp129 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp132 out_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 295 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp133 $tmp132 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp133 293 295 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp131 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp131 $tmp132 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp135 out_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 303 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp136 $tmp135 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp136 301 303 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp134 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp134 $tmp135 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		$tmp127 $tmp128 $tmp131 $tmp134 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:470
#                 linearized_color == gamma_CCTF(out_color, 2.4);
	eq		$tmp137 ___753_linearized_color $tmp127 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{470} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:472
#             else if (in_eotf == 5)
	eq		$tmp138 in_eotf $const57 	%line{472} %argrw{"wrr"}
	if		$tmp138 334 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:474
#                 linearized_color == gamma_CCTF(out_color, DCIP3_GAMMA);
	functioncall	$const55 333 	%line{474} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp141 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 316 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp142 $tmp141 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp142 314 316 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp140 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp140 $tmp141 $const58 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp144 out_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 324 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp145 $tmp144 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp145 322 324 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp143 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp143 $tmp144 $const58 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp147 out_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 332 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp148 $tmp147 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp148 330 332 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp146 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp146 $tmp147 $const58 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		$tmp139 $tmp140 $tmp143 $tmp146 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:474
#                 linearized_color == gamma_CCTF(out_color, DCIP3_GAMMA);
	eq		$tmp149 ___753_linearized_color $tmp139 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{474} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:476
#             else if (in_eotf == 6)
	eq		$tmp150 in_eotf $const59 	%line{476} %argrw{"wrr"}
	if		$tmp150 359 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:478
#                 linearized_color = Rec1886_EOTF(out_color);
	functioncall	$const60 359 	%line{478} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp152 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const60 344 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp153 $tmp152 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp153 342 343 	%argrw{"r"}
	pow		$tmp151 $tmp152 $const45 	%argrw{"wrr"}
	assign		$tmp151 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp155 out_color $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const60 351 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp156 $tmp155 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp156 349 350 	%argrw{"r"}
	pow		$tmp154 $tmp155 $const45 	%argrw{"wrr"}
	assign		$tmp154 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp158 out_color $const9 	%line{311} %argrw{"wrr"}
	functioncall	$const60 358 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp159 $tmp158 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp159 356 357 	%argrw{"r"}
	pow		$tmp157 $tmp158 $const45 	%argrw{"wrr"}
	assign		$tmp157 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___753_linearized_color $tmp151 $tmp154 $tmp157 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:480
#             else if (in_eotf == 7)
	eq		$tmp160 in_eotf $const61 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{480} %argrw{"wrr"}
	if		$tmp160 425 426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:482
#                 linearized_color == Rec2020_EOTF(out_color);
	functioncall	$const62 424 	%line{482} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:266
#     return Rec2020_EOTF(value, 12);
	functioncall	$const62 424 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{266} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:251
#         Rec2020_EOTF(value[0], bitdepth),
	compref		$tmp163 out_color $const1 	%line{251} %argrw{"wrr"}
	functioncall	$const62 383 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp164 $tmp163 $const1 	%line{180} %argrw{"wrr"}
	if		$tmp164 381 382 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp165 $const63 $const64 	%line{184} %argrw{"wrr"}
	if		$tmp165 371 373 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___393_alpha $const50 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___393_beta $const65 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___393_alpha $const66 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___393_beta $const67 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp166 $tmp163 ___393_beta 	%line{195} %argrw{"wrr"}
	if		$tmp166 376 381 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___392_linear_out $tmp163 $const53 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp167 ___393_alpha $const52 	%line{201} %argrw{"wrr"}
	add		$tmp168 $tmp163 $tmp167 	%argrw{"wrr"}
	div		$tmp169 $tmp168 ___393_alpha 	%argrw{"wrr"}
	div		$tmp170 $const52 $const51 	%argrw{"wrr"}
	pow		___392_linear_out $tmp169 $tmp170 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___392_linear_out $const1 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp162 ___392_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:252
#         Rec2020_EOTF(value[1], bitdepth),
	compref		$tmp172 out_color $const2 	%line{252} %argrw{"wrr"}
	functioncall	$const62 403 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp173 $tmp172 $const1 	%line{180} %argrw{"wrr"}
	if		$tmp173 401 402 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp174 $const63 $const64 	%line{184} %argrw{"wrr"}
	if		$tmp174 391 393 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___393_alpha $const50 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___393_beta $const65 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___393_alpha $const66 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___393_beta $const67 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp175 $tmp172 ___393_beta 	%line{195} %argrw{"wrr"}
	if		$tmp175 396 401 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___392_linear_out $tmp172 $const53 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp176 ___393_alpha $const52 	%line{201} %argrw{"wrr"}
	add		$tmp177 $tmp172 $tmp176 	%argrw{"wrr"}
	div		$tmp178 $tmp177 ___393_alpha 	%argrw{"wrr"}
	div		$tmp179 $const52 $const51 	%argrw{"wrr"}
	pow		___392_linear_out $tmp178 $tmp179 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___392_linear_out $const1 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp171 ___392_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:253
#         Rec2020_EOTF(value[2], bitdepth));
	compref		$tmp181 out_color $const9 	%line{253} %argrw{"wrr"}
	functioncall	$const62 423 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:180
#     if (value > 0)
	gt		$tmp182 $tmp181 $const1 	%line{180} %argrw{"wrr"}
	if		$tmp182 421 422 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:184
#         if (bitdepth == 10)
	eq		$tmp183 $const63 $const64 	%line{184} %argrw{"wrr"}
	if		$tmp183 411 413 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:186
#             alpha = 1.099;
	assign		___393_alpha $const50 	%line{186} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:187
#             beta  = 0.018;
	assign		___393_beta $const65 	%line{187} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:191
#             alpha = 1.0993;
	assign		___393_alpha $const66 	%line{191} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:192
#             beta  = 0.0181;
	assign		___393_beta $const67 	%line{192} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:195
#         if (value < beta)
	lt		$tmp184 $tmp181 ___393_beta 	%line{195} %argrw{"wrr"}
	if		$tmp184 416 421 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:197
#             linear_out = value / 4.5;
	div		___392_linear_out $tmp181 $const53 	%line{197} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:201
#             linear_out = pow((value + (alpha - 1)) / alpha, 1 / 0.45);
	sub		$tmp185 ___393_alpha $const52 	%line{201} %argrw{"wrr"}
	add		$tmp186 $tmp181 $tmp185 	%argrw{"wrr"}
	div		$tmp187 $tmp186 ___393_alpha 	%argrw{"wrr"}
	div		$tmp188 $const52 $const51 	%argrw{"wrr"}
	pow		___392_linear_out $tmp187 $tmp188 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:206
#         linear_out = 0;
	assign		___392_linear_out $const1 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:209
#     return linear_out;
	assign		$tmp180 ___392_linear_out 	%line{209} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:250
#     return color(
	color		$tmp161 $tmp162 $tmp171 $tmp180 	%line{250} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:482
#                 linearized_color == Rec2020_EOTF(out_color);
	eq		$tmp189 ___753_linearized_color $tmp161 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{482} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:486
#                 linearized_color = color(0);
	assign		___753_linearized_color $const40 	%line{486} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:497
#             if (in_rgb_primaries != "Raw" && max(linearized_color) > 0.0)
	neq		$tmp190 in_rgb_primaries $const68 	%line{497} %argrw{"wrr"}
	neq		$tmp191 $tmp190 $const1 	%argrw{"wrr"}
	if		$tmp191 438 438 	%argrw{"r"}
	functioncall	$const38 435 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h:48
# float max(color C)  { return max(C[0], max(C[1], C[2])); }
	compref		$tmp193 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/as_osl_extensions.h"} %line{48} %argrw{"wrr"}
	compref		$tmp195 ___753_linearized_color $const2 	%argrw{"wrr"}
	compref		$tmp196 ___753_linearized_color $const9 	%argrw{"wrr"}
	max		$tmp194 $tmp195 $tmp196 	%argrw{"wrr"}
	max		$tmp192 $tmp193 $tmp194 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:497
#             if (in_rgb_primaries != "Raw" && max(linearized_color) > 0.0)
	gt		$tmp197 $tmp192 $const39 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{497} %argrw{"wrr"}
	neq		$tmp198 $tmp197 $const1 	%argrw{"wrr"}
	assign		$tmp191 $tmp198 	%argrw{"wr"}
	if		$tmp191 1552 1552 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:499
#                 linearized_color = transform_colorspace_to_workingspace(
	functioncall	$const69 1552 	%line{499} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp199 in_workingspace_rgb_primaries $const70 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{510} %argrw{"wrr"}
	neq		$tmp200 $tmp199 $const1 	%argrw{"wrr"}
	if		$tmp200 443 446 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:511
#         working_space == "sRGB/Rec.709")
	eq		$tmp201 in_workingspace_rgb_primaries $const71 	%line{511} %argrw{"wrr"}
	neq		$tmp202 $tmp201 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:510
#     if (working_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp200 $tmp202 	%line{510} %argrw{"wr"}
	if		$tmp200 647 1551 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:513
#         C = transform_color_space_to_Rec709(input_color, color_space);
	functioncall	$const72 647 	%line{513} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:47
#     vector v_color = vector(input_color);
	assign		___424_v_color ___753_linearized_color 	%line{47} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:49
#     if (color_space == "sRGB")
	eq		$tmp203 in_rgb_primaries $const73 	%line{49} %argrw{"wrr"}
	if		$tmp203 489 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:51
#         transformed_color = sRGB_EOTF(input_color);
	functioncall	$const41 489 	%line{51} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp205 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const41 464 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp206 $tmp205 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp206 459 463 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp207 $tmp205 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp208 $tmp207 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp208 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp209 $tmp205 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp209 462 463 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp205 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp204 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp211 ___753_linearized_color $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const41 476 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp212 $tmp211 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp212 471 475 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp213 $tmp211 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp214 $tmp213 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp214 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp215 $tmp211 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp215 474 475 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp211 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp210 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp217 ___753_linearized_color $const9 	%line{91} %argrw{"wrr"}
	functioncall	$const41 488 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp218 $tmp217 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp218 483 487 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp219 $tmp217 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp220 $tmp219 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp220 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp221 $tmp217 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp221 486 487 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp217 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp216 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___424_transformed_color $tmp204 $tmp210 $tmp216 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp222 in_rgb_primaries $const70 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{53} %argrw{"wrr"}
	neq		$tmp223 $tmp222 $const1 	%argrw{"wrr"}
	if		$tmp223 492 495 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:54
#              color_space == "sRGB/Rec.709")
	eq		$tmp224 in_rgb_primaries $const71 	%line{54} %argrw{"wrr"}
	neq		$tmp225 $tmp224 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:53
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp223 $tmp225 	%line{53} %argrw{"wr"}
	if		$tmp223 497 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:56
#         transformed_color = input_color;
	assign		___424_transformed_color ___753_linearized_color 	%line{56} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp226 in_rgb_primaries $const74 	%line{58} %argrw{"wrr"}
	neq		$tmp227 $tmp226 $const1 	%argrw{"wrr"}
	if		$tmp227 500 503 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:59
#              color_space == "Rec.2020")
	eq		$tmp228 in_rgb_primaries $const75 	%line{59} %argrw{"wrr"}
	neq		$tmp229 $tmp228 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:58
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp227 $tmp229 	%line{58} %argrw{"wr"}
	if		$tmp227 508 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:62
#             dot(vector(REC2020_TO_REC709_X), v_color),
	dot		$tmp230 $const76 ___424_v_color 	%line{62} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:63
#             dot(vector(REC2020_TO_REC709_Y), v_color),
	dot		$tmp232 $const77 ___424_v_color 	%line{63} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:64
#             dot(vector(REC2020_TO_REC709_Z), v_color));
	dot		$tmp234 $const78 ___424_v_color 	%line{64} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:61
#         transformed_color = color(
	color		___424_transformed_color $tmp230 $tmp232 $tmp234 	%line{61} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp236 in_rgb_primaries $const79 	%line{66} %argrw{"wrr"}
	neq		$tmp237 $tmp236 $const1 	%argrw{"wrr"}
	if		$tmp237 511 514 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:67
#              color_space == "DCI-P3")
	eq		$tmp238 in_rgb_primaries $const80 	%line{67} %argrw{"wrr"}
	neq		$tmp239 $tmp238 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:66
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp237 $tmp239 	%line{66} %argrw{"wr"}
	if		$tmp237 519 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:70
#             dot(vector(DCIP3_TO_REC709_X), v_color),
	dot		$tmp240 $const81 ___424_v_color 	%line{70} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:71
#             dot(vector(DCIP3_TO_REC709_Y), v_color),
	dot		$tmp242 $const82 ___424_v_color 	%line{71} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:72
#             dot(vector(DCIP3_TO_REC709_Z), v_color));
	dot		$tmp244 $const83 ___424_v_color 	%line{72} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:69
#         transformed_color = color(
	color		___424_transformed_color $tmp240 $tmp242 $tmp244 	%line{69} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:74
#     else if (color_space == "camera Rec 709")
	eq		$tmp246 in_rgb_primaries $const84 	%line{74} %argrw{"wrr"}
	if		$tmp246 544 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:76
#         transformed_color = Rec1886_EOTF(input_color);
	functioncall	$const60 544 	%line{76} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp248 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const60 529 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp249 $tmp248 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp249 527 528 	%argrw{"r"}
	pow		$tmp247 $tmp248 $const45 	%argrw{"wrr"}
	assign		$tmp247 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp251 ___753_linearized_color $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const60 536 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp252 $tmp251 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp252 534 535 	%argrw{"r"}
	pow		$tmp250 $tmp251 $const45 	%argrw{"wrr"}
	assign		$tmp250 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp254 ___753_linearized_color $const9 	%line{311} %argrw{"wrr"}
	functioncall	$const60 543 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp255 $tmp254 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp255 541 542 	%argrw{"r"}
	pow		$tmp253 $tmp254 $const45 	%argrw{"wrr"}
	assign		$tmp253 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___424_transformed_color $tmp247 $tmp250 $tmp253 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:78
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp256 in_rgb_primaries $const85 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{78} %argrw{"wrr"}
	if		$tmp256 572 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:80
#         transformed_color = gamma_CCTF(input_color, 1.8);
	functioncall	$const55 572 	%line{80} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp258 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 555 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp259 $tmp258 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp259 553 555 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp257 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp257 $tmp258 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp261 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp262 $tmp261 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp262 561 563 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp260 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp260 $tmp261 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp264 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 571 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp265 $tmp264 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp265 569 571 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp263 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp263 $tmp264 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___424_transformed_color $tmp257 $tmp260 $tmp263 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:82
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp266 in_rgb_primaries $const87 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{82} %argrw{"wrr"}
	if		$tmp266 600 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:84
#         transformed_color = gamma_CCTF(input_color, 2.2);
	functioncall	$const55 600 	%line{84} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp268 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 583 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp269 $tmp268 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp269 581 583 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp267 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp267 $tmp268 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp271 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 591 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp272 $tmp271 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp272 589 591 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp270 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp270 $tmp271 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp274 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 599 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp275 $tmp274 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp275 597 599 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp273 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp273 $tmp274 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___424_transformed_color $tmp267 $tmp270 $tmp273 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:86
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp276 in_rgb_primaries $const88 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{86} %argrw{"wrr"}
	if		$tmp276 628 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:88
#         transformed_color = gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const55 628 	%line{88} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp278 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 611 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp279 $tmp278 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp279 609 611 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp277 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp277 $tmp278 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp281 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 619 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp282 $tmp281 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp282 617 619 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp280 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp280 $tmp281 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp284 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 627 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp285 $tmp284 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp285 625 627 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp283 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp283 $tmp284 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___424_transformed_color $tmp277 $tmp280 $tmp283 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:90
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp286 in_rgb_primaries $const89 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{90} %argrw{"wrr"}
	neq		$tmp287 $tmp286 $const1 	%argrw{"wrr"}
	if		$tmp287 631 634 	%argrw{"r"}
	eq		$tmp288 in_rgb_primaries $const90 	%argrw{"wrr"}
	neq		$tmp289 $tmp288 $const1 	%argrw{"wrr"}
	assign		$tmp287 $tmp289 	%argrw{"wr"}
	if		$tmp287 639 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:93
#             dot(vector(ACES_TO_REC709_X), v_color),
	dot		$tmp290 $const91 ___424_v_color 	%line{93} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:94
#             dot(vector(ACES_TO_REC709_Y), v_color),
	dot		$tmp292 $const92 ___424_v_color 	%line{94} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:95
#             dot(vector(ACES_TO_REC709_Z), v_color));
	dot		$tmp294 $const93 ___424_v_color 	%line{95} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:92
#         transformed_color = color(
	color		___424_transformed_color $tmp290 $tmp292 $tmp294 	%line{92} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:97
#     else if (color_space == "ACEScg")
	eq		$tmp296 in_rgb_primaries $const94 	%line{97} %argrw{"wrr"}
	if		$tmp296 645 646 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:100
#             dot(vector(ACESCG_TO_REC709_X), v_color),
	dot		$tmp297 $const95 ___424_v_color 	%line{100} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:101
#             dot(vector(ACESCG_TO_REC709_Y), v_color),
	dot		$tmp299 $const96 ___424_v_color 	%line{101} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:102
#             dot(vector(ACESCG_TO_REC709_Z), v_color));
	dot		$tmp301 $const97 ___424_v_color 	%line{102} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:99
#         transformed_color = color(
	color		___424_transformed_color $tmp297 $tmp299 $tmp301 	%line{99} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:106
#         transformed_color = color(0);
	assign		___424_transformed_color $const40 	%line{106} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:108
#     return transformed_color;
	assign		___484_C ___424_transformed_color 	%line{108} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	eq		$tmp303 in_workingspace_rgb_primaries $const74 	%line{515} %argrw{"wrr"}
	neq		$tmp304 $tmp303 $const1 	%argrw{"wrr"}
	if		$tmp304 650 653 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:516
#              working_space == "Rec.2020")
	eq		$tmp305 in_workingspace_rgb_primaries $const75 	%line{516} %argrw{"wrr"}
	neq		$tmp306 $tmp305 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:515
#     else if (working_space == "scene-linear Rec 2020" ||
	assign		$tmp304 $tmp306 	%line{515} %argrw{"wr"}
	if		$tmp304 874 1551 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:518
#         C = transform_color_space_to_Rec2020(input_color, color_space);
	functioncall	$const98 874 	%line{518} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:120
#     vector v_color = vector(input_color);
	assign		___436_v_color ___753_linearized_color 	%line{120} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:122
#     if (color_space == "sRGB")
	eq		$tmp307 in_rgb_primaries $const73 	%line{122} %argrw{"wrr"}
	if		$tmp307 700 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:124
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const41 696 	%line{124} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp309 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const41 671 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp310 $tmp309 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp310 666 670 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp311 $tmp309 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp312 $tmp311 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp312 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp313 $tmp309 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp313 669 670 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp309 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp308 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp315 ___753_linearized_color $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const41 683 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp316 $tmp315 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp316 678 682 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp317 $tmp315 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp318 $tmp317 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp318 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp319 $tmp315 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp319 681 682 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp315 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp314 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp321 ___753_linearized_color $const9 	%line{91} %argrw{"wrr"}
	functioncall	$const41 695 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp322 $tmp321 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp322 690 694 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp323 $tmp321 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp324 $tmp323 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp324 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp325 $tmp321 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp325 693 694 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp321 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp320 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___436_v_color $tmp308 $tmp314 $tmp320 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:127
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp326 $const99 ___436_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{127} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:128
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp328 $const100 ___436_v_color 	%line{128} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:129
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp330 $const101 ___436_v_color 	%line{129} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:126
#         transformed_color = color(
	color		___436_transformed_color $tmp326 $tmp328 $tmp330 	%line{126} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp332 in_rgb_primaries $const70 	%line{131} %argrw{"wrr"}
	neq		$tmp333 $tmp332 $const1 	%argrw{"wrr"}
	if		$tmp333 703 706 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:132
#              color_space == "sRGB/Rec.709")
	eq		$tmp334 in_rgb_primaries $const71 	%line{132} %argrw{"wrr"}
	neq		$tmp335 $tmp334 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:131
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp333 $tmp335 	%line{131} %argrw{"wr"}
	if		$tmp333 711 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:135
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp336 $const99 ___436_v_color 	%line{135} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:136
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp338 $const100 ___436_v_color 	%line{136} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:137
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp340 $const101 ___436_v_color 	%line{137} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:134
#         transformed_color = color(
	color		___436_transformed_color $tmp336 $tmp338 $tmp340 	%line{134} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp342 in_rgb_primaries $const74 	%line{139} %argrw{"wrr"}
	neq		$tmp343 $tmp342 $const1 	%argrw{"wrr"}
	if		$tmp343 714 717 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:140
#              color_space == "Rec.2020")
	eq		$tmp344 in_rgb_primaries $const75 	%line{140} %argrw{"wrr"}
	neq		$tmp345 $tmp344 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:139
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp343 $tmp345 	%line{139} %argrw{"wr"}
	if		$tmp343 719 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:142
#         transformed_color = input_color;
	assign		___436_transformed_color ___753_linearized_color 	%line{142} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp346 in_rgb_primaries $const79 	%line{144} %argrw{"wrr"}
	neq		$tmp347 $tmp346 $const1 	%argrw{"wrr"}
	if		$tmp347 722 725 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:145
#              color_space == "DCI-P3")
	eq		$tmp348 in_rgb_primaries $const80 	%line{145} %argrw{"wrr"}
	neq		$tmp349 $tmp348 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:144
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp347 $tmp349 	%line{144} %argrw{"wr"}
	if		$tmp347 730 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:148
#             dot(vector(DCIP3_TO_REC2020_X), v_color),
	dot		$tmp350 $const102 ___436_v_color 	%line{148} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:149
#             dot(vector(DCIP3_TO_REC2020_Y), v_color),
	dot		$tmp352 $const103 ___436_v_color 	%line{149} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:150
#             dot(vector(DCIP3_TO_REC2020_Z), v_color));
	dot		$tmp354 $const104 ___436_v_color 	%line{150} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:147
#         transformed_color = color(
	color		___436_transformed_color $tmp350 $tmp352 $tmp354 	%line{147} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:152
#     else if (color_space == "camera Rec 709")
	eq		$tmp356 in_rgb_primaries $const84 	%line{152} %argrw{"wrr"}
	if		$tmp356 759 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:154
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const60 755 	%line{154} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp358 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const60 740 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp359 $tmp358 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp359 738 739 	%argrw{"r"}
	pow		$tmp357 $tmp358 $const45 	%argrw{"wrr"}
	assign		$tmp357 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp361 ___753_linearized_color $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const60 747 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp362 $tmp361 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp362 745 746 	%argrw{"r"}
	pow		$tmp360 $tmp361 $const45 	%argrw{"wrr"}
	assign		$tmp360 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp364 ___753_linearized_color $const9 	%line{311} %argrw{"wrr"}
	functioncall	$const60 754 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp365 $tmp364 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp365 752 753 	%argrw{"r"}
	pow		$tmp363 $tmp364 $const45 	%argrw{"wrr"}
	assign		$tmp363 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___436_v_color $tmp357 $tmp360 $tmp363 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:157
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp366 $const99 ___436_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{157} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:158
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp368 $const100 ___436_v_color 	%line{158} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:159
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp370 $const101 ___436_v_color 	%line{159} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:156
#         transformed_color = color(
	color		___436_transformed_color $tmp366 $tmp368 $tmp370 	%line{156} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:161
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp372 in_rgb_primaries $const85 	%line{161} %argrw{"wrr"}
	if		$tmp372 791 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:163
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const55 787 	%line{163} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp374 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 770 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp375 $tmp374 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp375 768 770 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp373 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp373 $tmp374 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp377 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 778 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp378 $tmp377 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp378 776 778 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp376 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp376 $tmp377 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp380 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 786 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp381 $tmp380 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp381 784 786 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp379 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp379 $tmp380 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___436_v_color $tmp373 $tmp376 $tmp379 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:166
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp382 $const99 ___436_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{166} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:167
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp384 $const100 ___436_v_color 	%line{167} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:168
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp386 $const101 ___436_v_color 	%line{168} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:165
#         transformed_color = color(
	color		___436_transformed_color $tmp382 $tmp384 $tmp386 	%line{165} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:170
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp388 in_rgb_primaries $const87 	%line{170} %argrw{"wrr"}
	if		$tmp388 823 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:172
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const55 819 	%line{172} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp390 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 802 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp391 $tmp390 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp391 800 802 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp389 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp389 $tmp390 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp393 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 810 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp394 $tmp393 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp394 808 810 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp392 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp392 $tmp393 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp396 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 818 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp397 $tmp396 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp397 816 818 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp395 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp395 $tmp396 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___436_v_color $tmp389 $tmp392 $tmp395 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:175
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp398 $const99 ___436_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{175} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:176
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp400 $const100 ___436_v_color 	%line{176} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:177
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp402 $const101 ___436_v_color 	%line{177} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:174
#         transformed_color = color(
	color		___436_transformed_color $tmp398 $tmp400 $tmp402 	%line{174} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:179
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp404 in_rgb_primaries $const88 	%line{179} %argrw{"wrr"}
	if		$tmp404 855 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:181
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const55 851 	%line{181} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp406 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 834 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp407 $tmp406 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp407 832 834 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp405 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp405 $tmp406 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp409 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 842 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp410 $tmp409 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp410 840 842 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp408 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp408 $tmp409 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp412 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 850 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp413 $tmp412 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp413 848 850 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp411 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp411 $tmp412 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___436_v_color $tmp405 $tmp408 $tmp411 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:184
#             dot(vector(REC709_TO_REC2020_X), v_color),
	dot		$tmp414 $const99 ___436_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{184} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:185
#             dot(vector(REC709_TO_REC2020_Y), v_color),
	dot		$tmp416 $const100 ___436_v_color 	%line{185} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:186
#             dot(vector(REC709_TO_REC2020_Z), v_color));
	dot		$tmp418 $const101 ___436_v_color 	%line{186} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:183
#         transformed_color = color(
	color		___436_transformed_color $tmp414 $tmp416 $tmp418 	%line{183} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:188
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp420 in_rgb_primaries $const89 	%line{188} %argrw{"wrr"}
	neq		$tmp421 $tmp420 $const1 	%argrw{"wrr"}
	if		$tmp421 858 861 	%argrw{"r"}
	eq		$tmp422 in_rgb_primaries $const90 	%argrw{"wrr"}
	neq		$tmp423 $tmp422 $const1 	%argrw{"wrr"}
	assign		$tmp421 $tmp423 	%argrw{"wr"}
	if		$tmp421 866 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:191
#             dot(vector(ACES_TO_REC2020_X), v_color),
	dot		$tmp424 $const105 ___436_v_color 	%line{191} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:192
#             dot(vector(ACES_TO_REC2020_Y), v_color),
	dot		$tmp426 $const106 ___436_v_color 	%line{192} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:193
#             dot(vector(ACES_TO_REC2020_Z), v_color));
	dot		$tmp428 $const107 ___436_v_color 	%line{193} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:190
#         transformed_color = color(
	color		___436_transformed_color $tmp424 $tmp426 $tmp428 	%line{190} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:195
#     else if (color_space == "ACEScg")
	eq		$tmp430 in_rgb_primaries $const94 	%line{195} %argrw{"wrr"}
	if		$tmp430 872 873 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:198
#             dot(vector(ACESCG_TO_REC2020_X), v_color),
	dot		$tmp431 $const108 ___436_v_color 	%line{198} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:199
#             dot(vector(ACESCG_TO_REC2020_Y), v_color),
	dot		$tmp433 $const109 ___436_v_color 	%line{199} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:200
#             dot(vector(ACESCG_TO_REC2020_Z), v_color));
	dot		$tmp435 $const110 ___436_v_color 	%line{200} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:197
#         transformed_color = color(
	color		___436_transformed_color $tmp431 $tmp433 $tmp435 	%line{197} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:204
#         transformed_color = color(0);
	assign		___436_transformed_color $const40 	%line{204} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:206
#     return transformed_color;
	assign		___484_C ___436_transformed_color 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	eq		$tmp437 in_workingspace_rgb_primaries $const79 	%line{520} %argrw{"wrr"}
	neq		$tmp438 $tmp437 $const1 	%argrw{"wrr"}
	if		$tmp438 877 880 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:521
#              working_space == "DCI-P3")
	eq		$tmp439 in_workingspace_rgb_primaries $const80 	%line{521} %argrw{"wrr"}
	neq		$tmp440 $tmp439 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:520
#     else if (working_space == "scene-linear DCI-P3" ||
	assign		$tmp438 $tmp440 	%line{520} %argrw{"wr"}
	if		$tmp438 1101 1551 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:523
#         C = transform_color_space_to_DCIP3(input_color, color_space);
	functioncall	$const111 1101 	%line{523} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:218
#     vector v_color = vector(input_color);
	assign		___448_v_color ___753_linearized_color 	%line{218} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:220
#     if (color_space == "sRGB")
	eq		$tmp441 in_rgb_primaries $const73 	%line{220} %argrw{"wrr"}
	if		$tmp441 927 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:222
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const41 923 	%line{222} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp443 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const41 898 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp444 $tmp443 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp444 893 897 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp445 $tmp443 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp446 $tmp445 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp446 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp447 $tmp443 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp447 896 897 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp443 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp442 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp449 ___753_linearized_color $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const41 910 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp450 $tmp449 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp450 905 909 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp451 $tmp449 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp452 $tmp451 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp452 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp453 $tmp449 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp453 908 909 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp449 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp448 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp455 ___753_linearized_color $const9 	%line{91} %argrw{"wrr"}
	functioncall	$const41 922 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp456 $tmp455 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp456 917 921 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp457 $tmp455 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp458 $tmp457 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp458 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp459 $tmp455 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp459 920 921 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp455 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp454 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___448_v_color $tmp442 $tmp448 $tmp454 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:225
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp460 $const112 ___448_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{225} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:226
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp462 $const113 ___448_v_color 	%line{226} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:227
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp464 $const114 ___448_v_color 	%line{227} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:224
#         transformed_color = color(
	color		___448_transformed_color $tmp460 $tmp462 $tmp464 	%line{224} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp466 in_rgb_primaries $const70 	%line{229} %argrw{"wrr"}
	neq		$tmp467 $tmp466 $const1 	%argrw{"wrr"}
	if		$tmp467 930 933 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:230
#              color_space == "sRGB/Rec.709")
	eq		$tmp468 in_rgb_primaries $const71 	%line{230} %argrw{"wrr"}
	neq		$tmp469 $tmp468 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:229
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp467 $tmp469 	%line{229} %argrw{"wr"}
	if		$tmp467 938 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:233
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp470 $const112 ___448_v_color 	%line{233} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:234
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp472 $const113 ___448_v_color 	%line{234} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:235
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp474 $const114 ___448_v_color 	%line{235} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:232
#         transformed_color = color(
	color		___448_transformed_color $tmp470 $tmp472 $tmp474 	%line{232} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp476 in_rgb_primaries $const74 	%line{237} %argrw{"wrr"}
	neq		$tmp477 $tmp476 $const1 	%argrw{"wrr"}
	if		$tmp477 941 944 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:238
#              color_space == "Rec.2020")
	eq		$tmp478 in_rgb_primaries $const75 	%line{238} %argrw{"wrr"}
	neq		$tmp479 $tmp478 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:237
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp477 $tmp479 	%line{237} %argrw{"wr"}
	if		$tmp477 949 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:241
#             dot(vector(REC2020_TO_DCIP3_X), v_color),
	dot		$tmp480 $const115 ___448_v_color 	%line{241} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:242
#             dot(vector(REC2020_TO_DCIP3_Y), v_color),
	dot		$tmp482 $const116 ___448_v_color 	%line{242} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:243
#             dot(vector(REC2020_TO_DCIP3_Z), v_color));
	dot		$tmp484 $const117 ___448_v_color 	%line{243} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:240
#         transformed_color = color(
	color		___448_transformed_color $tmp480 $tmp482 $tmp484 	%line{240} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp486 in_rgb_primaries $const79 	%line{245} %argrw{"wrr"}
	neq		$tmp487 $tmp486 $const1 	%argrw{"wrr"}
	if		$tmp487 952 955 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:246
#              color_space == "DCI-P3")
	eq		$tmp488 in_rgb_primaries $const80 	%line{246} %argrw{"wrr"}
	neq		$tmp489 $tmp488 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:245
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp487 $tmp489 	%line{245} %argrw{"wr"}
	if		$tmp487 957 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:248
#         transformed_color = input_color;
	assign		___448_transformed_color ___753_linearized_color 	%line{248} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:250
#     else if (color_space == "camera Rec 709")
	eq		$tmp490 in_rgb_primaries $const84 	%line{250} %argrw{"wrr"}
	if		$tmp490 986 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:252
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const60 982 	%line{252} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp492 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const60 967 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp493 $tmp492 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp493 965 966 	%argrw{"r"}
	pow		$tmp491 $tmp492 $const45 	%argrw{"wrr"}
	assign		$tmp491 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp495 ___753_linearized_color $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const60 974 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp496 $tmp495 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp496 972 973 	%argrw{"r"}
	pow		$tmp494 $tmp495 $const45 	%argrw{"wrr"}
	assign		$tmp494 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp498 ___753_linearized_color $const9 	%line{311} %argrw{"wrr"}
	functioncall	$const60 981 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp499 $tmp498 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp499 979 980 	%argrw{"r"}
	pow		$tmp497 $tmp498 $const45 	%argrw{"wrr"}
	assign		$tmp497 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___448_v_color $tmp491 $tmp494 $tmp497 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:255
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp500 $const112 ___448_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{255} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:256
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp502 $const113 ___448_v_color 	%line{256} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:257
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp504 $const114 ___448_v_color 	%line{257} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:254
#         transformed_color = color(
	color		___448_transformed_color $tmp500 $tmp502 $tmp504 	%line{254} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:259
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp506 in_rgb_primaries $const85 	%line{259} %argrw{"wrr"}
	if		$tmp506 1018 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:261
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const55 1014 	%line{261} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp508 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 997 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp509 $tmp508 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp509 995 997 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp507 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp507 $tmp508 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp511 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1005 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp512 $tmp511 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp512 1003 1005 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp510 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp510 $tmp511 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp514 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1013 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp515 $tmp514 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp515 1011 1013 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp513 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp513 $tmp514 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___448_v_color $tmp507 $tmp510 $tmp513 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:264
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp516 $const112 ___448_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{264} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:265
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp518 $const113 ___448_v_color 	%line{265} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:266
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp520 $const114 ___448_v_color 	%line{266} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:263
#         transformed_color = color(
	color		___448_transformed_color $tmp516 $tmp518 $tmp520 	%line{263} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:268
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp522 in_rgb_primaries $const87 	%line{268} %argrw{"wrr"}
	if		$tmp522 1050 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:270
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const55 1046 	%line{270} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp524 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1029 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp525 $tmp524 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp525 1027 1029 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp523 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp523 $tmp524 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp527 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1037 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp528 $tmp527 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp528 1035 1037 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp526 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp526 $tmp527 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp530 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1045 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp531 $tmp530 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp531 1043 1045 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp529 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp529 $tmp530 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___448_v_color $tmp523 $tmp526 $tmp529 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:273
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp532 $const112 ___448_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{273} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:274
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp534 $const113 ___448_v_color 	%line{274} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:275
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp536 $const114 ___448_v_color 	%line{275} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:272
#         transformed_color = color(
	color		___448_transformed_color $tmp532 $tmp534 $tmp536 	%line{272} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:277
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp538 in_rgb_primaries $const88 	%line{277} %argrw{"wrr"}
	if		$tmp538 1082 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:279
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const55 1078 	%line{279} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp540 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1061 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp541 $tmp540 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp541 1059 1061 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp539 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp539 $tmp540 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp543 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1069 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp544 $tmp543 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp544 1067 1069 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp542 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp542 $tmp543 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp546 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1077 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp547 $tmp546 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp547 1075 1077 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp545 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp545 $tmp546 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___448_v_color $tmp539 $tmp542 $tmp545 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:282
#             dot(vector(REC709_TO_DCIP3_X), v_color),
	dot		$tmp548 $const112 ___448_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{282} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:283
#             dot(vector(REC709_TO_DCIP3_Y), v_color),
	dot		$tmp550 $const113 ___448_v_color 	%line{283} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:284
#             dot(vector(REC709_TO_DCIP3_Z), v_color));
	dot		$tmp552 $const114 ___448_v_color 	%line{284} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:281
#         transformed_color = color(
	color		___448_transformed_color $tmp548 $tmp550 $tmp552 	%line{281} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:286
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp554 in_rgb_primaries $const89 	%line{286} %argrw{"wrr"}
	neq		$tmp555 $tmp554 $const1 	%argrw{"wrr"}
	if		$tmp555 1085 1088 	%argrw{"r"}
	eq		$tmp556 in_rgb_primaries $const90 	%argrw{"wrr"}
	neq		$tmp557 $tmp556 $const1 	%argrw{"wrr"}
	assign		$tmp555 $tmp557 	%argrw{"wr"}
	if		$tmp555 1093 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:289
#             dot(vector(ACES_TO_DCIP3_X), v_color),
	dot		$tmp558 $const118 ___448_v_color 	%line{289} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:290
#             dot(vector(ACES_TO_DCIP3_Y), v_color),
	dot		$tmp560 $const119 ___448_v_color 	%line{290} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:291
#             dot(vector(ACES_TO_DCIP3_Z), v_color));
	dot		$tmp562 $const120 ___448_v_color 	%line{291} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:288
#         transformed_color = color(
	color		___448_transformed_color $tmp558 $tmp560 $tmp562 	%line{288} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:293
#     else if (color_space == "ACEScg")
	eq		$tmp564 in_rgb_primaries $const94 	%line{293} %argrw{"wrr"}
	if		$tmp564 1099 1100 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:296
#             dot(vector(ACESCG_TO_DCIP3_X), v_color),
	dot		$tmp565 $const121 ___448_v_color 	%line{296} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:297
#             dot(vector(ACESCG_TO_DCIP3_Y), v_color),
	dot		$tmp567 $const122 ___448_v_color 	%line{297} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:298
#             dot(vector(ACESCG_TO_DCIP3_Z), v_color));
	dot		$tmp569 $const123 ___448_v_color 	%line{298} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:295
#         transformed_color = color(
	color		___448_transformed_color $tmp565 $tmp567 $tmp569 	%line{295} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:302
#         transformed_color = color(0);
	assign		___448_transformed_color $const40 	%line{302} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:304
#     return transformed_color;
	assign		___484_C ___448_transformed_color 	%line{304} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:525
#     else if (working_space == "ACES2065-1" || working_space == "ACES")
	eq		$tmp571 in_workingspace_rgb_primaries $const89 	%line{525} %argrw{"wrr"}
	neq		$tmp572 $tmp571 $const1 	%argrw{"wrr"}
	if		$tmp572 1104 1107 	%argrw{"r"}
	eq		$tmp573 in_workingspace_rgb_primaries $const90 	%argrw{"wrr"}
	neq		$tmp574 $tmp573 $const1 	%argrw{"wrr"}
	assign		$tmp572 $tmp574 	%argrw{"wr"}
	if		$tmp572 1328 1551 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:527
#         C = transform_color_space_to_ACES(input_color, color_space);
	functioncall	$const124 1328 	%line{527} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:316
#     vector v_color = vector(input_color);
	assign		___460_v_color ___753_linearized_color 	%line{316} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:318
#     if (color_space == "sRGB")
	eq		$tmp575 in_rgb_primaries $const73 	%line{318} %argrw{"wrr"}
	if		$tmp575 1154 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:320
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const41 1150 	%line{320} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp577 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const41 1125 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp578 $tmp577 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp578 1120 1124 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp579 $tmp577 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp580 $tmp579 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp580 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp581 $tmp577 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp581 1123 1124 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp577 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp576 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp583 ___753_linearized_color $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const41 1137 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp584 $tmp583 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp584 1132 1136 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp585 $tmp583 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp586 $tmp585 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp586 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp587 $tmp583 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp587 1135 1136 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp583 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp582 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp589 ___753_linearized_color $const9 	%line{91} %argrw{"wrr"}
	functioncall	$const41 1149 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp590 $tmp589 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp590 1144 1148 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp591 $tmp589 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp592 $tmp591 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp592 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp593 $tmp589 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp593 1147 1148 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp589 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp588 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___460_v_color $tmp576 $tmp582 $tmp588 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:323
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp594 $const125 ___460_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{323} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:324
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp596 $const126 ___460_v_color 	%line{324} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:325
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp598 $const127 ___460_v_color 	%line{325} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:322
#         transformed_color = color(
	color		___460_transformed_color $tmp594 $tmp596 $tmp598 	%line{322} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp600 in_rgb_primaries $const70 	%line{327} %argrw{"wrr"}
	neq		$tmp601 $tmp600 $const1 	%argrw{"wrr"}
	if		$tmp601 1157 1160 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:328
#              color_space == "sRGB/Rec.709")
	eq		$tmp602 in_rgb_primaries $const71 	%line{328} %argrw{"wrr"}
	neq		$tmp603 $tmp602 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:327
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp601 $tmp603 	%line{327} %argrw{"wr"}
	if		$tmp601 1165 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:331
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp604 $const125 ___460_v_color 	%line{331} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:332
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp606 $const126 ___460_v_color 	%line{332} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:333
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp608 $const127 ___460_v_color 	%line{333} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:330
#         transformed_color = color(
	color		___460_transformed_color $tmp604 $tmp606 $tmp608 	%line{330} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp610 in_rgb_primaries $const74 	%line{335} %argrw{"wrr"}
	neq		$tmp611 $tmp610 $const1 	%argrw{"wrr"}
	if		$tmp611 1168 1171 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:336
#              color_space == "Rec.2020")
	eq		$tmp612 in_rgb_primaries $const75 	%line{336} %argrw{"wrr"}
	neq		$tmp613 $tmp612 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:335
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp611 $tmp613 	%line{335} %argrw{"wr"}
	if		$tmp611 1176 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:339
#             dot(vector(REC2020_TO_ACES_X), v_color),
	dot		$tmp614 $const128 ___460_v_color 	%line{339} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:340
#             dot(vector(REC2020_TO_ACES_Y), v_color),
	dot		$tmp616 $const129 ___460_v_color 	%line{340} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:341
#             dot(vector(REC2020_TO_ACES_Z), v_color));
	dot		$tmp618 $const130 ___460_v_color 	%line{341} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:338
#         transformed_color = color(
	color		___460_transformed_color $tmp614 $tmp616 $tmp618 	%line{338} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp620 in_rgb_primaries $const79 	%line{343} %argrw{"wrr"}
	neq		$tmp621 $tmp620 $const1 	%argrw{"wrr"}
	if		$tmp621 1179 1182 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:344
#              color_space == "DCI-P3")
	eq		$tmp622 in_rgb_primaries $const80 	%line{344} %argrw{"wrr"}
	neq		$tmp623 $tmp622 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:343
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp621 $tmp623 	%line{343} %argrw{"wr"}
	if		$tmp621 1187 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:347
#             dot(vector(DCIP3_TO_ACES_X), v_color),
	dot		$tmp624 $const131 ___460_v_color 	%line{347} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:348
#             dot(vector(DCIP3_TO_ACES_Y), v_color),
	dot		$tmp626 $const132 ___460_v_color 	%line{348} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:349
#             dot(vector(DCIP3_TO_ACES_Z), v_color));
	dot		$tmp628 $const133 ___460_v_color 	%line{349} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:346
#         transformed_color = color(
	color		___460_transformed_color $tmp624 $tmp626 $tmp628 	%line{346} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:351
#     else if (color_space == "camera Rec 709")
	eq		$tmp630 in_rgb_primaries $const84 	%line{351} %argrw{"wrr"}
	if		$tmp630 1216 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:353
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const60 1212 	%line{353} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp632 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const60 1197 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp633 $tmp632 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp633 1195 1196 	%argrw{"r"}
	pow		$tmp631 $tmp632 $const45 	%argrw{"wrr"}
	assign		$tmp631 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp635 ___753_linearized_color $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const60 1204 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp636 $tmp635 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp636 1202 1203 	%argrw{"r"}
	pow		$tmp634 $tmp635 $const45 	%argrw{"wrr"}
	assign		$tmp634 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp638 ___753_linearized_color $const9 	%line{311} %argrw{"wrr"}
	functioncall	$const60 1211 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp639 $tmp638 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp639 1209 1210 	%argrw{"r"}
	pow		$tmp637 $tmp638 $const45 	%argrw{"wrr"}
	assign		$tmp637 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___460_v_color $tmp631 $tmp634 $tmp637 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:356
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp640 $const125 ___460_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{356} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:357
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp642 $const126 ___460_v_color 	%line{357} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:358
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp644 $const127 ___460_v_color 	%line{358} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:355
#         transformed_color = color(
	color		___460_transformed_color $tmp640 $tmp642 $tmp644 	%line{355} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:360
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp646 in_rgb_primaries $const85 	%line{360} %argrw{"wrr"}
	if		$tmp646 1248 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:362
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const55 1244 	%line{362} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp648 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1227 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp649 $tmp648 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp649 1225 1227 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp647 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp647 $tmp648 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp651 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1235 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp652 $tmp651 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp652 1233 1235 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp650 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp650 $tmp651 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp654 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1243 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp655 $tmp654 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp655 1241 1243 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp653 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp653 $tmp654 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___460_v_color $tmp647 $tmp650 $tmp653 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:365
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp656 $const125 ___460_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{365} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:366
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp658 $const126 ___460_v_color 	%line{366} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:367
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp660 $const127 ___460_v_color 	%line{367} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:364
#         transformed_color = color(
	color		___460_transformed_color $tmp656 $tmp658 $tmp660 	%line{364} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:369
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp662 in_rgb_primaries $const87 	%line{369} %argrw{"wrr"}
	if		$tmp662 1280 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:371
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const55 1276 	%line{371} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp664 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1259 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp665 $tmp664 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp665 1257 1259 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp663 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp663 $tmp664 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp667 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1267 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp668 $tmp667 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp668 1265 1267 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp666 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp666 $tmp667 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp670 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1275 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp671 $tmp670 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp671 1273 1275 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp669 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp669 $tmp670 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___460_v_color $tmp663 $tmp666 $tmp669 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:374
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp672 $const125 ___460_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{374} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:375
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp674 $const126 ___460_v_color 	%line{375} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:376
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp676 $const127 ___460_v_color 	%line{376} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:373
#         transformed_color = color(
	color		___460_transformed_color $tmp672 $tmp674 $tmp676 	%line{373} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:378
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp678 in_rgb_primaries $const88 	%line{378} %argrw{"wrr"}
	if		$tmp678 1312 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:380
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const55 1308 	%line{380} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp680 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1291 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp681 $tmp680 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp681 1289 1291 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp679 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp679 $tmp680 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp683 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1299 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp684 $tmp683 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp684 1297 1299 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp682 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp682 $tmp683 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp686 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1307 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp687 $tmp686 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp687 1305 1307 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp685 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp685 $tmp686 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___460_v_color $tmp679 $tmp682 $tmp685 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:383
#             dot(vector(REC709_TO_ACES_X), v_color),
	dot		$tmp688 $const125 ___460_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{383} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:384
#             dot(vector(REC709_TO_ACES_Y), v_color),
	dot		$tmp690 $const126 ___460_v_color 	%line{384} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:385
#             dot(vector(REC709_TO_ACES_Z), v_color));
	dot		$tmp692 $const127 ___460_v_color 	%line{385} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:382
#         transformed_color = color(
	color		___460_transformed_color $tmp688 $tmp690 $tmp692 	%line{382} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:387
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp694 in_rgb_primaries $const89 	%line{387} %argrw{"wrr"}
	neq		$tmp695 $tmp694 $const1 	%argrw{"wrr"}
	if		$tmp695 1315 1318 	%argrw{"r"}
	eq		$tmp696 in_rgb_primaries $const90 	%argrw{"wrr"}
	neq		$tmp697 $tmp696 $const1 	%argrw{"wrr"}
	assign		$tmp695 $tmp697 	%argrw{"wr"}
	if		$tmp695 1320 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:389
#         transformed_color = input_color;
	assign		___460_transformed_color ___753_linearized_color 	%line{389} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:391
#     else if (color_space == "ACEScg")
	eq		$tmp698 in_rgb_primaries $const94 	%line{391} %argrw{"wrr"}
	if		$tmp698 1326 1327 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:394
#             dot(vector(ACESCG_TO_ACES_X), v_color),
	dot		$tmp699 $const134 ___460_v_color 	%line{394} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:395
#             dot(vector(ACESCG_TO_ACES_Y), v_color),
	dot		$tmp701 $const135 ___460_v_color 	%line{395} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:396
#             dot(vector(ACESCG_TO_ACES_Z), v_color));
	dot		$tmp703 $const136 ___460_v_color 	%line{396} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:393
#         transformed_color = color(
	color		___460_transformed_color $tmp699 $tmp701 $tmp703 	%line{393} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:400
#         transformed_color = color(0);
	assign		___460_transformed_color $const40 	%line{400} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:402
#     return transformed_color;
	assign		___484_C ___460_transformed_color 	%line{402} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:529
#     else if (working_space == "ACEScg")
	eq		$tmp705 in_workingspace_rgb_primaries $const94 	%line{529} %argrw{"wrr"}
	if		$tmp705 1550 1551 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:531
#         C = transform_color_space_to_ACEScg(input_color, color_space);
	functioncall	$const137 1550 	%line{531} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:414
#     vector v_color = vector(input_color);
	assign		___472_v_color ___753_linearized_color 	%line{414} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:416
#     if (color_space == "sRGB")
	eq		$tmp706 in_rgb_primaries $const73 	%line{416} %argrw{"wrr"}
	if		$tmp706 1376 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:418
#         v_color = (vector) sRGB_EOTF(input_color);
	functioncall	$const41 1372 	%line{418} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:89
#         sRGB_EOTF(value[0]),
	compref		$tmp708 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{89} %argrw{"wrr"}
	functioncall	$const41 1347 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp709 $tmp708 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp709 1342 1346 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp710 $tmp708 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp711 $tmp710 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp711 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp712 $tmp708 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp712 1345 1346 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp708 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp707 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:90
#         sRGB_EOTF(value[1]),
	compref		$tmp714 ___753_linearized_color $const2 	%line{90} %argrw{"wrr"}
	functioncall	$const41 1359 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp715 $tmp714 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp715 1354 1358 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp716 $tmp714 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp717 $tmp716 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp717 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp718 $tmp714 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp718 1357 1358 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp714 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp713 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:91
#         sRGB_EOTF(value[2]));
	compref		$tmp720 ___753_linearized_color $const9 	%line{91} %argrw{"wrr"}
	functioncall	$const41 1371 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:51
#     if (value > 0.04045)
	gt		$tmp721 $tmp720 $const42 	%line{51} %argrw{"wrr"}
	if		$tmp721 1366 1370 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:53
#         linear_out = pow((value + 0.055) / 1.055, 2.4);
	add		$tmp722 $tmp720 $const43 	%line{53} %argrw{"wrr"}
	div		$tmp723 $tmp722 $const44 	%argrw{"wrr"}
	pow		___372_linear_out $tmp723 $const45 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:55
#     else if (value > 0)
	gt		$tmp724 $tmp720 $const1 	%line{55} %argrw{"wrr"}
	if		$tmp724 1369 1370 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:57
#         linear_out = value / 12.92;
	div		___372_linear_out $tmp720 $const46 	%line{57} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:61
#         linear_out = 0;
	assign		___372_linear_out $const1 	%line{61} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:64
#     return linear_out;
	assign		$tmp719 ___372_linear_out 	%line{64} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:88
#     return color(
	color		___472_v_color $tmp707 $tmp713 $tmp719 	%line{88} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:421
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp725 $const138 ___472_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{421} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:422
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp727 $const139 ___472_v_color 	%line{422} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:423
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp729 $const140 ___472_v_color 	%line{423} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:420
#         transformed_color = color(
	color		___472_transformed_color $tmp725 $tmp727 $tmp729 	%line{420} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	eq		$tmp731 in_rgb_primaries $const70 	%line{425} %argrw{"wrr"}
	neq		$tmp732 $tmp731 $const1 	%argrw{"wrr"}
	if		$tmp732 1379 1382 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:426
#              color_space == "sRGB/Rec.709")
	eq		$tmp733 in_rgb_primaries $const71 	%line{426} %argrw{"wrr"}
	neq		$tmp734 $tmp733 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:425
#     else if (color_space == "scene-linear Rec 709/sRGB" ||
	assign		$tmp732 $tmp734 	%line{425} %argrw{"wr"}
	if		$tmp732 1387 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:429
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp735 $const138 ___472_v_color 	%line{429} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:430
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp737 $const139 ___472_v_color 	%line{430} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:431
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp739 $const140 ___472_v_color 	%line{431} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:428
#         transformed_color = color(
	color		___472_transformed_color $tmp735 $tmp737 $tmp739 	%line{428} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	eq		$tmp741 in_rgb_primaries $const74 	%line{433} %argrw{"wrr"}
	neq		$tmp742 $tmp741 $const1 	%argrw{"wrr"}
	if		$tmp742 1390 1393 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:434
#              color_space == "Rec.2020")
	eq		$tmp743 in_rgb_primaries $const75 	%line{434} %argrw{"wrr"}
	neq		$tmp744 $tmp743 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:433
#     else if (color_space == "scene-linear Rec 2020" ||
	assign		$tmp742 $tmp744 	%line{433} %argrw{"wr"}
	if		$tmp742 1398 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:437
#             dot(vector(REC2020_TO_ACESCG_X), v_color),
	dot		$tmp745 $const141 ___472_v_color 	%line{437} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:438
#             dot(vector(REC2020_TO_ACESCG_Y), v_color),
	dot		$tmp747 $const142 ___472_v_color 	%line{438} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:439
#             dot(vector(REC2020_TO_ACESCG_Z), v_color));
	dot		$tmp749 $const143 ___472_v_color 	%line{439} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:436
#         transformed_color = color(
	color		___472_transformed_color $tmp745 $tmp747 $tmp749 	%line{436} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	eq		$tmp751 in_rgb_primaries $const79 	%line{441} %argrw{"wrr"}
	neq		$tmp752 $tmp751 $const1 	%argrw{"wrr"}
	if		$tmp752 1401 1404 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:442
#              color_space == "DCI-P3")
	eq		$tmp753 in_rgb_primaries $const80 	%line{442} %argrw{"wrr"}
	neq		$tmp754 $tmp753 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:441
#     else if (color_space == "scene-linear DCI-P3" ||
	assign		$tmp752 $tmp754 	%line{441} %argrw{"wr"}
	if		$tmp752 1409 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:445
#             dot(vector(DCIP3_TO_ACESCG_X), v_color),
	dot		$tmp755 $const144 ___472_v_color 	%line{445} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:446
#             dot(vector(DCIP3_TO_ACESCG_Y), v_color),
	dot		$tmp757 $const145 ___472_v_color 	%line{446} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:447
#             dot(vector(DCIP3_TO_ACESCG_Z), v_color));
	dot		$tmp759 $const146 ___472_v_color 	%line{447} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:444
#         transformed_color = color(
	color		___472_transformed_color $tmp755 $tmp757 $tmp759 	%line{444} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:449
#     else if (color_space == "camera Rec 709")
	eq		$tmp761 in_rgb_primaries $const84 	%line{449} %argrw{"wrr"}
	if		$tmp761 1438 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:451
#         v_color = (vector) Rec1886_EOTF(input_color);
	functioncall	$const60 1434 	%line{451} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:309
#         Rec1886_EOTF(value[0]),
	compref		$tmp763 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{309} %argrw{"wrr"}
	functioncall	$const60 1419 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp764 $tmp763 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp764 1417 1418 	%argrw{"r"}
	pow		$tmp762 $tmp763 $const45 	%argrw{"wrr"}
	assign		$tmp762 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:310
#         Rec1886_EOTF(value[1]),
	compref		$tmp766 ___753_linearized_color $const2 	%line{310} %argrw{"wrr"}
	functioncall	$const60 1426 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp767 $tmp766 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp767 1424 1425 	%argrw{"r"}
	pow		$tmp765 $tmp766 $const45 	%argrw{"wrr"}
	assign		$tmp765 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:311
#         Rec1886_EOTF(value[2]));
	compref		$tmp769 ___753_linearized_color $const9 	%line{311} %argrw{"wrr"}
	functioncall	$const60 1433 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:298
#     return (value > 0.0) ? pow(value, REC1886_GAMMA) : 0.0;
	gt		$tmp770 $tmp769 $const39 	%line{298} %argrw{"wrr"}
	if		$tmp770 1431 1432 	%argrw{"r"}
	pow		$tmp768 $tmp769 $const45 	%argrw{"wrr"}
	assign		$tmp768 $const39 	%argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:308
#     return color(
	color		___472_v_color $tmp762 $tmp765 $tmp768 	%line{308} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:454
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp771 $const138 ___472_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{454} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:455
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp773 $const139 ___472_v_color 	%line{455} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:456
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp775 $const140 ___472_v_color 	%line{456} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:453
#         transformed_color = color(
	color		___472_transformed_color $tmp771 $tmp773 $tmp775 	%line{453} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:458
#     else if (color_space == "gamma 1.8 Rec 709")
	eq		$tmp777 in_rgb_primaries $const85 	%line{458} %argrw{"wrr"}
	if		$tmp777 1470 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:460
#         v_color = (vector) gamma_CCTF(input_color, 1.8);
	functioncall	$const55 1466 	%line{460} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp779 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1449 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp780 $tmp779 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp780 1447 1449 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp778 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp778 $tmp779 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp782 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1457 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp783 $tmp782 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp783 1455 1457 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp781 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp781 $tmp782 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp785 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1465 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp786 $tmp785 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp786 1463 1465 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp784 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp784 $tmp785 $const86 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___472_v_color $tmp778 $tmp781 $tmp784 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:463
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp787 $const138 ___472_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{463} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:464
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp789 $const139 ___472_v_color 	%line{464} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:465
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp791 $const140 ___472_v_color 	%line{465} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:462
#         transformed_color = color(
	color		___472_transformed_color $tmp787 $tmp789 $tmp791 	%line{462} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:467
#     else if (color_space == "gamma 2.2 Rec 709")
	eq		$tmp793 in_rgb_primaries $const87 	%line{467} %argrw{"wrr"}
	if		$tmp793 1502 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:469
#         v_color = (vector) gamma_CCTF(input_color, 2.2);
	functioncall	$const55 1498 	%line{469} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp795 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1481 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp796 $tmp795 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp796 1479 1481 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp794 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp794 $tmp795 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp798 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1489 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp799 $tmp798 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp799 1487 1489 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp797 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp797 $tmp798 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp801 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1497 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp802 $tmp801 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp802 1495 1497 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp800 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp800 $tmp801 $const54 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___472_v_color $tmp794 $tmp797 $tmp800 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:472
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp803 $const138 ___472_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{472} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:473
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp805 $const139 ___472_v_color 	%line{473} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:474
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp807 $const140 ___472_v_color 	%line{474} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:471
#         transformed_color = color(
	color		___472_transformed_color $tmp803 $tmp805 $tmp807 	%line{471} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:476
#     else if (color_space == "gamma 2.4 Rec 709 (video)")
	eq		$tmp809 in_rgb_primaries $const88 	%line{476} %argrw{"wrr"}
	if		$tmp809 1534 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:478
#         v_color = (vector) gamma_CCTF(input_color, REC709_GAMMA);
	functioncall	$const55 1530 	%line{478} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:345
#         gamma_CCTF(value[0], gamma),
	compref		$tmp811 ___753_linearized_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h"} %line{345} %argrw{"wrr"}
	functioncall	$const55 1513 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp812 $tmp811 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp812 1511 1513 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp810 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp810 $tmp811 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:346
#         gamma_CCTF(value[1], gamma),
	compref		$tmp814 ___753_linearized_color $const2 	%line{346} %argrw{"wrr"}
	functioncall	$const55 1521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp815 $tmp814 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp815 1519 1521 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp813 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp813 $tmp814 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:347
#         gamma_CCTF(value[2], gamma));
	compref		$tmp817 ___753_linearized_color $const9 	%line{347} %argrw{"wrr"}
	functioncall	$const55 1529 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:332
#     if (value == 0)
	eq		$tmp818 $tmp817 $const1 	%line{332} %argrw{"wrr"}
	if		$tmp818 1527 1529 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:334
#         return 0;
	assign		$tmp816 $const1 	%line{334} %argrw{"wr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:338
#         return pow(value, gamma);
	pow		$tmp816 $tmp817 $const45 	%line{338} %argrw{"wrr"}
	return
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_transfer_functions.h:344
#     return color(
	color		___472_v_color $tmp810 $tmp813 $tmp816 	%line{344} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:481
#             dot(vector(REC709_TO_ACESCG_X), v_color),
	dot		$tmp819 $const138 ___472_v_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h"} %line{481} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:482
#             dot(vector(REC709_TO_ACESCG_Y), v_color),
	dot		$tmp821 $const139 ___472_v_color 	%line{482} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:483
#             dot(vector(REC709_TO_ACESCG_Z), v_color));
	dot		$tmp823 $const140 ___472_v_color 	%line{483} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:480
#         transformed_color = color(
	color		___472_transformed_color $tmp819 $tmp821 $tmp823 	%line{480} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:485
#     else if (color_space == "ACES2065-1" || color_space == "ACES")
	eq		$tmp825 in_rgb_primaries $const89 	%line{485} %argrw{"wrr"}
	neq		$tmp826 $tmp825 $const1 	%argrw{"wrr"}
	if		$tmp826 1537 1540 	%argrw{"r"}
	eq		$tmp827 in_rgb_primaries $const90 	%argrw{"wrr"}
	neq		$tmp828 $tmp827 $const1 	%argrw{"wrr"}
	assign		$tmp826 $tmp828 	%argrw{"wr"}
	if		$tmp826 1545 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:488
#             dot(vector(ACES_TO_ACESCG_X), v_color),
	dot		$tmp829 $const147 ___472_v_color 	%line{488} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:489
#             dot(vector(ACES_TO_ACESCG_Y), v_color),
	dot		$tmp831 $const148 ___472_v_color 	%line{489} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:490
#             dot(vector(ACES_TO_ACESCG_Z), v_color));
	dot		$tmp833 $const149 ___472_v_color 	%line{490} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:487
#         transformed_color = color(
	color		___472_transformed_color $tmp829 $tmp831 $tmp833 	%line{487} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:492
#     else if (color_space == "ACEScg")
	eq		$tmp835 in_rgb_primaries $const94 	%line{492} %argrw{"wrr"}
	if		$tmp835 1548 1549 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:494
#         transformed_color = input_color;
	assign		___472_transformed_color ___753_linearized_color 	%line{494} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:498
#         transformed_color = color(0);
	assign		___472_transformed_color $const40 	%line{498} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:500
#     return transformed_color;
	assign		___484_C ___472_transformed_color 	%line{500} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:535
#         C = color(0);
	assign		___484_C $const40 	%line{535} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/maya/as_maya_cms_syncolor_idt.h:537
#     return C;
	assign		___753_linearized_color ___484_C 	%line{537} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:505
#             out_color = linearized_color;
	assign		out_color ___753_linearized_color 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{505} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:510
#             out_channel = as_luminance(
	functioncall	$const150 1597 	%line{510} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:204
#     if (colorspace == "Rec.601")
	eq		$tmp836 in_workingspace_rgb_primaries $const151 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h"} %line{204} %argrw{"wrr"}
	if		$tmp836 1557 1586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:206
#         coeffs = color(REC601_D65_LUMINANCE_COEFFS);
	assign		___659_coeffs $const152 	%line{206} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:208
#     else if (colorspace == "Rec.709" || colorspace == "sRGB" ||
	eq		$tmp837 in_workingspace_rgb_primaries $const153 	%line{208} %argrw{"wrr"}
	neq		$tmp838 $tmp837 $const1 	%argrw{"wrr"}
	if		$tmp838 1560 1563 	%argrw{"r"}
	eq		$tmp839 in_workingspace_rgb_primaries $const73 	%argrw{"wrr"}
	neq		$tmp840 $tmp839 $const1 	%argrw{"wrr"}
	assign		$tmp838 $tmp840 	%argrw{"wr"}
	neq		$tmp841 $tmp838 $const1 	%argrw{"wrr"}
	if		$tmp841 1565 1568 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:209
#              colorspace == "sRGB/Rec.709")
	eq		$tmp842 in_workingspace_rgb_primaries $const71 	%line{209} %argrw{"wrr"}
	neq		$tmp843 $tmp842 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:208
#     else if (colorspace == "Rec.709" || colorspace == "sRGB" ||
	assign		$tmp841 $tmp843 	%line{208} %argrw{"wr"}
	if		$tmp841 1570 1586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:211
#         coeffs = color(REC709_D65_LUMINANCE_COEFFS);
	assign		___659_coeffs $const154 	%line{211} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:213
#     else if (colorspace == "AdobeRGB")
	eq		$tmp844 in_workingspace_rgb_primaries $const155 	%line{213} %argrw{"wrr"}
	if		$tmp844 1573 1586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:215
#         coeffs = color(ADOBERGB_D65_LUMINANCE_COEFFS);
	assign		___659_coeffs $const156 	%line{215} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:217
#     else if (colorspace == "Rec.2020")
	eq		$tmp845 in_workingspace_rgb_primaries $const75 	%line{217} %argrw{"wrr"}
	if		$tmp845 1576 1586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:219
#         coeffs = color(REC2020_D65_LUMINANCE_COEFFS);
	assign		___659_coeffs $const157 	%line{219} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:221
#     else if (colorspace == "ACES")
	eq		$tmp846 in_workingspace_rgb_primaries $const90 	%line{221} %argrw{"wrr"}
	if		$tmp846 1579 1586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:223
#         coeffs = color(ACES_D60_LUMINANCE_COEFFS);
	assign		___659_coeffs $const158 	%line{223} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:225
#     else if (colorspace == "ACEScg")
	eq		$tmp847 in_workingspace_rgb_primaries $const94 	%line{225} %argrw{"wrr"}
	if		$tmp847 1582 1586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:227
#         coeffs = color(ACESCG_D60_LUMINANCE_COEFFS);
	assign		___659_coeffs $const158 	%line{227} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:229
#     else if (colorspace == "DCI-P3")
	eq		$tmp848 in_workingspace_rgb_primaries $const80 	%line{229} %argrw{"wrr"}
	if		$tmp848 1585 1586 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:231
#         coeffs = color(DCIP3_DCI_LUMINANCE_COEFFS);
	assign		___659_coeffs $const159 	%line{231} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:235
#         coeffs = color(0);
	assign		___659_coeffs $const40 	%line{235} %argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:244
#     return coeffs[0] * in_C[0] +
	compref		$tmp849 ___659_coeffs $const1 	%line{244} %argrw{"wrr"}
	compref		$tmp850 ___753_linearized_color $const1 	%argrw{"wrr"}
	mul		$tmp851 $tmp849 $tmp850 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:245
#            coeffs[1] * in_C[1] +
	compref		$tmp852 ___659_coeffs $const2 	%line{245} %argrw{"wrr"}
	compref		$tmp853 ___753_linearized_color $const2 	%argrw{"wrr"}
	mul		$tmp854 $tmp852 $tmp853 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:244
#     return coeffs[0] * in_C[0] +
	add		$tmp855 $tmp851 $tmp854 	%line{244} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:246
#            coeffs[2] * in_C[2];
	compref		$tmp856 ___659_coeffs $const9 	%line{246} %argrw{"wrr"}
	compref		$tmp857 ___753_linearized_color $const9 	%argrw{"wrr"}
	mul		$tmp858 $tmp856 $tmp857 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/color/as_color_helpers.h:245
#            coeffs[1] * in_C[1] +
	add		out_channel $tmp855 $tmp858 	%line{245} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl:519
#             out_channel = (out_color[0] + out_color[1] + out_color[2]) / 3.0;
	compref		$tmp859 out_color $const1 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_texture.osl"} %line{519} %argrw{"wrr"}
	compref		$tmp860 out_color $const2 	%argrw{"wrr"}
	add		$tmp861 $tmp859 $tmp860 	%argrw{"wrr"}
	compref		$tmp862 out_color $const9 	%argrw{"wrr"}
	add		$tmp863 $tmp861 $tmp862 	%argrw{"wrr"}
	div		out_channel $tmp863 $const160 	%argrw{"wrr"}
	end

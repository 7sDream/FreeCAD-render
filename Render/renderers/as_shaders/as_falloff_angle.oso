OpenShadingLanguage 1.00
# Compiled by oslc 1.11.14
# options: -O2 -DNDEBUG -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/ -I/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include -o /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders/appleseed/as_falloff_angle.oso
shader as_falloff_angle	%meta{string,help,"Creates a ramp from the angle between two input vectors."} %meta{string,icon,"asFalloffAngle.png"} %meta{string,URL,"https://appleseed.readthedocs.io/projects/appleseed-maya/en/latest/shaders/utilities/as_falloff_angle.html"} %meta{string,as_node_name,"asFalloffAngle"} %meta{string,as_category,"utility"} %meta{string,as_max_class_id,"2015842098 354230760"} %meta{string,as_max_plugin_type,"texture"} %meta{int,as_maya_type_id,1210871} %meta{string,as_maya_classification,"drawdb/shader:rendernode/appleseed/utility"}
param	vector	in_vector_1	0 1 0		%meta{string,as_maya_attribute_name,"vector1"} %meta{string,as_maya_attribute_short_name,"v1"} %meta{string,label,"Vector 1"} %meta{string,page,"Input"}  %read{2,3} %write{2147483647,-1}
param	int	in_normalize_input_1	0		%meta{string,as_maya_attribute_name,"normalizeInput1"} %meta{string,as_maya_attribute_short_name,"ni1"} %meta{string,label,"Normalize Input 1"} %meta{string,page,"Input"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{1,1} %write{2147483647,-1}
param	vector	in_vector_2	0 0 0		%meta{string,as_maya_attribute_name,"vector2"} %meta{string,as_maya_attribute_short_name,"v2"} %meta{string,label,"Vector 2"} %meta{string,page,"Input"}  %read{5,6} %write{0,0} %initexpr
param	int	in_normalize_input_2	0		%meta{string,as_maya_attribute_name,"normalizeInput2"} %meta{string,as_maya_attribute_short_name,"ni2"} %meta{string,label,"Normalize Input 2"} %meta{string,page,"Input"} %meta{string,widget,"checkBox"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0} %meta{int,divider,1}  %read{4,4} %write{2147483647,-1}
param	float	in_smooth_lower_bound	0.25		%meta{string,as_maya_attribute_name,"smoothLowerBound"} %meta{string,as_maya_attribute_short_name,"slb"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Smoothstep Lower Bound"} %meta{string,page,"Interpolation"}  %read{11,30} %write{2147483647,-1}
param	float	in_smooth_upper_bound	0.75		%meta{string,as_maya_attribute_name,"smoothUpperBound"} %meta{string,as_maya_attribute_short_name,"sub"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Smoothstep Upper Bound"} %meta{string,page,"Interpolation"} %meta{int,divider,1}  %read{11,30} %write{2147483647,-1}
param	int	in_smooth_function	0		%meta{string,as_maya_attribute_name,"smoothFunction"} %meta{string,as_maya_attribute_short_name,"smo"} %meta{string,label,"Smoothstep Function"} %meta{string,page,"Interpolation"} %meta{string,widget,"mapper"} %meta{string,options,"Smooth step:0|Smoother step:1|Smoothest Step:2"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{9,12} %write{2147483647,-1}
oparam	float	out_result	0		%meta{string,as_maya_attribute_name,"result"} %meta{string,as_maya_attribute_short_name,"rel"} %meta{string,label,"Result"}  %read{2147483647,-1} %write{45,45}
global	normal	N	%read{0,0} %write{2147483647,-1}
local	float	___381_tmp	%read{21,25} %write{20,20}
local	float	___382_tmp	%read{35,42} %write{34,34}
local	vector	v1	%read{7,7} %write{2,3}
local	vector	v2	%read{7,7} %write{5,6}
local	float	angle	%read{8,8} %write{7,7}
local	float	x	%read{11,45} %write{8,44}
const	float	$const1	0		%read{8,34} %write{2147483647,-1}
const	int	$const2	0		%read{9,9} %write{2147483647,-1}
temp	int	$tmp1	%read{10,10} %write{9,9}
const	int	$const3	1		%read{12,12} %write{2147483647,-1}
temp	int	$tmp2	%read{13,13} %write{12,12}
const	string	$const4	"smootherstep"		%read{14,14} %write{2147483647,-1}
temp	float	$tmp3	%read{17,17} %write{15,15}
temp	float	$tmp4	%read{17,17} %write{16,16}
temp	float	$tmp5	%read{19,19} %write{17,17}
const	float	$const5	1		%read{19,33} %write{2147483647,-1}
const	string	$const6	"clamp"		%read{18,32} %write{2147483647,-1}
temp	float	$tmp6	%read{20,20} %write{19,19}
temp	float	$tmp7	%read{22,22} %write{21,21}
temp	float	$tmp8	%read{27,27} %write{22,22}
const	float	$const7	6		%read{23,23} %write{2147483647,-1}
temp	float	$tmp9	%read{24,24} %write{23,23}
const	float	$const8	15		%read{24,24} %write{2147483647,-1}
temp	float	$tmp10	%read{25,25} %write{24,24}
temp	float	$tmp11	%read{26,26} %write{25,25}
const	float	$const9	10		%read{26,26} %write{2147483647,-1}
temp	float	$tmp12	%read{27,27} %write{26,26}
const	string	$const10	"smootheststep"		%read{28,28} %write{2147483647,-1}
temp	float	$tmp13	%read{31,31} %write{29,29}
temp	float	$tmp14	%read{31,31} %write{30,30}
temp	float	$tmp15	%read{33,33} %write{31,31}
temp	float	$tmp16	%read{34,34} %write{33,33}
temp	float	$tmp17	%read{36,36} %write{35,35}
temp	float	$tmp18	%read{37,37} %write{36,36}
temp	float	$tmp19	%read{44,44} %write{37,37}
const	float	$const11	-20		%read{38,38} %write{2147483647,-1}
temp	float	$tmp20	%read{39,39} %write{38,38}
const	float	$const12	70		%read{39,39} %write{2147483647,-1}
temp	float	$tmp21	%read{40,40} %write{39,39}
temp	float	$tmp22	%read{41,41} %write{40,40}
const	float	$const13	84		%read{41,41} %write{2147483647,-1}
temp	float	$tmp23	%read{42,42} %write{41,41}
temp	float	$tmp24	%read{43,43} %write{42,42}
const	float	$const14	35		%read{43,43} %write{2147483647,-1}
temp	float	$tmp25	%read{44,44} %write{43,43}
code in_vector_2
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:68
#     vector in_vector_2 = vector(N)
	assign		in_vector_2 N 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl"} %line{68} %argrw{"wr"}
code ___main___
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:132
#         ? normalize(in_vector_1)
	if		in_normalize_input_1 3 4 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl"} %line{132} %argrw{"r"}
	normalize	v1 in_vector_1 	%argrw{"wr"}
	assign		v1 in_vector_1 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:136
#         ? normalize(in_vector_2)
	if		in_normalize_input_2 6 7 	%line{136} %argrw{"r"}
	normalize	v2 in_vector_2 	%argrw{"wr"}
	assign		v2 in_vector_2 	%argrw{"wr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:139
#     float angle = dot(v1, v2);
	dot		angle v1 v2 	%line{139} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:141
#     float x = max(0.0, angle);
	max		x $const1 angle 	%line{141} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:143
#     if (in_smooth_function == 0)
	eq		$tmp1 in_smooth_function $const2 	%line{143} %argrw{"wrr"}
	if		$tmp1 12 45 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:145
#         x = smoothstep(in_smooth_lower_bound, in_smooth_upper_bound, x);
	smoothstep	x in_smooth_lower_bound in_smooth_upper_bound x 	%line{145} %argrw{"wrrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:147
#     else if (in_smooth_function == 1)
	eq		$tmp2 in_smooth_function $const3 	%line{147} %argrw{"wrr"}
	if		$tmp2 28 45 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:149
#         x = smootherstep(in_smooth_lower_bound, in_smooth_upper_bound, x);
	functioncall	$const4 28 	%line{149} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h:173
#     float tmp = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
	sub		$tmp3 x in_smooth_lower_bound 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h"} %line{173} %argrw{"wrr"}
	sub		$tmp4 in_smooth_upper_bound in_smooth_lower_bound 	%argrw{"wrr"}
	div		$tmp5 $tmp3 $tmp4 	%argrw{"wrr"}
	functioncall	$const6 21 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp6 $tmp5 $const5 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{145} %argrw{"wrr"}
	max		___381_tmp $tmp6 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h:174
#     return tmp * tmp * tmp * (tmp * (tmp * 6.0 - 15.0) + 10.0);
	mul		$tmp7 ___381_tmp ___381_tmp 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h"} %line{174} %argrw{"wrr"}
	mul		$tmp8 $tmp7 ___381_tmp 	%argrw{"wrr"}
	mul		$tmp9 ___381_tmp $const7 	%argrw{"wrr"}
	sub		$tmp10 $tmp9 $const8 	%argrw{"wrr"}
	mul		$tmp11 ___381_tmp $tmp10 	%argrw{"wrr"}
	add		$tmp12 $tmp11 $const9 	%argrw{"wrr"}
	mul		x $tmp8 $tmp12 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:153
#         x = smootheststep(in_smooth_lower_bound, in_smooth_upper_bound, x);
	functioncall	$const10 45 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl"} %line{153} %argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h:179
#     float tmp = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
	sub		$tmp13 x in_smooth_lower_bound 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h"} %line{179} %argrw{"wrr"}
	sub		$tmp14 in_smooth_upper_bound in_smooth_lower_bound 	%argrw{"wrr"}
	div		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	functioncall	$const6 35 	%argrw{"r"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp16 $tmp15 $const5 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/sandbox/shaders//stdosl.h"} %line{145} %argrw{"wrr"}
	max		___382_tmp $tmp16 $const1 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h:180
#     return tmp * tmp * tmp * tmp *
	mul		$tmp17 ___382_tmp ___382_tmp 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h"} %line{180} %argrw{"wrr"}
	mul		$tmp18 $tmp17 ___382_tmp 	%argrw{"wrr"}
	mul		$tmp19 $tmp18 ___382_tmp 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h:181
#             (tmp * (tmp * (-20.0 * tmp + 70.0) - 84.0) + 35.0);
	mul		$tmp20 $const11 ___382_tmp 	%line{181} %argrw{"wrr"}
	add		$tmp21 $tmp20 $const12 	%argrw{"wrr"}
	mul		$tmp22 ___382_tmp $tmp21 	%argrw{"wrr"}
	sub		$tmp23 $tmp22 $const13 	%argrw{"wrr"}
	mul		$tmp24 ___382_tmp $tmp23 	%argrw{"wrr"}
	add		$tmp25 $tmp24 $const14 	%argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/include/appleseed/pattern/as_pattern_helpers.h:180
#     return tmp * tmp * tmp * tmp *
	mul		x $tmp19 $tmp25 	%line{180} %argrw{"wrr"}
# /var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl:156
#     out_result = x;
	assign		out_result x 	%filename{"/var/cache/private/pikaur/build/appleseed-git/src/appleseed-git/src/appleseed.shaders/src/appleseed/as_falloff_angle.osl"} %line{156} %argrw{"wr"}
	end
